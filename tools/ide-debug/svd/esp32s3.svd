<?xml version="1.0" encoding="UTF-8"?>
<device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd">
  <vendor>ESPRESSIF SYSTEMS (SHANGHAI) CO., LTD.</vendor>
  <vendorID>ESPRESSIF</vendorID>
  <name>ESP32-S3</name>
  <series>ESP32-S3</series>
  <version>12</version>
  <description>32-bit MCU &amp; 2.4 GHz Wi-Fi &amp; Bluetooth 5 (LE)</description>
  <licenseText>
    Copyright 2022 Espressif Systems (Shanghai) PTE LTD

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
</licenseText>
  <cpu>
    <name>Xtensa LX7</name>
    <revision>r0p0</revision>
    <endian>little</endian>
    <mpuPresent>false</mpuPresent>
    <fpuPresent>true</fpuPresent>
    <nvicPrioBits>3</nvicPrioBits>
    <vendorSystickConfig>false</vendorSystickConfig>
  </cpu>
  <addressUnitBits>32</addressUnitBits>
  <width>32</width>
  <resetValue>0x00000000</resetValue>
  <resetMask>0xFFFFFFFF</resetMask>
  <peripherals>
    <peripheral>
      <name>AES</name>
      <description>AES (Advanced Encryption Standard) Accelerator</description>
      <groupName>AES</groupName>
      <baseAddress>0x6003A000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xB8</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>AES</name>
        <value>77</value>
      </interrupt>
      <registers>
        <register>
          <dim>8</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>KEY_%s</name>
          <description>AES key register %s</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY_0</name>
              <description>Stores AES keys.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>TEXT_IN_%s</name>
          <description>Source data register %s</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TEXT_IN_0</name>
              <description>Stores the source data when the AES accelerator operates in the Typical AES working mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>TEXT_OUT_%s</name>
          <description>Result data register %s</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TEXT_OUT_0</name>
              <description>Stores the result data when the AES accelerator operates in the Typical AES working mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MODE</name>
          <description>AES Mode register</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MODE</name>
              <description>Defines the key length and the encryption/decryption of the AES accelerator.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRIGGER</name>
          <description>AES trigger register</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TRIGGER</name>
              <description>Set this bit to 1 to start AES calculation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATE</name>
          <description>AES state register</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>STATE</name>
              <description>Stores the working status of the AES accelerator. For typical AES, 0: idle, 1: busy. For DMA-AES, 0: idle, 1: busy, 2: calculation_done.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>16</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>IV_MEM[%s]</name>
          <description>The memory that stores initialization vector</description>
          <addressOffset>0x50</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <dim>16</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>H_MEM[%s]</name>
          <description>The memory that stores GCM hash subkey</description>
          <addressOffset>0x60</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <dim>16</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>J0_MEM[%s]</name>
          <description>The memory that stores J0</description>
          <addressOffset>0x70</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <dim>16</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>T0_MEM[%s]</name>
          <description>The memory that stores T0</description>
          <addressOffset>0x80</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <name>DMA_ENABLE</name>
          <description>AES accelerator working mode register</description>
          <addressOffset>0x90</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_ENABLE</name>
              <description>Defines the working mode of the AES accelerator. 1'b0: typical AES working mode, 1'b1: DMA-AES working mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BLOCK_MODE</name>
          <description>AES cipher block mode register</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BLOCK_MODE</name>
              <description>Defines the block cipher mode of the AES accelerator operating under the DMA-AES working mode. 0x0: ECB, 0x1: CBC, 0x2: OFB, 0x3: CTR, 0x4: CFB-8, 0x5: CFB-128, 0x6: reserved, 0x7: reserved.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BLOCK_NUM</name>
          <description>AES block number register</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BLOCK_NUM</name>
              <description>Stores the Block Number of plaintext or ciphertext when the AES accelerator operates under the DMA-AES working mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INC_SEL</name>
          <description>Standard incrementing function configure register</description>
          <addressOffset>0x9C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INC_SEL</name>
              <description>Defines the Standard Incrementing Function for CTR block operation. Set this bit to 0 or 1 to choose INC32 or INC128.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AAD_BLOCK_NUM</name>
          <description>Additional Authential Data block number register</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>AAD_BLOCK_NUM</name>
              <description>Those bits stores the number of AAD block.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAINDER_BIT_NUM</name>
          <description>AES remainder bit number register</description>
          <addressOffset>0xA4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>REMAINDER_BIT_NUM</name>
              <description>Those bits stores the number of remainder bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONTINUE</name>
          <description>AES continue register</description>
          <addressOffset>0xA8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CONTINUE</name>
              <description>Set this bit to 1 to continue GCM operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>AES Interrupt clear register</description>
          <addressOffset>0xAC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INT_CLEAR</name>
              <description>Set this bit to 1 to clear AES interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>DMA-AES Interrupt enable register</description>
          <addressOffset>0xB0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INT_ENA</name>
              <description>Set this bit to 1 to enable AES interrupt and 0 to disable interrupt. This field is only effective for DMA-AES operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>AES version control register</description>
          <addressOffset>0xB4</addressOffset>
          <size>0x20</size>
          <resetValue>0x20191210</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>This bits stores the version information of AES.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_EXIT</name>
          <description>AES-DMA exit config</description>
          <addressOffset>0xB8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_EXIT</name>
              <description>Set this bit to 1 to exit AES operation. This field is only effective for DMA-AES operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>APB_CTRL</name>
      <description>Advanced Peripheral Bus Controller</description>
      <groupName>APB_CTRL</groupName>
      <baseAddress>0x60026000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xCC</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>SYSCLK_CONF</name>
          <description>******* Description ***********</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>PRE_DIV_CNT</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_320M_EN</name>
              <description>******* Description ***********</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EN</name>
              <description>******* Description ***********</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RST_TICK_CNT</name>
              <description>******* Description ***********</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TICK_CONF</name>
          <description>******* Description ***********</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00010727</resetValue>
          <fields>
            <field>
              <name>XTAL_TICK_NUM</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK8M_TICK_NUM</name>
              <description>******* Description ***********</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TICK_ENABLE</name>
              <description>******* Description ***********</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLK_OUT_EN</name>
          <description>******* Description ***********</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <resetValue>0x000007FF</resetValue>
          <fields>
            <field>
              <name>CLK20_OEN</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK22_OEN</name>
              <description>******* Description ***********</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK44_OEN</name>
              <description>******* Description ***********</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_BB_OEN</name>
              <description>******* Description ***********</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK80_OEN</name>
              <description>******* Description ***********</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK160_OEN</name>
              <description>******* Description ***********</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_320M_OEN</name>
              <description>******* Description ***********</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_ADC_INF_OEN</name>
              <description>******* Description ***********</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_DAC_CPU_OEN</name>
              <description>******* Description ***********</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK40X_BB_OEN</name>
              <description>******* Description ***********</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_XTAL_OEN</name>
              <description>******* Description ***********</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WIFI_BB_CFG</name>
          <description>******* Description ***********</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>WIFI_BB_CFG</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WIFI_BB_CFG_2</name>
          <description>******* Description ***********</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>WIFI_BB_CFG_2</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WIFI_CLK_EN</name>
          <description>******* Description ***********</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFCE030</resetValue>
          <fields>
            <field>
              <name>WIFI_CLK_EN</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WIFI_RST_EN</name>
          <description>******* Description ***********</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>WIFI_RST</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HOST_INF_SEL</name>
          <description>******* Description ***********</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PERI_IO_SWAP</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXT_MEM_PMS_LOCK</name>
          <description>******* Description ***********</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EXT_MEM_PMS_LOCK</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXT_MEM_WRITEBACK_BYPASS</name>
          <description>******* Description ***********</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>WRITEBACK_BYPASS</name>
              <description>Set 1 to bypass cache writeback request to external memory so that spi will not check its attribute.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_ACE0_ATTR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <resetValue>0x000000FF</resetValue>
          <fields>
            <field>
              <name>FLASH_ACE0_ATTR</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_ACE1_ATTR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <resetValue>0x000000FF</resetValue>
          <fields>
            <field>
              <name>FLASH_ACE1_ATTR</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_ACE2_ATTR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <resetValue>0x000000FF</resetValue>
          <fields>
            <field>
              <name>FLASH_ACE2_ATTR</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_ACE3_ATTR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <resetValue>0x000000FF</resetValue>
          <fields>
            <field>
              <name>FLASH_ACE3_ATTR</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_ACE0_ADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>S</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_ACE1_ADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <resetValue>0x10000000</resetValue>
          <fields>
            <field>
              <name>S</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_ACE2_ADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <resetValue>0x20000000</resetValue>
          <fields>
            <field>
              <name>S</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_ACE3_ADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <resetValue>0x30000000</resetValue>
          <fields>
            <field>
              <name>S</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_ACE0_SIZE</name>
          <description>******* Description ***********</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <resetValue>0x00001000</resetValue>
          <fields>
            <field>
              <name>FLASH_ACE0_SIZE</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_ACE1_SIZE</name>
          <description>******* Description ***********</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00001000</resetValue>
          <fields>
            <field>
              <name>FLASH_ACE1_SIZE</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_ACE2_SIZE</name>
          <description>******* Description ***********</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <resetValue>0x00001000</resetValue>
          <fields>
            <field>
              <name>FLASH_ACE2_SIZE</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_ACE3_SIZE</name>
          <description>******* Description ***********</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <resetValue>0x00001000</resetValue>
          <fields>
            <field>
              <name>FLASH_ACE3_SIZE</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRAM_ACE0_ATTR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <resetValue>0x000000FF</resetValue>
          <fields>
            <field>
              <name>SRAM_ACE0_ATTR</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRAM_ACE1_ATTR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <resetValue>0x000000FF</resetValue>
          <fields>
            <field>
              <name>SRAM_ACE1_ATTR</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRAM_ACE2_ATTR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <resetValue>0x000000FF</resetValue>
          <fields>
            <field>
              <name>SRAM_ACE2_ATTR</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRAM_ACE3_ATTR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <resetValue>0x000000FF</resetValue>
          <fields>
            <field>
              <name>SRAM_ACE3_ATTR</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRAM_ACE0_ADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>S</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRAM_ACE1_ADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <resetValue>0x10000000</resetValue>
          <fields>
            <field>
              <name>S</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRAM_ACE2_ADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <resetValue>0x20000000</resetValue>
          <fields>
            <field>
              <name>S</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRAM_ACE3_ADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <resetValue>0x30000000</resetValue>
          <fields>
            <field>
              <name>S</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRAM_ACE0_SIZE</name>
          <description>******* Description ***********</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <resetValue>0x00001000</resetValue>
          <fields>
            <field>
              <name>SRAM_ACE0_SIZE</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRAM_ACE1_SIZE</name>
          <description>******* Description ***********</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00001000</resetValue>
          <fields>
            <field>
              <name>SRAM_ACE1_SIZE</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRAM_ACE2_SIZE</name>
          <description>******* Description ***********</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <resetValue>0x00001000</resetValue>
          <fields>
            <field>
              <name>SRAM_ACE2_SIZE</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRAM_ACE3_SIZE</name>
          <description>******* Description ***********</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <resetValue>0x00001000</resetValue>
          <fields>
            <field>
              <name>SRAM_ACE3_SIZE</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_MEM_PMS_CTRL</name>
          <description>******* Description ***********</description>
          <addressOffset>0x88</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SPI_MEM_REJECT_INT</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SPI_MEM_REJECT_CLR</name>
              <description>******* Description ***********</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SPI_MEM_REJECT_CDE</name>
              <description>******* Description ***********</description>
              <bitOffset>2</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_MEM_REJECT_ADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x8C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SPI_MEM_REJECT_ADDR</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDIO_CTRL</name>
          <description>******* Description ***********</description>
          <addressOffset>0x90</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SDIO_WIN_ACCESS_EN</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REDCY_SIG0</name>
          <description>******* Description ***********</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>REDCY_SIG0</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>REDCY_ANDOR</name>
              <description>******* Description ***********</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REDCY_SIG1</name>
          <description>******* Description ***********</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>REDCY_SIG1</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>REDCY_NANDOR</name>
              <description>******* Description ***********</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FRONT_END_MEM_PD</name>
          <description>******* Description ***********</description>
          <addressOffset>0x9C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000055</resetValue>
          <fields>
            <field>
              <name>AGC_MEM_FORCE_PU</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AGC_MEM_FORCE_PD</name>
              <description>******* Description ***********</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PBUS_MEM_FORCE_PU</name>
              <description>******* Description ***********</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PBUS_MEM_FORCE_PD</name>
              <description>******* Description ***********</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DC_MEM_FORCE_PU</name>
              <description>******* Description ***********</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DC_MEM_FORCE_PD</name>
              <description>******* Description ***********</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ_MEM_FORCE_PU</name>
              <description>******* Description ***********</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ_MEM_FORCE_PD</name>
              <description>******* Description ***********</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_MEM_ECC_CTRL</name>
          <description>******* Description ***********</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00200000</resetValue>
          <fields>
            <field>
              <name>FLASH_PAGE_SIZE</name>
              <description>Set the page size of the used MSPI flash. 0: 256 bytes. 1: 512 bytes. 2: 1024 bytes. 3: 2048 bytes.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SRAM_PAGE_SIZE</name>
              <description>Set the page size of the used MSPI external RAM. 0: 256 bytes. 1: 512 bytes. 2: 1024 bytes. 3: 2048 bytes.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLKGATE_FORCE_ON</name>
          <description>******* Description ***********</description>
          <addressOffset>0xA8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00003FFF</resetValue>
          <fields>
            <field>
              <name>ROM_CLKGATE_FORCE_ON</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SRAM_CLKGATE_FORCE_ON</name>
              <description>******* Description ***********</description>
              <bitOffset>3</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MEM_POWER_DOWN</name>
          <description>******* Description ***********</description>
          <addressOffset>0xAC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ROM_POWER_DOWN</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SRAM_POWER_DOWN</name>
              <description>******* Description ***********</description>
              <bitOffset>3</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MEM_POWER_UP</name>
          <description>******* Description ***********</description>
          <addressOffset>0xB0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00003FFF</resetValue>
          <fields>
            <field>
              <name>ROM_POWER_UP</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SRAM_POWER_UP</name>
              <description>******* Description ***********</description>
              <bitOffset>3</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RETENTION_CTRL</name>
          <description>******* Description ***********</description>
          <addressOffset>0xB4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RETENTION_CPU_LINK_ADDR</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NOBYPASS_CPU_ISO_RST</name>
              <description>******* Description ***********</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RETENTION_CTRL1</name>
          <description>******* Description ***********</description>
          <addressOffset>0xB8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RETENTION_TAG_LINK_ADDR</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RETENTION_CTRL2</name>
          <description>******* Description ***********</description>
          <addressOffset>0xBC</addressOffset>
          <size>0x20</size>
          <resetValue>0x001FEFF0</resetValue>
          <fields>
            <field>
              <name>RET_ICACHE_SIZE</name>
              <description>******* Description ***********</description>
              <bitOffset>4</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RET_ICACHE_VLD_SIZE</name>
              <description>******* Description ***********</description>
              <bitOffset>13</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RET_ICACHE_START_POINT</name>
              <description>******* Description ***********</description>
              <bitOffset>22</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RET_ICACHE_ENABLE</name>
              <description>******* Description ***********</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RETENTION_CTRL3</name>
          <description>******* Description ***********</description>
          <addressOffset>0xC0</addressOffset>
          <size>0x20</size>
          <resetValue>0x003FFFF0</resetValue>
          <fields>
            <field>
              <name>RET_DCACHE_SIZE</name>
              <description>******* Description ***********</description>
              <bitOffset>4</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RET_DCACHE_VLD_SIZE</name>
              <description>******* Description ***********</description>
              <bitOffset>13</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RET_DCACHE_START_POINT</name>
              <description>******* Description ***********</description>
              <bitOffset>22</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RET_DCACHE_ENABLE</name>
              <description>******* Description ***********</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RETENTION_CTRL4</name>
          <description>******* Description ***********</description>
          <addressOffset>0xC4</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>RETENTION_INV_CFG</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RETENTION_CTRL5</name>
          <description>******* Description ***********</description>
          <addressOffset>0xC8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RETENTION_DISABLE</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>******* Description ***********</description>
          <addressOffset>0x3FC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02101150</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>Version control</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>APB_SARADC</name>
      <description>Successive Approximation Register Analog to Digital Converter</description>
      <groupName>APB_SARADC</groupName>
      <baseAddress>0x60040000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x70</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>APB_ADC</name>
        <value>65</value>
      </interrupt>
      <registers>
        <register>
          <name>CTRL</name>
          <description>configure apb saradc controller</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x407F8240</resetValue>
          <fields>
            <field>
              <name>SARADC_START_FORCE</name>
              <description>enable start saradc by sw</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_START</name>
              <description>start saradc by sw</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_WORK_MODE</name>
              <description>0: single mode, 1: double mode, 2: alternate mode</description>
              <bitOffset>3</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_SAR_SEL</name>
              <description>0: SAR1, 1: SAR2, only work for single SAR mode</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_SAR_CLK_GATED</name>
              <description>enable SAR CLK gate when saradc idle</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_SAR_CLK_DIV</name>
              <description>SAR clock divider</description>
              <bitOffset>7</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_SAR1_PATT_LEN</name>
              <description>0 ~ 15 means length 1 ~ 16</description>
              <bitOffset>15</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_SAR2_PATT_LEN</name>
              <description>0 ~ 15 means length 1 ~ 16</description>
              <bitOffset>19</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_SAR1_PATT_P_CLEAR</name>
              <description>clear the pointer of pattern table for DIG ADC1 CTRL</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_SAR2_PATT_P_CLEAR</name>
              <description>clear the pointer of pattern table for DIG ADC2 CTRL</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_DATA_SAR_SEL</name>
              <description>1: sar_sel will be coded by the MSB of the 16-bit output data, in this case the resolution should not be larger than 11 bits.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_DATA_TO_I2S</name>
              <description>1: I2S input data is from SAR ADC (for DMA), 0: I2S input data is from GPIO matrix</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_XPD_SAR_FORCE</name>
              <description>force option to xpd sar blocks</description>
              <bitOffset>27</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_WAIT_ARB_CYCLE</name>
              <description>wait arbit signal stable after sar_done</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTRL2</name>
          <description>configure apb saradc controller</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000A1FE</resetValue>
          <fields>
            <field>
              <name>SARADC_MEAS_NUM_LIMIT</name>
              <description>enable apb saradc limit the sample num</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_MAX_MEAS_NUM</name>
              <description>max conversion number</description>
              <bitOffset>1</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_SAR1_INV</name>
              <description>1: data to DIG ADC1 CTRL is inverted, otherwise not</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_SAR2_INV</name>
              <description>1: data to DIG ADC2 CTRL is inverted, otherwise not</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_TIMER_SEL</name>
              <description>1: select saradc timer 0: i2s_ws trigger</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_TIMER_TARGET</name>
              <description>to set saradc timer target</description>
              <bitOffset>12</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_TIMER_EN</name>
              <description>to enable saradc timer trigger</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FILTER_CTRL1</name>
          <description>configure saradc filter</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>FILTER_FACTOR1</name>
              <description>apb saradc factor1</description>
              <bitOffset>26</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_FACTOR0</name>
              <description>apb saradc factor0</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FSM_WAIT</name>
          <description>configure apb saradc fsm</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00FF0808</resetValue>
          <fields>
            <field>
              <name>SARADC_XPD_WAIT</name>
              <description>the cycle which saradc controller in xpd state</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_RSTB_WAIT</name>
              <description>the cycle which saradc controller in rst state</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC_STANDBY_WAIT</name>
              <description>the cycle which saradc controller in standby state</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR1_STATUS</name>
          <description>saradc1 status for debug</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SARADC_SAR1_STATUS</name>
              <description>saradc1 status</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR2_STATUS</name>
          <description>saradc2 status for debug</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SARADC_SAR2_STATUS</name>
              <description>saradc2 status</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR1_PATT_TAB1</name>
          <description>configure apb saradc pattern table</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SARADC_SAR1_PATT_TAB1</name>
              <description>item 0 ~ 3 for pattern table 1 (each item 6bit)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR1_PATT_TAB2</name>
          <description>configure apb saradc pattern table</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SARADC_SAR1_PATT_TAB2</name>
              <description>Item 4 ~ 7 for pattern table 1 (each item 6bit)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR1_PATT_TAB3</name>
          <description>configure apb saradc pattern table</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SARADC_SAR1_PATT_TAB3</name>
              <description>Item 8 ~ 11 for pattern table 1 (each item 6bit)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR1_PATT_TAB4</name>
          <description>configure apb saradc pattern table</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SARADC_SAR1_PATT_TAB4</name>
              <description>Item 12 ~ 15 for pattern table 1 (each item 6bit)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR2_PATT_TAB1</name>
          <description>configure apb saradc pattern table</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SARADC_SAR2_PATT_TAB1</name>
              <description>item 0 ~ 3 for pattern table 2 (each item 6bit)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR2_PATT_TAB2</name>
          <description>configure apb saradc pattern table</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SARADC_SAR2_PATT_TAB2</name>
              <description>Item 4 ~ 7 for pattern table 2 (each item 6bit)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR2_PATT_TAB3</name>
          <description>configure apb saradc pattern table</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SARADC_SAR2_PATT_TAB3</name>
              <description>Item 8 ~ 11 for pattern table 2 (each item 6bit)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR2_PATT_TAB4</name>
          <description>configure apb saradc pattern table</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SARADC_SAR2_PATT_TAB4</name>
              <description>Item 12 ~ 15 for pattern table 2 (each item 6bit)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APB_ADC_ARB_CTRL</name>
          <description>configure apb saradc arbit</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000900</resetValue>
          <fields>
            <field>
              <name>ADC_ARB_APB_FORCE</name>
              <description>adc2 arbiter force to enableapb controller</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_ARB_RTC_FORCE</name>
              <description>adc2 arbiter force to enable rtc controller</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_ARB_WIFI_FORCE</name>
              <description>adc2 arbiter force to enable wifi controller</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_ARB_GRANT_FORCE</name>
              <description>adc2 arbiter force grant</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_ARB_APB_PRIORITY</name>
              <description>Set adc2 arbiterapb priority</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_ARB_RTC_PRIORITY</name>
              <description>Set adc2 arbiter rtc priority</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_ARB_WIFI_PRIORITY</name>
              <description>Set adc2 arbiter wifi priority</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_ARB_FIX_PRIORITY</name>
              <description>adc2 arbiter uses fixed priority</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FILTER_CTRL0</name>
          <description>configure apb saradc arbit</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <resetValue>0x006B4000</resetValue>
          <fields>
            <field>
              <name>FILTER_CHANNEL1</name>
              <description>configure the filter1 channel</description>
              <bitOffset>14</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_CHANNEL0</name>
              <description>configure the filter0 channel</description>
              <bitOffset>19</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_RESET</name>
              <description>enable apb_adc1_filter</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APB_SARADC1_DATA_STATUS</name>
          <description>get apb saradc sample data</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>APB_SARADC1_DATA</name>
              <description>apbsaradc sample data</description>
              <bitOffset>0</bitOffset>
              <bitWidth>17</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THRES0_CTRL</name>
          <description>configure apb saradc thres monitor</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <resetValue>0x0003FFED</resetValue>
          <fields>
            <field>
              <name>THRES0_CHANNEL</name>
              <description>configure which channel thres0 monitor</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>THRES0_HIGH</name>
              <description>thres0 monitor high thres</description>
              <bitOffset>5</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>THRES0_LOW</name>
              <description>thres0 monitor low thres</description>
              <bitOffset>18</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THRES1_CTRL</name>
          <description>configure apb saradc thres monitor</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <resetValue>0x0003FFED</resetValue>
          <fields>
            <field>
              <name>THRES1_CHANNEL</name>
              <description>configure which channel thres0 monitor</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>THRES1_HIGH</name>
              <description>thres1 monitor high thres</description>
              <bitOffset>5</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>THRES1_LOW</name>
              <description>thres1 monitor low thres</description>
              <bitOffset>18</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THRES_CTRL</name>
          <description>configure thres monitor enable</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>THRES_ALL_EN</name>
              <description>enable thres0 to monitor all channel</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>THRES3_EN</name>
              <description>no public</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>THRES2_EN</name>
              <description>no public</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>THRES1_EN</name>
              <description>enable thres1</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>THRES0_EN</name>
              <description>enable thres0</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>enable interrupt</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>THRES1_LOW_INT_ENA</name>
              <description>interrupt of thres1 low</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>THRES0_LOW_INT_ENA</name>
              <description>interrupt of thres0 low</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>THRES1_HIGH_INT_ENA</name>
              <description>interrupt of thres1 high</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>THRES0_HIGH_INT_ENA</name>
              <description>interrupt of thres0 high</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APB_SARADC2_DONE_INT_ENA</name>
              <description>interrupt of sar2 done</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APB_SARADC1_DONE_INT_ENA</name>
              <description>interrupt of sar1 done</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW</name>
          <description>raw of interrupt</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>THRES1_LOW_INT_RAW</name>
              <description>interrupt of thres1 low</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>THRES0_LOW_INT_RAW</name>
              <description>interrupt of thres0 low</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>THRES1_HIGH_INT_RAW</name>
              <description>interrupt of thres1 high</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>THRES0_HIGH_INT_RAW</name>
              <description>interrupt of thres0 high</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_SARADC2_DONE_INT_RAW</name>
              <description>interrupt of sar2 done</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_SARADC1_DONE_INT_RAW</name>
              <description>interrupt of sar1 done</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST</name>
          <description>state of interrupt</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>THRES1_LOW_INT_ST</name>
              <description>interrupt of thres1 low</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>THRES0_LOW_INT_ST</name>
              <description>interrupt of thres0 low</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>THRES1_HIGH_INT_ST</name>
              <description>interrupt of thres1 high</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>THRES0_HIGH_INT_ST</name>
              <description>interrupt of thres0 high</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_SARADC2_DONE_INT_ST</name>
              <description>interrupt of sar2 done</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_SARADC1_DONE_INT_ST</name>
              <description>interrupt of sar1 done</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>clear interrupt</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>THRES1_LOW_INT_CLR</name>
              <description>interrupt of thres1 low</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>THRES0_LOW_INT_CLR</name>
              <description>interrupt of thres0 low</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>THRES1_HIGH_INT_CLR</name>
              <description>interrupt of thres1 high</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>THRES0_HIGH_INT_CLR</name>
              <description>interrupt of thres0 high</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APB_SARADC2_DONE_INT_CLR</name>
              <description>interrupt of sar2 done</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APB_SARADC1_DONE_INT_CLR</name>
              <description>interrupt of sar1 done</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CONF</name>
          <description>configure apb saradc dma</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <resetValue>0x000000FF</resetValue>
          <fields>
            <field>
              <name>APB_ADC_EOF_NUM</name>
              <description>the dma_in_suc_eof gen when sample cnt = spi_eof_num</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APB_ADC_RESET_FSM</name>
              <description>reset_apb_adc_state</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APB_ADC_TRANS</name>
              <description>enable apb_adc use spi_dma</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APB_ADC_CLKM_CONF</name>
          <description>configure apb saradc clock</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000004</resetValue>
          <fields>
            <field>
              <name>CLKM_DIV_NUM</name>
              <description>Integral  clock divider value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKM_DIV_B</name>
              <description>Fractional clock divider numerator value</description>
              <bitOffset>8</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKM_DIV_A</name>
              <description>Fractional clock divider denominator value</description>
              <bitOffset>14</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EN</name>
              <description>no public</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_SEL</name>
              <description>Set this bit to enable clk_apll</description>
              <bitOffset>21</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APB_SARADC2_DATA_STATUS</name>
          <description>get apb saradc2 sample data</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>APB_SARADC2_DATA</name>
              <description>apb saradc2 sample data</description>
              <bitOffset>0</bitOffset>
              <bitWidth>17</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APB_CTRL_DATE</name>
          <description>version</description>
          <addressOffset>0x3FC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02101180</resetValue>
          <fields>
            <field>
              <name>APB_CTRL_DATE</name>
              <description>version</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>DEBUG_ASSIST</name>
      <description>Debug Assist</description>
      <groupName>DEBUG_ASSIST</groupName>
      <baseAddress>0x600CE000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x15C</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>ASSIST_DEBUG</name>
        <value>83</value>
      </interrupt>
      <registers>
        <register>
          <name>CORE_0_INTERRUPT_ENA</name>
          <description>core0 monitor enable configuration register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_AREA_DRAM0_0_RD_ENA</name>
              <description>Core0 dram0 area0 read monitor enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_DRAM0_0_WR_ENA</name>
              <description>Core0 dram0 area0 write monitor enable</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_DRAM0_1_RD_ENA</name>
              <description>Core0 dram0 area1 read monitor enable</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_DRAM0_1_WR_ENA</name>
              <description>Core0 dram0 area1 write monitor enable</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_0_RD_ENA</name>
              <description>Core0 PIF area0 read monitor enable</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_0_WR_ENA</name>
              <description>Core0 PIF area0 write monitor enable</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_1_RD_ENA</name>
              <description>Core0 PIF area1 read monitor enable</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_1_WR_ENA</name>
              <description>Core0 PIF area1 write monitor enable</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_SP_SPILL_MIN_ENA</name>
              <description>Core0 stackpoint overflow monitor enable</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_SP_SPILL_MAX_ENA</name>
              <description>Core0 stackpoint underflow monitor enable</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_IRAM0_EXCEPTION_MONITOR_ENA</name>
              <description>IBUS busy monitor enable</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_DRAM0_EXCEPTION_MONITOR_ENA</name>
              <description>DBUS busy monitor enbale</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_INTERRUPT_RAW</name>
          <description>core0 monitor interrupt status register</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_AREA_DRAM0_0_RD_RAW</name>
              <description>Core0 dram0 area0 read monitor interrupt status</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_AREA_DRAM0_0_WR_RAW</name>
              <description>Core0 dram0 area0 write monitor interrupt status</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_AREA_DRAM0_1_RD_RAW</name>
              <description>Core0 dram0 area1 read monitor interrupt status</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_AREA_DRAM0_1_WR_RAW</name>
              <description>Core0 dram0 area1 write monitor interrupt status</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_0_RD_RAW</name>
              <description>Core0 PIF area0 read monitor interrupt status</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_0_WR_RAW</name>
              <description>Core0 PIF area0 write monitor interrupt status</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_1_RD_RAW</name>
              <description>Core0 PIF area1 read monitor interrupt status</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_1_WR_RAW</name>
              <description>Core0 PIF area1 write monitor interrupt status</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_SP_SPILL_MIN_RAW</name>
              <description>Core0 stackpoint overflow monitor interrupt status</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_SP_SPILL_MAX_RAW</name>
              <description>Core0 stackpoint underflow monitor interrupt status</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_IRAM0_EXCEPTION_MONITOR_RAW</name>
              <description>IBUS busy monitor interrupt status</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_DRAM0_EXCEPTION_MONITOR_RAW</name>
              <description>DBUS busy monitor initerrupt status</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_INTERRUPT_RLS</name>
          <description>core0 monitor interrupt enable register</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_AREA_DRAM0_0_RD_RLS</name>
              <description>Core0 dram0 area0 read monitor interrupt enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_DRAM0_0_WR_RLS</name>
              <description>Core0 dram0 area0 write monitor interrupt enable</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_DRAM0_1_RD_RLS</name>
              <description>Core0 dram0 area1 read monitor interrupt enable</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_DRAM0_1_WR_RLS</name>
              <description>Core0 dram0 area1 write monitor interrupt enable</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_0_RD_RLS</name>
              <description>Core0 PIF area0 read monitor interrupt enable</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_0_WR_RLS</name>
              <description>Core0 PIF area0 write monitor interrupt enable</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_1_RD_RLS</name>
              <description>Core0 PIF area1 read monitor interrupt enable</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_1_WR_RLS</name>
              <description>Core0 PIF area1 write monitor interrupt enable</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_SP_SPILL_MIN_RLS</name>
              <description>Core0 stackpoint overflow monitor interrupt enable</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_SP_SPILL_MAX_RLS</name>
              <description>Core0 stackpoint underflow monitor interrupt enable</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_IRAM0_EXCEPTION_MONITOR_RLS</name>
              <description>IBUS busy monitor interrupt enable</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_DRAM0_EXCEPTION_MONITOR_RLS</name>
              <description>DBUS busy monitor interrupt enbale</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_INTERRUPT_CLR</name>
          <description>core0 monitor interrupt clr register</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_AREA_DRAM0_0_RD_CLR</name>
              <description>Core0 dram0 area0 read monitor interrupt clr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_DRAM0_0_WR_CLR</name>
              <description>Core0 dram0 area0 write monitor interrupt clr</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_DRAM0_1_RD_CLR</name>
              <description>Core0 dram0 area1 read monitor interrupt clr</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_DRAM0_1_WR_CLR</name>
              <description>Core0 dram0 area1 write monitor interrupt clr</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_0_RD_CLR</name>
              <description>Core0 PIF area0 read monitor interrupt clr</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_0_WR_CLR</name>
              <description>Core0 PIF area0 write monitor interrupt clr</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_1_RD_CLR</name>
              <description>Core0 PIF area1 read monitor interrupt clr</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_AREA_PIF_1_WR_CLR</name>
              <description>Core0 PIF area1 write monitor interrupt clr</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_SP_SPILL_MIN_CLR</name>
              <description>Core0 stackpoint overflow monitor interrupt clr</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_SP_SPILL_MAX_CLR</name>
              <description>Core0 stackpoint underflow monitor interrupt clr</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_IRAM0_EXCEPTION_MONITOR_CLR</name>
              <description>IBUS busy monitor interrupt clr</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_DRAM0_EXCEPTION_MONITOR_CLR</name>
              <description>DBUS busy monitor interrupt clr</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_AREA_DRAM0_0_MIN</name>
          <description>core0 dram0 region0 addr configuration register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_0_AREA_DRAM0_0_MIN</name>
              <description>Core0 dram0 region0 start addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_AREA_DRAM0_0_MAX</name>
          <description>core0 dram0 region0 addr configuration register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_AREA_DRAM0_0_MAX</name>
              <description>Core0 dram0 region0 end addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_AREA_DRAM0_1_MIN</name>
          <description>core0 dram0 region1 addr configuration register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_0_AREA_DRAM0_1_MIN</name>
              <description>Core0 dram0 region1 start addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_AREA_DRAM0_1_MAX</name>
          <description>core0 dram0 region1 addr configuration register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_AREA_DRAM0_1_MAX</name>
              <description>Core0 dram0 region1 end addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_AREA_PIF_0_MIN</name>
          <description>core0 PIF region0 addr configuration register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_0_AREA_PIF_0_MIN</name>
              <description>Core0 PIF region0 start addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_AREA_PIF_0_MAX</name>
          <description>core0 PIF region0 addr configuration register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_AREA_PIF_0_MAX</name>
              <description>Core0 PIF region0 end addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_AREA_PIF_1_MIN</name>
          <description>core0 PIF region1 addr configuration register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_0_AREA_PIF_1_MIN</name>
              <description>Core0 PIF region1 start addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_AREA_PIF_1_MAX</name>
          <description>core0 PIF region1 addr configuration register</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_AREA_PIF_1_MAX</name>
              <description>Core0 PIF region1 end addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_AREA_SP</name>
          <description>core0 area sp status register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_0_AREA_SP</name>
              <description>the stackpointer when first touch region monitor interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_AREA_PC</name>
          <description>core0 area pc status register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_AREA_PC</name>
              <description>the PC when first touch region monitor interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_SP_UNSTABLE</name>
          <description>core0 sp unstable configuration register</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000000B</resetValue>
          <fields>
            <field>
              <name>CORE_0_SP_UNSTABLE</name>
              <description>unstable period when window change,during this period no check stackpointer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_SP_MIN</name>
          <description>core0 sp region configuration regsiter</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_SP_MIN</name>
              <description>stack min value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_SP_MAX</name>
          <description>core0 sp region configuration regsiter</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_0_SP_MAX</name>
              <description>stack max value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_SP_PC</name>
          <description>core0 sp pc status register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_SP_PC</name>
              <description>the PC when first touch stack monitor interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_RCD_PDEBUGENABLE</name>
          <description>core0 pdebug configuration register</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_RCD_PDEBUGENABLE</name>
              <description>Core0 Pdebugenable,set 1 to open core0 Pdebug interface,then can get core0 PC</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_RCD_RECORDING</name>
          <description>core0 pdebug status register</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_RCD_RECORDING</name>
              <description>Pdebug record enable,set 1 to record core0 pdebug interface signal</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_RCD_PDEBUGINST</name>
          <description>core0 pdebug status register</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_RCD_PDEBUGINST</name>
              <description>core0 pdebuginst</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_RCD_PDEBUGSTATUS</name>
          <description>core0 pdebug status register</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_RCD_PDEBUGSTATUS</name>
              <description>core0 pdebugstatus</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_RCD_PDEBUGDATA</name>
          <description>core0 pdebug status register</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_RCD_PDEBUGDATA</name>
              <description>core0_pdebugdata</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_RCD_PDEBUGPC</name>
          <description>core0 pdebug status register</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_RCD_PDEBUGPC</name>
              <description>core0_pdebugPC</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_RCD_PDEBUGLS0STAT</name>
          <description>core0 pdebug status register</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_RCD_PDEBUGLS0STAT</name>
              <description>core0_pdebug_s0stat</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_RCD_PDEBUGLS0ADDR</name>
          <description>core0 pdebug status register</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_RCD_PDEBUGLS0ADDR</name>
              <description>core0_pdebug_s0addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_RCD_PDEBUGLS0DATA</name>
          <description>core0 pdebug status register</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_RCD_PDEBUGLS0DATA</name>
              <description>core0_pdebug_s0data</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_RCD_SP</name>
          <description>core0 pdebug status register</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_RCD_SP</name>
              <description>core0_stack pointer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_IRAM0_EXCEPTION_MONITOR_0</name>
          <description>core0 bus busy status regsiter</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_IRAM0_RECORDING_ADDR_0</name>
              <description>The first iram0's addr[25:2] status when trigger IRAM busy interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_IRAM0_RECORDING_WR_0</name>
              <description>The first iram0's wr status when trigger IRAM busy interrupt</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_IRAM0_RECORDING_LOADSTORE_0</name>
              <description>The first iram0's loadstore status when trigger IRAM busy interrupt</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_IRAM0_EXCEPTION_MONITOR_1</name>
          <description>core0 bus busy status regsiter</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_IRAM0_RECORDING_ADDR_1</name>
              <description>The second iram0's addr[25:2] status when trigger IRAM busy interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_IRAM0_RECORDING_WR_1</name>
              <description>The second iram0's wr status when trigger IRAM busy interrupt</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_IRAM0_RECORDING_LOADSTORE_1</name>
              <description>The second iram0's loadstore status when trigger IRAM busy interrupt</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_DRAM0_EXCEPTION_MONITOR_0</name>
          <description>core0 bus busy status regsiter</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_DRAM0_RECORDING_ADDR_0</name>
              <description>The first dram0's addr[25:4] status when trigger DRAM busy interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_DRAM0_RECORDING_WR_0</name>
              <description>The first dram0's wr status when trigger DRAM busy interrupt</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_DRAM0_EXCEPTION_MONITOR_1</name>
          <description>core0 bus busy status regsiter</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_DRAM0_RECORDING_BYTEEN_0</name>
              <description>The first dram0's byteen status when trigger DRAM busy interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_DRAM0_EXCEPTION_MONITOR_2</name>
          <description>core0 bus busy status regsiter</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_0_DRAM0_RECORDING_PC_0</name>
              <description>The first dram0's PC status when trigger DRAM busy interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_DRAM0_EXCEPTION_MONITOR_3</name>
          <description>core0 bus busy status regsiter</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_DRAM0_RECORDING_ADDR_1</name>
              <description>The second dram0's addr[25:4] status when trigger DRAM busy interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_DRAM0_RECORDING_WR_1</name>
              <description>The second dram0's wr status when trigger DRAM busy interrupt</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_DRAM0_EXCEPTION_MONITOR_4</name>
          <description>core0 bus busy configuration regsiter</description>
          <addressOffset>0x88</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_DRAM0_RECORDING_BYTEEN_1</name>
              <description>The second dram0's byteen status when trigger DRAM busy interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_DRAM0_EXCEPTION_MONITOR_5</name>
          <description>core0 bus busy configuration regsiter</description>
          <addressOffset>0x8C</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_0_DRAM0_RECORDING_PC_1</name>
              <description>The second dram0's PC status when trigger DRAM busy interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_INTERRUPT_ENA</name>
          <description>Core1 monitor enable configuration register</description>
          <addressOffset>0x90</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_AREA_DRAM0_0_RD_ENA</name>
              <description>Core1 dram0 area0 read monitor enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_AREA_DRAM0_0_WR_ENA</name>
              <description>Core1 dram0 area0 write monitor enable</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_AREA_DRAM0_1_RD_ENA</name>
              <description>Core1 dram0 area1 read monitor enable</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_AREA_DRAM0_1_WR_ENA</name>
              <description>Core1 dram0 area1 write monitor enable</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_AREA_PIF_0_RD_ENA</name>
              <description>Core1 PIF area0 read monitor enable</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_AREA_PIF_0_WR_ENA</name>
              <description>Core1 PIF area0 write monitor enable</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_AREA_PIF_1_RD_ENA</name>
              <description>Core1 PIF area1 read monitor enable</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_AREA_PIF_1_WR_ENA</name>
              <description>Core1 PIF area1 write monitor enable</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_SP_SPILL_MIN_ENA</name>
              <description>Core1 stackpoint overflow monitor enable</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_SP_SPILL_MAX_ENA</name>
              <description>Core1 stackpoint underflow monitor enable</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_IRAM0_EXCEPTION_MONITOR_ENA</name>
              <description>IBUS busy monitor enable</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_DRAM0_EXCEPTION_MONITOR_ENA</name>
              <description>DBUS busy monitor enbale</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_INTERRUPT_RAW</name>
          <description>Core1 monitor interrupt status register</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_AREA_DRAM0_0_RD_RAW</name>
              <description>Core1 dram0 area0 read monitor interrupt status</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_AREA_DRAM0_0_WR_RAW</name>
              <description>Core1 dram0 area0 write monitor interrupt status</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_AREA_DRAM0_1_RD_RAW</name>
              <description>Core1 dram0 area1 read monitor interrupt status</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_AREA_DRAM0_1_WR_RAW</name>
              <description>Core1 dram0 area1 write monitor interrupt status</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_AREA_PIF_0_RD_RAW</name>
              <description>Core1 PIF area0 read monitor interrupt status</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_AREA_PIF_0_WR_RAW</name>
              <description>Core1 PIF area0 write monitor interrupt status</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_AREA_PIF_1_RD_RAW</name>
              <description>Core1 PIF area1 read monitor interrupt status</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_AREA_PIF_1_WR_RAW</name>
              <description>Core1 PIF area1 write monitor interrupt status</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_SP_SPILL_MIN_RAW</name>
              <description>Core1 stackpoint overflow monitor interrupt status</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_SP_SPILL_MAX_RAW</name>
              <description>Core1 stackpoint underflow monitor interrupt status</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_IRAM0_EXCEPTION_MONITOR_RAW</name>
              <description>IBUS busy monitor interrupt status</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_DRAM0_EXCEPTION_MONITOR_RAW</name>
              <description>DBUS busy monitor initerrupt status</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_INTERRUPT_RLS</name>
          <description>Core1 monitor interrupt enable register</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_AREA_DRAM0_0_RD_RLS</name>
              <description>Core1 dram0 area0 read monitor interrupt enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_AREA_DRAM0_0_WR_RLS</name>
              <description>Core1 dram0 area0 write monitor interrupt enable</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_AREA_DRAM0_1_RD_RLS</name>
              <description>Core1 dram0 area1 read monitor interrupt enable</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_AREA_DRAM0_1_WR_RLS</name>
              <description>Core1 dram0 area1 write monitor interrupt enable</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_AREA_PIF_0_RD_RLS</name>
              <description>Core1 PIF area0 read monitor interrupt enable</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_AREA_PIF_0_WR_RLS</name>
              <description>Core1 PIF area0 write monitor interrupt enable</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_AREA_PIF_1_RD_RLS</name>
              <description>Core1 PIF area1 read monitor interrupt enable</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_AREA_PIF_1_WR_RLS</name>
              <description>Core1 PIF area1 write monitor interrupt enable</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_SP_SPILL_MIN_RLS</name>
              <description>Core1 stackpoint overflow monitor interrupt enable</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_SP_SPILL_MAX_RLS</name>
              <description>Core1 stackpoint underflow monitor interrupt enable</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_IRAM0_EXCEPTION_MONITOR_RLS</name>
              <description>IBUS busy monitor interrupt enable</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_DRAM0_EXCEPTION_MONITOR_RLS</name>
              <description>DBUS busy monitor interrupt enbale</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_INTERRUPT_CLR</name>
          <description>Core1 monitor interrupt clr register</description>
          <addressOffset>0x9C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_AREA_DRAM0_0_RD_CLR</name>
              <description>Core1 dram0 area0 read monitor interrupt clr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_AREA_DRAM0_0_WR_CLR</name>
              <description>Core1 dram0 area0 write monitor interrupt clr</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_AREA_DRAM0_1_RD_CLR</name>
              <description>Core1 dram0 area1 read monitor interrupt clr</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_AREA_DRAM0_1_WR_CLR</name>
              <description>Core1 dram0 area1 write monitor interrupt clr</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_AREA_PIF_0_RD_CLR</name>
              <description>Core1 PIF area0 read monitor interrupt clr</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_AREA_PIF_0_WR_CLR</name>
              <description>Core1 PIF area0 write monitor interrupt clr</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_AREA_PIF_1_RD_CLR</name>
              <description>Core1 PIF area1 read monitor interrupt clr</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_AREA_PIF_1_WR_CLR</name>
              <description>Core1 PIF area1 write monitor interrupt clr</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_SP_SPILL_MIN_CLR</name>
              <description>Core1 stackpoint overflow monitor interrupt clr</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_SP_SPILL_MAX_CLR</name>
              <description>Core1 stackpoint underflow monitor interrupt clr</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_IRAM0_EXCEPTION_MONITOR_CLR</name>
              <description>IBUS busy monitor interrupt clr</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_DRAM0_EXCEPTION_MONITOR_CLR</name>
              <description>DBUS busy monitor interrupt clr</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_AREA_DRAM0_0_MIN</name>
          <description>Core1 dram0 region0 addr configuration register</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_1_AREA_DRAM0_0_MIN</name>
              <description>Core1 dram0 region0 start addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_AREA_DRAM0_0_MAX</name>
          <description>Core1 dram0 region0 addr configuration register</description>
          <addressOffset>0xA4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_AREA_DRAM0_0_MAX</name>
              <description>Core1 dram0 region0 end addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_AREA_DRAM0_1_MIN</name>
          <description>Core1 dram0 region1 addr configuration register</description>
          <addressOffset>0xA8</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_1_AREA_DRAM0_1_MIN</name>
              <description>Core1 dram0 region1 start addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_AREA_DRAM0_1_MAX</name>
          <description>Core1 dram0 region1 addr configuration register</description>
          <addressOffset>0xAC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_AREA_DRAM0_1_MAX</name>
              <description>Core1 dram0 region1 end addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_AREA_PIF_0_MIN</name>
          <description>Core1 PIF region0 addr configuration register</description>
          <addressOffset>0xB0</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_1_AREA_PIF_0_MIN</name>
              <description>Core1 PIF region0 start addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_AREA_PIF_0_MAX</name>
          <description>Core1 PIF region0 addr configuration register</description>
          <addressOffset>0xB4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_AREA_PIF_0_MAX</name>
              <description>Core1 PIF region0 end addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_AREA_PIF_1_MIN</name>
          <description>Core1 PIF region1 addr configuration register</description>
          <addressOffset>0xB8</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_1_AREA_PIF_1_MIN</name>
              <description>Core1 PIF region1 start addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_AREA_PIF_1_MAX</name>
          <description>Core1 PIF region1 addr configuration register</description>
          <addressOffset>0xBC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_AREA_PIF_1_MAX</name>
              <description>Core1 PIF region1 end addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_AREA_PC</name>
          <description>Core1 area sp status register</description>
          <addressOffset>0xC0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_AREA_PC</name>
              <description>the stackpointer when first touch region monitor interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_AREA_SP</name>
          <description>Core1 area pc status register</description>
          <addressOffset>0xC4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_AREA_SP</name>
              <description>the PC when first touch region monitor interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_SP_UNSTABLE</name>
          <description>Core1 sp unstable configuration register</description>
          <addressOffset>0xC8</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000000B</resetValue>
          <fields>
            <field>
              <name>CORE_1_SP_UNSTABLE</name>
              <description>unstable period when window change,during this period no check stackpointer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_SP_MIN</name>
          <description>Core1 sp region configuration regsiter</description>
          <addressOffset>0xCC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_SP_MIN</name>
              <description>stack min value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_SP_MAX</name>
          <description>Core1 sp region configuration regsiter</description>
          <addressOffset>0xD0</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_1_SP_MAX</name>
              <description>stack max value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_SP_PC</name>
          <description>Core1 sp pc status register</description>
          <addressOffset>0xD4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_SP_PC</name>
              <description>the PC when first touch stack monitor interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_RCD_PDEBUGENABLE</name>
          <description>Core1 pdebug configuration register</description>
          <addressOffset>0xD8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_RCD_PDEBUGENABLE</name>
              <description>Core1 Pdebugenable,set 1 to open Core1 Pdebug interface, then can get Core1 PC</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_RCD_RECORDING</name>
          <description>Core1 pdebug status register</description>
          <addressOffset>0xDC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_RCD_RECORDING</name>
              <description>Pdebug record enable,set 1 to record Core1 pdebug interface signal</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_RCD_PDEBUGINST</name>
          <description>Core1 pdebug status register</description>
          <addressOffset>0xE0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_RCD_PDEBUGINST</name>
              <description>Core1 pdebuginst</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_RCD_PDEBUGSTATUS</name>
          <description>Core1 pdebug status register</description>
          <addressOffset>0xE4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_RCD_PDEBUGSTATUS</name>
              <description>Core1 pdebugstatus</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_RCD_PDEBUGDATA</name>
          <description>Core1 pdebug status register</description>
          <addressOffset>0xE8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_RCD_PDEBUGDATA</name>
              <description>Core1_pdebugdata</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_RCD_PDEBUGPC</name>
          <description>Core1 pdebug status register</description>
          <addressOffset>0xEC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_RCD_PDEBUGPC</name>
              <description>Core1_pdebugPC</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_RCD_PDEBUGLS0STAT</name>
          <description>Core1 pdebug status register</description>
          <addressOffset>0xF0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_RCD_PDEBUGLS0STAT</name>
              <description>Core1_pdebug_s0stat</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_RCD_PDEBUGLS0ADDR</name>
          <description>Core1 pdebug status register</description>
          <addressOffset>0xF4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_RCD_PDEBUGLS0ADDR</name>
              <description>Core1_pdebug_s0addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_RCD_PDEBUGLS0DATA</name>
          <description>Core1 pdebug status register</description>
          <addressOffset>0xF8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_RCD_PDEBUGLS0DATA</name>
              <description>Core1_pdebug_s0data</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_RCD_SP</name>
          <description>Core1 pdebug status register</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_RCD_SP</name>
              <description>Core1_stack pointer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_IRAM0_EXCEPTION_MONITOR_0</name>
          <description>Core1 bus busy status regsiter</description>
          <addressOffset>0x100</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_IRAM0_RECORDING_ADDR_0</name>
              <description>The first iram0's addr[25:2] status when trigger IRAM busy interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_IRAM0_RECORDING_WR_0</name>
              <description>The first iram0's wr status when trigger IRAM busy interrupt</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_IRAM0_RECORDING_LOADSTORE_0</name>
              <description>The first iram0's loadstore status when trigger IRAM busy interrupt</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_IRAM0_EXCEPTION_MONITOR_1</name>
          <description>Core1 bus busy status regsiter</description>
          <addressOffset>0x104</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_IRAM0_RECORDING_ADDR_1</name>
              <description>The second iram0's addr[25:2] status when trigger IRAM busy interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_IRAM0_RECORDING_WR_1</name>
              <description>The second iram0's wr status when trigger IRAM busy interrupt</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_IRAM0_RECORDING_LOADSTORE_1</name>
              <description>The second iram0's loadstore status when trigger IRAM busy interrupt</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_DRAM0_EXCEPTION_MONITOR_0</name>
          <description>Core1 bus busy status regsiter</description>
          <addressOffset>0x108</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_DRAM0_RECORDING_ADDR_0</name>
              <description>The first dram0's addr[25:4] status when trigger DRAM busy interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_DRAM0_RECORDING_WR_0</name>
              <description>The first dram0's wr status when trigger DRAM busy interrupt</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_DRAM0_EXCEPTION_MONITOR_1</name>
          <description>Core1 bus busy status regsiter</description>
          <addressOffset>0x10C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_DRAM0_RECORDING_BYTEEN_0</name>
              <description>The first dram0's byteen status when trigger DRAM busy interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_DRAM0_EXCEPTION_MONITOR_2</name>
          <description>Core1 bus busy status regsiter</description>
          <addressOffset>0x110</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_1_DRAM0_RECORDING_PC_0</name>
              <description>The first dram0's PC status when trigger DRAM busy interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_DRAM0_EXCEPTION_MONITOR_3</name>
          <description>Core1 bus busy status regsiter</description>
          <addressOffset>0x114</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_DRAM0_RECORDING_ADDR_1</name>
              <description>The second dram0's addr[25:4] status when trigger DRAM busy interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_DRAM0_RECORDING_WR_1</name>
              <description>The second dram0's wr status when trigger DRAM busy interrupt</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_DRAM0_EXCEPTION_MONITOR_4</name>
          <description>Core1 bus busy status regsiter</description>
          <addressOffset>0x118</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_DRAM0_RECORDING_BYTEEN_1</name>
              <description>The second dram0's byteen status when trigger DRAM busy interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_DRAM0_EXCEPTION_MONITOR_5</name>
          <description>Core1 bus busy status regsiter</description>
          <addressOffset>0x11C</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_1_DRAM0_RECORDING_PC_1</name>
              <description>The second dram0's PC status when trigger DRAM busy interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_0</name>
          <description>bus busy configuration register</description>
          <addressOffset>0x120</addressOffset>
          <size>0x20</size>
          <resetValue>0x000FFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_0</name>
              <description>busy monitor window cycle</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_1</name>
          <description>bus busy configuration register</description>
          <addressOffset>0x124</addressOffset>
          <size>0x20</size>
          <resetValue>0x000FFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_1</name>
              <description>non busy cycle,for example: when cycle=100 and cycle=10,it means that in 100 cycle, if busy access success time less than 10, it will trigger interrutpt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOG_SETTING</name>
          <description>log set register</description>
          <addressOffset>0x128</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000040</resetValue>
          <fields>
            <field>
              <name>LOG_ENA</name>
              <description>bus moniter enable: [0]Core1,[1]core1,[2]dma</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LOG_MODE</name>
              <description>check_mode:0:write,1:word,2:halword,3:byte,4:doubleword,5:4word</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LOG_MEM_LOOP_ENABLE</name>
              <description>mem_loop enable,1 means that loop write</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOG_DATA_0</name>
          <description>log check data register</description>
          <addressOffset>0x12C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LOG_DATA_0</name>
              <description>check data0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOG_DATA_1</name>
          <description>log check data register</description>
          <addressOffset>0x130</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LOG_DATA_1</name>
              <description>check data1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOG_DATA_2</name>
          <description>log check data register</description>
          <addressOffset>0x134</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LOG_DATA_2</name>
              <description>check data2</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOG_DATA_3</name>
          <description>log check data register</description>
          <addressOffset>0x138</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LOG_DATA_3</name>
              <description>check data3</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOG_DATA_MASK</name>
          <description>log check data mask register</description>
          <addressOffset>0x13C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LOG_DATA_SIZE</name>
              <description>data mask</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOG_MIN</name>
          <description>log check region configuration register</description>
          <addressOffset>0x140</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LOG_MIN</name>
              <description>check region min addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOG_MAX</name>
          <description>log check region configuration register</description>
          <addressOffset>0x144</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LOG_MAX</name>
              <description>check region max addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOG_MEM_START</name>
          <description>log mem region configuration register</description>
          <addressOffset>0x148</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LOG_MEM_START</name>
              <description>mem start addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOG_MEM_END</name>
          <description>log mem region configuration register</description>
          <addressOffset>0x14C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LOG_MEM_END</name>
              <description>mem end addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOG_MEM_WRITING_ADDR</name>
          <description>log mem addr status register</description>
          <addressOffset>0x150</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LOG_MEM_WRITING_ADDR</name>
              <description>mem current addr, it means next writing addr</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOG_MEM_FULL_FLAG</name>
          <description>log mem status register</description>
          <addressOffset>0x154</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LOG_MEM_FULL_FLAG</name>
              <description>when it's 1,show that mem write loop morte than one time.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>version register</description>
          <addressOffset>0x1FC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02003040</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>version register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>DMA</name>
      <description>DMA (Direct Memory Access) Controller</description>
      <groupName>DMA</groupName>
      <baseAddress>0x6003F000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x320</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>DMA_IN_CH0</name>
        <value>66</value>
      </interrupt>
      <interrupt>
        <name>DMA_IN_CH1</name>
        <value>67</value>
      </interrupt>
      <interrupt>
        <name>DMA_IN_CH2</name>
        <value>68</value>
      </interrupt>
      <interrupt>
        <name>DMA_IN_CH3</name>
        <value>69</value>
      </interrupt>
      <interrupt>
        <name>DMA_IN_CH4</name>
        <value>70</value>
      </interrupt>
      <interrupt>
        <name>DMA_OUT_CH0</name>
        <value>71</value>
      </interrupt>
      <interrupt>
        <name>DMA_OUT_CH1</name>
        <value>72</value>
      </interrupt>
      <interrupt>
        <name>DMA_OUT_CH2</name>
        <value>73</value>
      </interrupt>
      <interrupt>
        <name>DMA_OUT_CH3</name>
        <value>74</value>
      </interrupt>
      <interrupt>
        <name>DMA_OUT_CH4</name>
        <value>75</value>
      </interrupt>
      <interrupt>
        <name>APB_PMS_MONITOR_VIOLATE</name>
        <value>84</value>
      </interrupt>
      <interrupt>
        <name>DMA_EXTMEM_REJECT</name>
        <value>98</value>
      </interrupt>
      <registers>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>IN_CONF0_CH%s</name>
          <description>Configure 0 register of Rx channel 0</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_RST</name>
              <description>This bit is used to reset DMA channel 0 Rx FSM and Rx FIFO pointer.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_LOOP_TEST</name>
              <description>reserved</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INDSCR_BURST_EN</name>
              <description>Set this bit to 1 to enable INCR burst transfer for Rx channel 0 reading link descriptor when accessing internal SRAM.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_DATA_BURST_EN</name>
              <description>Set this bit to 1 to enable INCR burst transfer for Rx channel 0 receiving data when accessing internal SRAM.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_TRANS_EN</name>
              <description>Set this bit 1 to enable automatic transmitting data from memory to memory via DMA.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>IN_CONF1_CH%s</name>
          <description>Configure 1 register of Rx channel 0</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000000C</resetValue>
          <fields>
            <field>
              <name>DMA_INFIFO_FULL_THRS</name>
              <description>This register is used to generate the INFIFO_FULL_WM_INT interrupt when Rx channel 0 received byte number in Rx FIFO is up to the value of the register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_CHECK_OWNER</name>
              <description>Set this bit to enable checking the owner attribute of the link descriptor.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_EXT_MEM_BK_SIZE</name>
              <description>Block size of Rx channel 0 when DMA access external SRAM. 0: 16 bytes      1: 32 bytes    2/3:reserved</description>
              <bitOffset>13</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>IN_INT_RAW_CH%s</name>
          <description>Raw status interrupt of Rx channel 0</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_DONE</name>
              <description>The raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received for Rx channel 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_SUC_EOF</name>
              <description>The raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received for Rx channel 0. For UHCI0, the raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received and no data error is detected for Rx channel 0.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_ERR_EOF</name>
              <description>The raw interrupt bit turns to high level when data error is detected only in the case that the peripheral is UHCI0 for Rx channel 0. For other peripherals, this raw interrupt is reserved.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_DSCR_ERR</name>
              <description>The raw interrupt bit turns to high level when detecting inlink descriptor error, including owner error, the second and third word error of inlink descriptor for Rx channel 0.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_DSCR_EMPTY</name>
              <description>The raw interrupt bit turns to high level when Rx buffer pointed by inlink is full and receiving data is not completed, but there is no more inlink for Rx channel 0.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_FULL_WM</name>
              <description>The raw interrupt bit turns to high level when received data byte number is up to threshold configured by REG_DMA_INFIFO_FULL_THRS_CH0 in Rx FIFO of channel 0.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_OVF_L1</name>
              <description>This raw interrupt bit turns to high level when level 1 fifo of Rx channel 0 is overflow.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_UDF_L1</name>
              <description>This raw interrupt bit turns to high level when level 1 fifo of Rx channel 0 is underflow.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_OVF_L3</name>
              <description>This raw interrupt bit turns to high level when level 3 fifo of Rx channel 0 is overflow.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_UDF_L3</name>
              <description>This raw interrupt bit turns to high level when level 3 fifo of Rx channel 0 is underflow.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>IN_INT_ST_CH%s</name>
          <description>Masked interrupt of Rx channel 0</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_DONE</name>
              <description>The raw interrupt status bit for the IN_DONE_CH_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_SUC_EOF</name>
              <description>The raw interrupt status bit for the IN_SUC_EOF_CH_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_ERR_EOF</name>
              <description>The raw interrupt status bit for the IN_ERR_EOF_CH_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_DSCR_ERR</name>
              <description>The raw interrupt status bit for the IN_DSCR_ERR_CH_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_DSCR_EMPTY</name>
              <description>The raw interrupt status bit for the IN_DSCR_EMPTY_CH_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_FULL_WM</name>
              <description>The raw interrupt status bit for the INFIFO_FULL_WM_CH_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_OVF_L1</name>
              <description>The raw interrupt status bit for the INFIFO_OVF_L1_CH_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_UDF_L1</name>
              <description>The raw interrupt status bit for the INFIFO_UDF_L1_CH_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_OVF_L3</name>
              <description>The raw interrupt status bit for the INFIFO_OVF_L3_CH_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_UDF_L3</name>
              <description>The raw interrupt status bit for the INFIFO_UDF_L3_CH_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>IN_INT_ENA_CH%s</name>
          <description>Interrupt enable bits of Rx channel 0</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_DONE</name>
              <description>The interrupt enable bit for the IN_DONE_CH_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_SUC_EOF</name>
              <description>The interrupt enable bit for the IN_SUC_EOF_CH_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_ERR_EOF</name>
              <description>The interrupt enable bit for the IN_ERR_EOF_CH_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_DSCR_ERR</name>
              <description>The interrupt enable bit for the IN_DSCR_ERR_CH_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_DSCR_EMPTY</name>
              <description>The interrupt enable bit for the IN_DSCR_EMPTY_CH_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INFIFO_FULL_WM</name>
              <description>The interrupt enable bit for the INFIFO_FULL_WM_CH_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INFIFO_OVF_L1</name>
              <description>The interrupt enable bit for the INFIFO_OVF_L1_CH_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INFIFO_UDF_L1</name>
              <description>The interrupt enable bit for the INFIFO_UDF_L1_CH_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INFIFO_OVF_L3</name>
              <description>The interrupt enable bit for the INFIFO_OVF_L3_CH_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INFIFO_UDF_L3</name>
              <description>The interrupt enable bit for the INFIFO_UDF_L3_CH_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>IN_INT_CLR_CH%s</name>
          <description>Interrupt clear bits of Rx channel 0</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_DONE</name>
              <description>Set this bit to clear the IN_DONE_CH_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IN_SUC_EOF</name>
              <description>Set this bit to clear the IN_SUC_EOF_CH_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IN_ERR_EOF</name>
              <description>Set this bit to clear the IN_ERR_EOF_CH_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IN_DSCR_ERR</name>
              <description>Set this bit to clear the IN_DSCR_ERR_CH_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IN_DSCR_EMPTY</name>
              <description>Set this bit to clear the IN_DSCR_EMPTY_CH_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DMA_INFIFO_FULL_WM</name>
              <description>Set this bit to clear the INFIFO_FULL_WM_CH_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>INFIFO_OVF_L1</name>
              <description>Set this bit to clear the INFIFO_OVF_L1_CH_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>INFIFO_UDF_L1</name>
              <description>Set this bit to clear the INFIFO_UDF_L1_CH_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>INFIFO_OVF_L3</name>
              <description>Set this bit to clear the INFIFO_OVF_L3_CH_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>INFIFO_UDF_L3</name>
              <description>Set this bit to clear the INFIFO_UDF_L3_CH_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>INFIFO_STATUS_CH%s</name>
          <description>Receive FIFO status of Rx channel 0</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <resetValue>0x0F00003A</resetValue>
          <fields>
            <field>
              <name>INFIFO_FULL_L1</name>
              <description>L1 Rx FIFO full signal for Rx channel 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_EMPTY_L1</name>
              <description>L1 Rx FIFO empty signal for Rx channel 0.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_FULL_L2</name>
              <description>L2 Rx FIFO full signal for Rx channel 0.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_EMPTY_L2</name>
              <description>L2 Rx FIFO empty signal for Rx channel 0.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_FULL_L3</name>
              <description>L3 Rx FIFO full signal for Rx channel 0.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_EMPTY_L3</name>
              <description>L3 Rx FIFO empty signal for Rx channel 0.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_CNT_L1</name>
              <description>The register stores the byte number of the data in L1 Rx FIFO for Rx channel 0.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_CNT_L2</name>
              <description>The register stores the byte number of the data in L2 Rx FIFO for Rx channel 0.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_CNT_L3</name>
              <description>The register stores the byte number of the data in L3 Rx FIFO for Rx channel 0.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_REMAIN_UNDER_1B_L3</name>
              <description>reserved</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_REMAIN_UNDER_2B_L3</name>
              <description>reserved</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_REMAIN_UNDER_3B_L3</name>
              <description>reserved</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_REMAIN_UNDER_4B_L3</name>
              <description>reserved</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_BUF_HUNGRY</name>
              <description>reserved</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>IN_POP_CH%s</name>
          <description>Pop control register of Rx channel 0</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000800</resetValue>
          <fields>
            <field>
              <name>INFIFO_RDATA</name>
              <description>This register stores the data popping from DMA FIFO.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INFIFO_POP</name>
              <description>Set this bit to pop data from DMA FIFO.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>IN_LINK_CH%s</name>
          <description>Link descriptor configure and control register of Rx channel 0</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <resetValue>0x01100000</resetValue>
          <fields>
            <field>
              <name>INLINK_ADDR</name>
              <description>This register stores the 20 least significant bits of the first inlink descriptor's address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INLINK_AUTO_RET</name>
              <description>Set this bit to return to current inlink descriptor's address, when there are some errors in current receiving data.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INLINK_STOP</name>
              <description>Set this bit to stop dealing with the inlink descriptors.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INLINK_START</name>
              <description>Set this bit to start dealing with the inlink descriptors.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INLINK_RESTART</name>
              <description>Set this bit to mount a new inlink descriptor.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INLINK_PARK</name>
              <description>1: the inlink descriptor's FSM is in idle state.  0: the inlink descriptor's FSM is working.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>IN_STATE_CH%s</name>
          <description>Receive status of Rx channel 0</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INLINK_DSCR_ADDR</name>
              <description>This register stores the current inlink descriptor's address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_DSCR_STATE</name>
              <description>reserved</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_STATE</name>
              <description>reserved</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>IN_SUC_EOF_DES_ADDR_CH%s</name>
          <description>Inlink descriptor address when EOF occurs of Rx channel 0</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_SUC_EOF_DES_ADDR</name>
              <description>This register stores the address of the inlink descriptor when the EOF bit in this descriptor is 1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>IN_ERR_EOF_DES_ADDR_CH%s</name>
          <description>Inlink descriptor address when errors occur of Rx channel 0</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_ERR_EOF_DES_ADDR</name>
              <description>This register stores the address of the inlink descriptor when there are some errors in current receiving data. Only used when peripheral is UHCI0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>IN_DSCR_CH%s</name>
          <description>Current inlink descriptor address of Rx channel 0</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INLINK_DSCR</name>
              <description>The address of the current inlink descriptor x.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>IN_DSCR_BF0_CH%s</name>
          <description>The last inlink descriptor address of Rx channel 0</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INLINK_DSCR_BF0</name>
              <description>The address of the last inlink descriptor x-1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>IN_DSCR_BF1_CH%s</name>
          <description>The second-to-last inlink descriptor address of Rx channel 0</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INLINK_DSCR_BF1</name>
              <description>The address of the second-to-last inlink descriptor x-2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>IN_WIGHT_CH%s</name>
          <description>Weight register of Rx channel 0</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000F00</resetValue>
          <fields>
            <field>
              <name>RX_WEIGHT</name>
              <description>The weight of Rx channel 0.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>IN_PRI_CH%s</name>
          <description>Priority register of Rx channel 0</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RX_PRI</name>
              <description>The priority of Rx channel 0. The larger of the value, the higher of the priority.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>IN_PERI_SEL_CH%s</name>
          <description>Peripheral selection of Rx channel 0</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000003F</resetValue>
          <fields>
            <field>
              <name>PERI_IN_SEL</name>
              <description>This register is used to select peripheral for Rx channel 0. 0:SPI2. 1: SPI3. 2: UHCI0. 3: I2S0. 4: I2S1. 5: LCD_CAM. 6: AES. 7: SHA. 8: ADC_DAC. 9: RMT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>OUT_CONF0_CH%s</name>
          <description>Configure 0 register of Tx channel 0</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>OUT_RST</name>
              <description>This bit is used to reset DMA channel 0 Tx FSM and Tx FIFO pointer.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_LOOP_TEST</name>
              <description>reserved</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_AUTO_WRBACK</name>
              <description>Set this bit to enable automatic outlink-writeback when all the data in tx buffer has been transmitted.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_EOF_MODE</name>
              <description>EOF flag generation mode when transmitting data. 1: EOF flag for Tx channel 0 is generated when data need to transmit has been popped from FIFO in DMA</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTDSCR_BURST_EN</name>
              <description>Set this bit to 1 to enable INCR burst transfer for Tx channel 0 reading link descriptor when accessing internal SRAM.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_DATA_BURST_EN</name>
              <description>Set this bit to 1 to enable INCR burst transfer for Tx channel 0 transmitting data when accessing internal SRAM.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>OUT_CONF1_CH%s</name>
          <description>Configure 1 register of Tx channel 0</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUT_CHECK_OWNER</name>
              <description>Set this bit to enable checking the owner attribute of the link descriptor.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_EXT_MEM_BK_SIZE</name>
              <description>Block size of Tx channel 0 when DMA access external SRAM. 0: 16 bytes      1: 32 bytes    2/3:reserved</description>
              <bitOffset>13</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>OUT_INT_RAW_CH%s</name>
          <description>Raw status interrupt of Tx channel 0</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUT_DONE</name>
              <description>The raw interrupt bit turns to high level when the last data pointed by one outlink descriptor has been transmitted to peripherals for Tx channel 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_EOF</name>
              <description>The raw interrupt bit turns to high level when the last data pointed by one outlink descriptor has been read from memory for Tx channel 0.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_DSCR_ERR</name>
              <description>The raw interrupt bit turns to high level when detecting outlink descriptor error, including owner error, the second and third word error of outlink descriptor for Tx channel 0.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_TOTAL_EOF</name>
              <description>The raw interrupt bit turns to high level when data corresponding a outlink (includes one link descriptor or few link descriptors) is transmitted out for Tx channel 0.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_OVF_L1</name>
              <description>This raw interrupt bit turns to high level when level 1 fifo of Tx channel 0 is overflow.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_UDF_L1</name>
              <description>This raw interrupt bit turns to high level when level 1 fifo of Tx channel 0 is underflow.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_OVF_L3</name>
              <description>This raw interrupt bit turns to high level when level 3 fifo of Tx channel 0 is overflow.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_UDF_L3</name>
              <description>This raw interrupt bit turns to high level when level 3 fifo of Tx channel 0 is underflow.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>OUT_INT_ST_CH%s</name>
          <description>Masked interrupt of Tx channel 0</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUT_DONE</name>
              <description>The raw interrupt status bit for the OUT_DONE_CH_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_EOF</name>
              <description>The raw interrupt status bit for the OUT_EOF_CH_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_DSCR_ERR</name>
              <description>The raw interrupt status bit for the OUT_DSCR_ERR_CH_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_TOTAL_EOF</name>
              <description>The raw interrupt status bit for the OUT_TOTAL_EOF_CH_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_OVF_L1</name>
              <description>The raw interrupt status bit for the OUTFIFO_OVF_L1_CH_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_UDF_L1</name>
              <description>The raw interrupt status bit for the OUTFIFO_UDF_L1_CH_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_OVF_L3</name>
              <description>The raw interrupt status bit for the OUTFIFO_OVF_L3_CH_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_UDF_L3</name>
              <description>The raw interrupt status bit for the OUTFIFO_UDF_L3_CH_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>OUT_INT_ENA_CH%s</name>
          <description>Interrupt enable bits of Tx channel 0</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUT_DONE</name>
              <description>The interrupt enable bit for the OUT_DONE_CH_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_EOF</name>
              <description>The interrupt enable bit for the OUT_EOF_CH_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_DSCR_ERR</name>
              <description>The interrupt enable bit for the OUT_DSCR_ERR_CH_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_TOTAL_EOF</name>
              <description>The interrupt enable bit for the OUT_TOTAL_EOF_CH_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTFIFO_OVF_L1</name>
              <description>The interrupt enable bit for the OUTFIFO_OVF_L1_CH_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTFIFO_UDF_L1</name>
              <description>The interrupt enable bit for the OUTFIFO_UDF_L1_CH_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTFIFO_OVF_L3</name>
              <description>The interrupt enable bit for the OUTFIFO_OVF_L3_CH_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTFIFO_UDF_L3</name>
              <description>The interrupt enable bit for the OUTFIFO_UDF_L3_CH_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>OUT_INT_CLR_CH%s</name>
          <description>Interrupt clear bits of Tx channel 0</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUT_DONE</name>
              <description>Set this bit to clear the OUT_DONE_CH_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUT_EOF</name>
              <description>Set this bit to clear the OUT_EOF_CH_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUT_DSCR_ERR</name>
              <description>Set this bit to clear the OUT_DSCR_ERR_CH_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUT_TOTAL_EOF</name>
              <description>Set this bit to clear the OUT_TOTAL_EOF_CH_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUTFIFO_OVF_L1</name>
              <description>Set this bit to clear the OUTFIFO_OVF_L1_CH_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUTFIFO_UDF_L1</name>
              <description>Set this bit to clear the OUTFIFO_UDF_L1_CH_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUTFIFO_OVF_L3</name>
              <description>Set this bit to clear the OUTFIFO_OVF_L3_CH_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUTFIFO_UDF_L3</name>
              <description>Set this bit to clear the OUTFIFO_UDF_L3_CH_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>OUTFIFO_STATUS_CH%s</name>
          <description>Transmit FIFO status of Tx channel 0</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <resetValue>0x0780002A</resetValue>
          <fields>
            <field>
              <name>OUTFIFO_FULL_L1</name>
              <description>L1 Tx FIFO full signal for Tx channel 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_EMPTY_L1</name>
              <description>L1 Tx FIFO empty signal for Tx channel 0.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_FULL_L2</name>
              <description>L2 Tx FIFO full signal for Tx channel 0.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_EMPTY_L2</name>
              <description>L2 Tx FIFO empty signal for Tx channel 0.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_FULL_L3</name>
              <description>L3 Tx FIFO full signal for Tx channel 0.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_EMPTY_L3</name>
              <description>L3 Tx FIFO empty signal for Tx channel 0.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_CNT_L1</name>
              <description>The register stores the byte number of the data in L1 Tx FIFO for Tx channel 0.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_CNT_L2</name>
              <description>The register stores the byte number of the data in L2 Tx FIFO for Tx channel 0.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTFIFO_CNT_L3</name>
              <description>The register stores the byte number of the data in L3 Tx FIFO for Tx channel 0.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_REMAIN_UNDER_1B_L3</name>
              <description>reserved</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_REMAIN_UNDER_2B_L3</name>
              <description>reserved</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_REMAIN_UNDER_3B_L3</name>
              <description>reserved</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_REMAIN_UNDER_4B_L3</name>
              <description>reserved</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>OUT_PUSH_CH%s</name>
          <description>Push control register of Rx channel 0</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUTFIFO_WDATA</name>
              <description>This register stores the data that need to be pushed into DMA FIFO.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTFIFO_PUSH</name>
              <description>Set this bit to push data into DMA FIFO.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>OUT_LINK_CH%s</name>
          <description>Link descriptor configure and control register of Tx channel 0</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <resetValue>0x00800000</resetValue>
          <fields>
            <field>
              <name>OUTLINK_ADDR</name>
              <description>This register stores the 20 least significant bits of the first outlink descriptor's address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTLINK_STOP</name>
              <description>Set this bit to stop dealing with the outlink descriptors.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTLINK_START</name>
              <description>Set this bit to start dealing with the outlink descriptors.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTLINK_RESTART</name>
              <description>Set this bit to restart a new outlink from the last address.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTLINK_PARK</name>
              <description>1: the outlink descriptor's FSM is in idle state.  0: the outlink descriptor's FSM is working.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>OUT_STATE_CH%s</name>
          <description>Transmit status of Tx channel 0</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUTLINK_DSCR_ADDR</name>
              <description>This register stores the current outlink descriptor's address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_DSCR_STATE</name>
              <description>reserved</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_STATE</name>
              <description>reserved</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>OUT_EOF_DES_ADDR_CH%s</name>
          <description>Outlink descriptor address when EOF occurs of Tx channel 0</description>
          <addressOffset>0x88</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUT_EOF_DES_ADDR</name>
              <description>This register stores the address of the outlink descriptor when the EOF bit in this descriptor is 1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>OUT_EOF_BFR_DES_ADDR_CH%s</name>
          <description>The last outlink descriptor address when EOF occurs of Tx channel 0</description>
          <addressOffset>0x8C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUT_EOF_BFR_DES_ADDR</name>
              <description>This register stores the address of the outlink descriptor before the last outlink descriptor.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>OUT_DSCR_CH%s</name>
          <description>Current inlink descriptor address of Tx channel 0</description>
          <addressOffset>0x90</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUTLINK_DSCR</name>
              <description>The address of the current outlink descriptor y.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>OUT_DSCR_BF0_CH%s</name>
          <description>The last inlink descriptor address of Tx channel 0</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUTLINK_DSCR_BF0</name>
              <description>The address of the last outlink descriptor y-1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>OUT_DSCR_BF1_CH%s</name>
          <description>The second-to-last inlink descriptor address of Tx channel 0</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUTLINK_DSCR_BF1</name>
              <description>The address of the second-to-last inlink descriptor x-2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>OUT_WIGHT_CH%s</name>
          <description>Weight register of Rx channel 0</description>
          <addressOffset>0x9C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000F00</resetValue>
          <fields>
            <field>
              <name>TX_WEIGHT</name>
              <description>The weight of Tx channel 0.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>OUT_PRI_CH%s</name>
          <description>Priority register of Tx channel 0.</description>
          <addressOffset>0xA4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TX_PRI</name>
              <description>The priority of Tx channel 0. The larger of the value, the higher of the priority.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0xC0</dimIncrement>
          <name>OUT_PERI_SEL_CH%s</name>
          <description>Peripheral selection of Tx channel 0</description>
          <addressOffset>0xA8</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000003F</resetValue>
          <fields>
            <field>
              <name>PERI_OUT_SEL</name>
              <description>This register is used to select peripheral for Tx channel 0. 0:SPI2. 1: SPI3. 2: UHCI0. 3: I2S0. 4: I2S1. 5: LCD_CAM. 6: AES. 7: SHA. 8: ADC_DAC. 9: RMT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AHB_TEST</name>
          <description>reserved</description>
          <addressOffset>0x3C0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>AHB_TESTMODE</name>
              <description>reserved</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AHB_TESTADDR</name>
              <description>reserved</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_CONF</name>
          <description>reserved</description>
          <addressOffset>0x3C4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000020</resetValue>
          <fields>
            <field>
              <name>DMA_RAM_FORCE_PD</name>
              <description>Set this bit to force power down DMA internal memory.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_RAM_FORCE_PU</name>
              <description>Set this bit to force power up DMA internal memory</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_RAM_CLK_FO</name>
              <description>1: Force to open the clock and bypass the gate-clock when accessing the RAM in DMA. 0: A gate-clock will be used when accessing the RAM in DMA.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MISC_CONF</name>
          <description>MISC register</description>
          <addressOffset>0x3C8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>AHBM_RST_INTER</name>
              <description>Set this bit, then clear this bit to reset the internal ahb FSM.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AHBM_RST_EXTER</name>
              <description>Set this bit, then clear this bit to reset the external ahb FSM.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ARB_PRI_DIS</name>
              <description>Set this bit to disable priority arbitration function.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EN</name>
              <description>1'h1: Force clock on for register. 1'h0: Support clock only when application writes registers.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0x8</dimIncrement>
          <name>IN_SRAM_SIZE_CH%s</name>
          <description>Receive L2 FIFO depth of Rx channel 0</description>
          <addressOffset>0x3CC</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000000E</resetValue>
          <fields>
            <field>
              <name>IN_SIZE</name>
              <description>This register is used to configure the size of L2 Tx FIFO for Rx channel 0. 0:16 bytes. 1:24 bytes. 2:32 bytes. 3: 40 bytes. 4: 48 bytes. 5:56 bytes. 6: 64 bytes. 7: 72 bytes. 8: 80 bytes.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>5</dim>
          <dimIncrement>0x8</dimIncrement>
          <name>OUT_SRAM_SIZE_CH%s</name>
          <description>Transmit L2 FIFO depth of Tx channel 0</description>
          <addressOffset>0x3D0</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000000E</resetValue>
          <fields>
            <field>
              <name>OUT_SIZE</name>
              <description>This register is used to configure the size of L2 Tx FIFO for Tx channel 0. 0:16 bytes. 1:24 bytes. 2:32 bytes. 3: 40 bytes. 4: 48 bytes. 5:56 bytes. 6: 64 bytes. 7: 72 bytes. 8: 80 bytes.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXTMEM_REJECT_ADDR</name>
          <description>Reject address accessing external RAM</description>
          <addressOffset>0x3F4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EXTMEM_REJECT_ADDR</name>
              <description>This register store the first address rejected by permission control when accessing external RAM.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXTMEM_REJECT_ST</name>
          <description>Reject status accessing external RAM</description>
          <addressOffset>0x3F8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EXTMEM_REJECT_ATRR</name>
              <description>The reject accessing. Bit 0: if this bit is 1, the rejected accessing is READ. Bit 1: if this bit is 1, the rejected accessing is WRITE.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EXTMEM_REJECT_CHANNEL_NUM</name>
              <description>The register indicate the reject accessing from which channel.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EXTMEM_REJECT_PERI_NUM</name>
              <description>This register indicate reject accessing from which peripheral.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXTMEM_REJECT_INT_RAW</name>
          <description>Raw interrupt status of external RAM permission</description>
          <addressOffset>0x3FC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EXTMEM_REJECT_INT_RAW</name>
              <description>The raw interrupt bit turns to high level when accessing external RAM is rejected by permission control.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXTMEM_REJECT_INT_ST</name>
          <description>Masked interrupt status of external RAM permission</description>
          <addressOffset>0x400</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EXTMEM_REJECT_INT_ST</name>
              <description>The raw interrupt status bit for the EXTMEM_REJECT_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXTMEM_REJECT_INT_ENA</name>
          <description>Interrupt enable bits of external RAM permission</description>
          <addressOffset>0x404</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EXTMEM_REJECT_INT_ENA</name>
              <description>The interrupt enable bit for the EXTMEM_REJECT_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXTMEM_REJECT_INT_CLR</name>
          <description>Interrupt clear bits of external RAM permission</description>
          <addressOffset>0x408</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EXTMEM_REJECT_INT_CLR</name>
              <description>Set this bit to clear the EXTMEM_REJECT_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>Version control register</description>
          <addressOffset>0x40C</addressOffset>
          <size>0x20</size>
          <resetValue>0x02101180</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>register version.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>DS</name>
      <description>Digital Signature</description>
      <groupName>DS</groupName>
      <baseAddress>0x6003D000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xA5C</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <dim>1584</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>C_MEM[%s]</name>
          <description>Memory C</description>
          <addressOffset>0x0</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>IV_%s</name>
          <description>IV block data</description>
          <addressOffset>0x630</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IV_0</name>
              <description>Stores IV block data</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>512</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>X_MEM[%s]</name>
          <description>Memory X</description>
          <addressOffset>0x800</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <dim>512</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>Z_MEM[%s]</name>
          <description>Memory Z</description>
          <addressOffset>0xA00</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <name>SET_START</name>
          <description>Activates the DS peripheral</description>
          <addressOffset>0xE00</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_START</name>
              <description>Write 1 to this register to active the DS peripheral</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_ME</name>
          <description>Starts DS operation</description>
          <addressOffset>0xE04</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_ME</name>
              <description>Write 1 to this register to start DS operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_FINISH</name>
          <description>Ends DS operation</description>
          <addressOffset>0xE08</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_FINISH</name>
              <description>Write 1 to this register to end DS operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>QUERY_BUSY</name>
          <description>Status of the DS perihperal</description>
          <addressOffset>0xE0C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>QUERY_BUSY</name>
              <description>Stores the status of the DS peripheral. 1: The DS peripheral is busy. 0: The DS peripheral is idle.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>QUERY_KEY_WRONG</name>
          <description>Checks the reason why DS_KEY is not ready</description>
          <addressOffset>0xE10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>QUERY_KEY_WRONG</name>
              <description>1-15: HMAC was activated, but the DS peripheral did not successfully receive the DS_KEY from the HMAC peripheral. (The biggest value is 15). 0: HMAC is not activated.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>QUERY_CHECK</name>
          <description>Queries DS check result</description>
          <addressOffset>0xE14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MD_ERROR</name>
              <description>MD checkout result. 1: The MD check fails. 0: The MD check passes.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PADDING_BAD</name>
              <description>padding checkout result. 1: The padding check fails. 0: The padding check passes.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>DS version control register</description>
          <addressOffset>0xE20</addressOffset>
          <size>0x20</size>
          <resetValue>0x20191217</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>ds version information</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>EFUSE</name>
      <description>eFuse Controller</description>
      <groupName>EFUSE</groupName>
      <baseAddress>0x60007000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x1CC</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>EFUSE</name>
        <value>36</value>
      </interrupt>
      <registers>
        <register>
          <name>PGM_DATA0</name>
          <description>Register 0 that stores data to be programmed.</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PGM_DATA_0</name>
              <description>The content of the 0th 32-bit data to be programmed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PGM_DATA1</name>
          <description>Register 1 that stores data to be programmed.</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PGM_DATA_1</name>
              <description>The content of the 1st 32-bit data to be programmed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PGM_DATA2</name>
          <description>Register 2 that stores data to be programmed.</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PGM_DATA_2</name>
              <description>The content of the 2nd 32-bit data to be programmed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PGM_DATA3</name>
          <description>Register 3 that stores data to be programmed.</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PGM_DATA_3</name>
              <description>The content of the 3rd 32-bit data to be programmed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PGM_DATA4</name>
          <description>Register 4 that stores data to be programmed.</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PGM_DATA_4</name>
              <description>The content of the 4th 32-bit data to be programmed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PGM_DATA5</name>
          <description>Register 5 that stores data to be programmed.</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PGM_DATA_5</name>
              <description>The content of the 5th 32-bit data to be programmed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PGM_DATA6</name>
          <description>Register 6 that stores data to be programmed.</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PGM_DATA_6</name>
              <description>The content of the 6th 32-bit data to be programmed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PGM_DATA7</name>
          <description>Register 7 that stores data to be programmed.</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PGM_DATA_7</name>
              <description>The content of the 7th 32-bit data to be programmed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PGM_CHECK_VALUE0</name>
          <description>Register 0 that stores the RS code to be programmed.</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PGM_RS_DATA_0</name>
              <description>The content of the 0th 32-bit RS code to be programmed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PGM_CHECK_VALUE1</name>
          <description>Register 1 that stores the RS code to be programmed.</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PGM_RS_DATA_1</name>
              <description>The content of the 1st 32-bit RS code to be programmed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PGM_CHECK_VALUE2</name>
          <description>Register 2 that stores the RS code to be programmed.</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PGM_RS_DATA_2</name>
              <description>The content of the 2nd 32-bit RS code to be programmed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_WR_DIS</name>
          <description>BLOCK0 data register 0.</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>WR_DIS</name>
              <description>Disable programming of individual eFuses.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_DATA0</name>
          <description>BLOCK0 data register 1.</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RD_DIS</name>
              <description>Set this bit to disable reading from BlOCK4-10.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_RTC_RAM_BOOT</name>
              <description>Set this bit to disable boot from RTC RAM.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_ICACHE</name>
              <description>Set this bit to disable Icache.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_DCACHE</name>
              <description>Set this bit to disable Dcache.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_DOWNLOAD_ICACHE</name>
              <description>Set this bit to disable Icache in download mode (boot_mode[3:0] is 0, 1, 2, 3, 6, 7).</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_DOWNLOAD_DCACHE</name>
              <description>Set this bit to disable Dcache in download mode ( boot_mode[3:0] is 0, 1, 2, 3, 6, 7).</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_FORCE_DOWNLOAD</name>
              <description>Set this bit to disable the function that forces chip into download mode.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_USB</name>
              <description>Set this bit to disable USB function.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_CAN</name>
              <description>Set this bit to disable CAN function.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_APP_CPU</name>
              <description>Disable app cpu.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SOFT_DIS_JTAG</name>
              <description>Set these bits to disable JTAG in the soft way (odd number 1 means disable ). JTAG can be enabled in HMAC module.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_PAD_JTAG</name>
              <description>Set this bit to disable JTAG in the hard way. JTAG is disabled permanently.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_DOWNLOAD_MANUAL_ENCRYPT</name>
              <description>Set this bit to disable flash encryption when in download boot modes.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USB_DREFH</name>
              <description>Controls single-end input threshold vrefh, 1.76 V to 2 V with step of 80 mV, stored in eFuse.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USB_DREFL</name>
              <description>Controls single-end input threshold vrefl, 0.8 V to 1.04 V with step of 80 mV, stored in eFuse.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USB_EXCHG_PINS</name>
              <description>Set this bit to exchange USB D+ and D- pins.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EXT_PHY_ENABLE</name>
              <description>Set this bit to enable external PHY.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BTLC_GPIO_ENABLE</name>
              <description>Bluetooth GPIO signal output security level control.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_MODECURLIM</name>
              <description>SPI regulator switches current limit mode.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_DREFH</name>
              <description>SPI regulator high voltage reference.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_DATA1</name>
          <description>BLOCK0 data register 2.</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>VDD_SPI_DREFM</name>
              <description>SPI regulator medium voltage reference.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_DREFL</name>
              <description>SPI regulator low voltage reference.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_XPD</name>
              <description>SPI regulator power up signal.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_TIEH</name>
              <description>SPI regulator output is short connected to VDD3P3_RTC_IO.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_FORCE</name>
              <description>Set this bit and force to use the configuration of eFuse to configure VDD_SPI.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_EN_INIT</name>
              <description>Set SPI regulator to 0 to configure init[1:0]=0.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_ENCURLIM</name>
              <description>Set SPI regulator to 1 to enable output current limit.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_DCURLIM</name>
              <description>Tunes the current limit threshold of SPI regulator when tieh=0, about 800 mA/(8+d).</description>
              <bitOffset>9</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_INIT</name>
              <description>Adds resistor from LDO output to ground. 0: no resistance 1: 6 K 2: 4 K 3: 2 K.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_DCAP</name>
              <description>Prevents SPI regulator from overshoot.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>WDT_DELAY_SEL</name>
              <description>Selects RTC watchdog timeout threshold, in unit of slow clock cycle. 0: 40000. 1: 80000. 2: 160000. 3:320000.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SPI_BOOT_CRYPT_CNT</name>
              <description>Set this bit to enable SPI boot encrypt/decrypt. Odd number of 1: enable. even number of 1: disable.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_KEY_REVOKE0</name>
              <description>Set this bit to enable revoking first secure boot key.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_KEY_REVOKE1</name>
              <description>Set this bit to enable revoking second secure boot key.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_KEY_REVOKE2</name>
              <description>Set this bit to enable revoking third secure boot key.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_0</name>
              <description>Purpose of Key0.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_1</name>
              <description>Purpose of Key1.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_DATA2</name>
          <description>BLOCK0 data register 3.</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY_PURPOSE_2</name>
              <description>Purpose of Key2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_3</name>
              <description>Purpose of Key3.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_4</name>
              <description>Purpose of Key4.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_5</name>
              <description>Purpose of Key5.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RPT4_RESERVED0</name>
              <description>Reserved (used for four backups method).</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_EN</name>
              <description>Set this bit to enable secure boot.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_AGGRESSIVE_REVOKE</name>
              <description>Set this bit to enable revoking aggressive secure boot.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_USB_JTAG</name>
              <description>Set this bit to disable function of usb switch to jtag in module of usb device.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_USB_DEVICE</name>
              <description>Set this bit to disable usb device.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>STRAP_JTAG_SEL</name>
              <description>Set this bit to enable selection between usb_to_jtag and pad_to_jtag through strapping gpio10 when both reg_dis_usb_jtag and reg_dis_pad_jtag are equal to 0.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USB_PHY_SEL</name>
              <description>This bit is used to switch internal PHY and external PHY for USB OTG and USB Device. 0: internal PHY is assigned to USB Device while external PHY is assigned to USB OTG. 1: internal PHY is assigned to USB OTG while external PHY is assigned to USB Device.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>POWER_GLITCH_DSENSE</name>
              <description>Sample delay configuration of power glitch.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_TPUW</name>
              <description>Configures flash waiting time after power-up, in unit of ms. If the value is less than 15, the waiting time is the configurable value.  Otherwise, the waiting time is twice the configurable value.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_DATA3</name>
          <description>BLOCK0 data register 4.</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DIS_DOWNLOAD_MODE</name>
              <description>Set this bit to disable download mode (boot_mode[3:0] = 0, 1, 2, 3, 6, 7).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_LEGACY_SPI_BOOT</name>
              <description>Set this bit to disable Legacy SPI boot mode (boot_mode[3:0] = 4).</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>UART_PRINT_CHANNEL</name>
              <description>Selectes the default UART print channel. 0: UART0. 1: UART1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_ECC_MODE</name>
              <description>Set ECC mode in ROM, 0: ROM would Enable Flash ECC 16to18 byte mode. 1:ROM would use 16to17 byte mode.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_USB_DOWNLOAD_MODE</name>
              <description>Set this bit to disable UART download mode through USB.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ENABLE_SECURITY_DOWNLOAD</name>
              <description>Set this bit to enable secure UART download mode.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>UART_PRINT_CONTROL</name>
              <description>Set the default UARTboot message output mode. 00: Enabled. 01: Enabled when GPIO8 is low at reset. 10: Enabled when GPIO8 is high at reset. 11:disabled.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PIN_POWER_SELECTION</name>
              <description>GPIO33-GPIO37 power supply selection in ROM code. 0: VDD3P3_CPU. 1: VDD_SPI.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_TYPE</name>
              <description>Set the maximum lines of SPI flash. 0: four lines. 1: eight lines.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_PAGE_SIZE</name>
              <description>Set Flash page size.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_ECC_EN</name>
              <description>Set 1 to enable ECC for flash boot.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FORCE_SEND_RESUME</name>
              <description>Set this bit to force ROM code to send a resume command during SPI boot.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_VERSION</name>
              <description>Secure version (used by ESP-IDF anti-rollback feature).</description>
              <bitOffset>14</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>POWERGLITCH_EN</name>
              <description>Set this bit to enable power glitch function.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RPT4_RESERVED1</name>
              <description>Reserved (used for four backups method).</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_DATA4</name>
          <description>BLOCK0 data register 5.</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RPT4_RESERVED2</name>
              <description>Reserved (used for four backups method).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_MAC_SPI_SYS_0</name>
          <description>BLOCK1 data register 0.</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MAC_0</name>
              <description>Stores the low 32 bits of MAC address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_MAC_SPI_SYS_1</name>
          <description>BLOCK1 data register 1.</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MAC_1</name>
              <description>Stores the high 16 bits of MAC address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SPI_PAD_CONF_0</name>
              <description>Stores the zeroth part of SPI_PAD_CONF.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_MAC_SPI_SYS_2</name>
          <description>BLOCK1 data register 2.</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SPI_PAD_CONF_1</name>
              <description>Stores the first part of SPI_PAD_CONF.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_MAC_SPI_SYS_3</name>
          <description>BLOCK1 data register 3.</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SPI_PAD_CONF_2</name>
              <description>Stores the second part of SPI_PAD_CONF.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SYS_DATA_PART0_0</name>
              <description>Stores the fist 14 bits of the zeroth part of system data.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_MAC_SPI_SYS_4</name>
          <description>BLOCK1 data register 4.</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART0_1</name>
              <description>Stores the fist 32 bits of the zeroth part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_MAC_SPI_SYS_5</name>
          <description>BLOCK1 data register 5.</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART0_2</name>
              <description>Stores the second 32 bits of the zeroth part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART1_DATA0</name>
          <description>Register 0 of BLOCK2 (system).</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART1_0</name>
              <description>Stores the zeroth 32 bits of the first part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART1_DATA1</name>
          <description>Register 1 of BLOCK2 (system).</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART1_1</name>
              <description>Stores the first 32 bits of the first part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART1_DATA2</name>
          <description>Register 2 of BLOCK2 (system).</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART1_2</name>
              <description>Stores the second 32 bits of the first part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART1_DATA3</name>
          <description>Register 3 of BLOCK2 (system).</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART1_3</name>
              <description>Stores the third 32 bits of the first part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART1_DATA4</name>
          <description>Register 4 of BLOCK2 (system).</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART1_4</name>
              <description>Stores the fourth 32 bits of the first part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART1_DATA5</name>
          <description>Register 5 of BLOCK2 (system).</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART1_5</name>
              <description>Stores the fifth 32 bits of the first part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART1_DATA6</name>
          <description>Register 6 of BLOCK2 (system).</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART1_6</name>
              <description>Stores the sixth 32 bits of the first part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART1_DATA7</name>
          <description>Register 7 of BLOCK2 (system).</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART1_7</name>
              <description>Stores the seventh 32 bits of the first part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_USR_DATA0</name>
          <description>Register 0 of BLOCK3 (user).</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>USR_DATA0</name>
              <description>Stores the zeroth 32 bits of BLOCK3 (user).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_USR_DATA1</name>
          <description>Register 1 of BLOCK3 (user).</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>USR_DATA1</name>
              <description>Stores the first 32 bits of BLOCK3 (user).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_USR_DATA2</name>
          <description>Register 2 of BLOCK3 (user).</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>USR_DATA2</name>
              <description>Stores the second 32 bits of BLOCK3 (user).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_USR_DATA3</name>
          <description>Register 3 of BLOCK3 (user).</description>
          <addressOffset>0x88</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>USR_DATA3</name>
              <description>Stores the third 32 bits of BLOCK3 (user).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_USR_DATA4</name>
          <description>Register 4 of BLOCK3 (user).</description>
          <addressOffset>0x8C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>USR_DATA4</name>
              <description>Stores the fourth 32 bits of BLOCK3 (user).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_USR_DATA5</name>
          <description>Register 5 of BLOCK3 (user).</description>
          <addressOffset>0x90</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>USR_DATA5</name>
              <description>Stores the fifth 32 bits of BLOCK3 (user).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_USR_DATA6</name>
          <description>Register 6 of BLOCK3 (user).</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>USR_DATA6</name>
              <description>Stores the sixth 32 bits of BLOCK3 (user).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_USR_DATA7</name>
          <description>Register 7 of BLOCK3 (user).</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>USR_DATA7</name>
              <description>Stores the seventh 32 bits of BLOCK3 (user).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY0_DATA0</name>
          <description>Register 0 of BLOCK4 (KEY0).</description>
          <addressOffset>0x9C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY0_DATA0</name>
              <description>Stores the zeroth 32 bits of KEY0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY0_DATA1</name>
          <description>Register 1 of BLOCK4 (KEY0).</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY0_DATA1</name>
              <description>Stores the first 32 bits of KEY0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY0_DATA2</name>
          <description>Register 2 of BLOCK4 (KEY0).</description>
          <addressOffset>0xA4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY0_DATA2</name>
              <description>Stores the second 32 bits of KEY0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY0_DATA3</name>
          <description>Register 3 of BLOCK4 (KEY0).</description>
          <addressOffset>0xA8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY0_DATA3</name>
              <description>Stores the third 32 bits of KEY0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY0_DATA4</name>
          <description>Register 4 of BLOCK4 (KEY0).</description>
          <addressOffset>0xAC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY0_DATA4</name>
              <description>Stores the fourth 32 bits of KEY0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY0_DATA5</name>
          <description>Register 5 of BLOCK4 (KEY0).</description>
          <addressOffset>0xB0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY0_DATA5</name>
              <description>Stores the fifth 32 bits of KEY0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY0_DATA6</name>
          <description>Register 6 of BLOCK4 (KEY0).</description>
          <addressOffset>0xB4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY0_DATA6</name>
              <description>Stores the sixth 32 bits of KEY0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY0_DATA7</name>
          <description>Register 7 of BLOCK4 (KEY0).</description>
          <addressOffset>0xB8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY0_DATA7</name>
              <description>Stores the seventh 32 bits of KEY0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY1_DATA0</name>
          <description>Register 0 of BLOCK5 (KEY1).</description>
          <addressOffset>0xBC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY1_DATA0</name>
              <description>Stores the zeroth 32 bits of KEY1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY1_DATA1</name>
          <description>Register 1 of BLOCK5 (KEY1).</description>
          <addressOffset>0xC0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY1_DATA1</name>
              <description>Stores the first 32 bits of KEY1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY1_DATA2</name>
          <description>Register 2 of BLOCK5 (KEY1).</description>
          <addressOffset>0xC4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY1_DATA2</name>
              <description>Stores the second 32 bits of KEY1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY1_DATA3</name>
          <description>Register 3 of BLOCK5 (KEY1).</description>
          <addressOffset>0xC8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY1_DATA3</name>
              <description>Stores the third 32 bits of KEY1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY1_DATA4</name>
          <description>Register 4 of BLOCK5 (KEY1).</description>
          <addressOffset>0xCC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY1_DATA4</name>
              <description>Stores the fourth 32 bits of KEY1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY1_DATA5</name>
          <description>Register 5 of BLOCK5 (KEY1).</description>
          <addressOffset>0xD0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY1_DATA5</name>
              <description>Stores the fifth 32 bits of KEY1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY1_DATA6</name>
          <description>Register 6 of BLOCK5 (KEY1).</description>
          <addressOffset>0xD4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY1_DATA6</name>
              <description>Stores the sixth 32 bits of KEY1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY1_DATA7</name>
          <description>Register 7 of BLOCK5 (KEY1).</description>
          <addressOffset>0xD8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY1_DATA7</name>
              <description>Stores the seventh 32 bits of KEY1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY2_DATA0</name>
          <description>Register 0 of BLOCK6 (KEY2).</description>
          <addressOffset>0xDC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY2_DATA0</name>
              <description>Stores the zeroth 32 bits of KEY2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY2_DATA1</name>
          <description>Register 1 of BLOCK6 (KEY2).</description>
          <addressOffset>0xE0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY2_DATA1</name>
              <description>Stores the first 32 bits of KEY2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY2_DATA2</name>
          <description>Register 2 of BLOCK6 (KEY2).</description>
          <addressOffset>0xE4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY2_DATA2</name>
              <description>Stores the second 32 bits of KEY2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY2_DATA3</name>
          <description>Register 3 of BLOCK6 (KEY2).</description>
          <addressOffset>0xE8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY2_DATA3</name>
              <description>Stores the third 32 bits of KEY2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY2_DATA4</name>
          <description>Register 4 of BLOCK6 (KEY2).</description>
          <addressOffset>0xEC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY2_DATA4</name>
              <description>Stores the fourth 32 bits of KEY2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY2_DATA5</name>
          <description>Register 5 of BLOCK6 (KEY2).</description>
          <addressOffset>0xF0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY2_DATA5</name>
              <description>Stores the fifth 32 bits of KEY2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY2_DATA6</name>
          <description>Register 6 of BLOCK6 (KEY2).</description>
          <addressOffset>0xF4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY2_DATA6</name>
              <description>Stores the sixth 32 bits of KEY2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY2_DATA7</name>
          <description>Register 7 of BLOCK6 (KEY2).</description>
          <addressOffset>0xF8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY2_DATA7</name>
              <description>Stores the seventh 32 bits of KEY2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY3_DATA0</name>
          <description>Register 0 of BLOCK7 (KEY3).</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY3_DATA0</name>
              <description>Stores the zeroth 32 bits of KEY3.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY3_DATA1</name>
          <description>Register 1 of BLOCK7 (KEY3).</description>
          <addressOffset>0x100</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY3_DATA1</name>
              <description>Stores the first 32 bits of KEY3.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY3_DATA2</name>
          <description>Register 2 of BLOCK7 (KEY3).</description>
          <addressOffset>0x104</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY3_DATA2</name>
              <description>Stores the second 32 bits of KEY3.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY3_DATA3</name>
          <description>Register 3 of BLOCK7 (KEY3).</description>
          <addressOffset>0x108</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY3_DATA3</name>
              <description>Stores the third 32 bits of KEY3.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY3_DATA4</name>
          <description>Register 4 of BLOCK7 (KEY3).</description>
          <addressOffset>0x10C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY3_DATA4</name>
              <description>Stores the fourth 32 bits of KEY3.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY3_DATA5</name>
          <description>Register 5 of BLOCK7 (KEY3).</description>
          <addressOffset>0x110</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY3_DATA5</name>
              <description>Stores the fifth 32 bits of KEY3.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY3_DATA6</name>
          <description>Register 6 of BLOCK7 (KEY3).</description>
          <addressOffset>0x114</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY3_DATA6</name>
              <description>Stores the sixth 32 bits of KEY3.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY3_DATA7</name>
          <description>Register 7 of BLOCK7 (KEY3).</description>
          <addressOffset>0x118</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY3_DATA7</name>
              <description>Stores the seventh 32 bits of KEY3.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY4_DATA0</name>
          <description>Register 0 of BLOCK8 (KEY4).</description>
          <addressOffset>0x11C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY4_DATA0</name>
              <description>Stores the zeroth 32 bits of KEY4.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY4_DATA1</name>
          <description>Register 1 of BLOCK8 (KEY4).</description>
          <addressOffset>0x120</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY4_DATA1</name>
              <description>Stores the first 32 bits of KEY4.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY4_DATA2</name>
          <description>Register 2 of BLOCK8 (KEY4).</description>
          <addressOffset>0x124</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY4_DATA2</name>
              <description>Stores the second 32 bits of KEY4.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY4_DATA3</name>
          <description>Register 3 of BLOCK8 (KEY4).</description>
          <addressOffset>0x128</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY4_DATA3</name>
              <description>Stores the third 32 bits of KEY4.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY4_DATA4</name>
          <description>Register 4 of BLOCK8 (KEY4).</description>
          <addressOffset>0x12C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY4_DATA4</name>
              <description>Stores the fourth 32 bits of KEY4.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY4_DATA5</name>
          <description>Register 5 of BLOCK8 (KEY4).</description>
          <addressOffset>0x130</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY4_DATA5</name>
              <description>Stores the fifth 32 bits of KEY4.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY4_DATA6</name>
          <description>Register 6 of BLOCK8 (KEY4).</description>
          <addressOffset>0x134</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY4_DATA6</name>
              <description>Stores the sixth 32 bits of KEY4.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY4_DATA7</name>
          <description>Register 7 of BLOCK8 (KEY4).</description>
          <addressOffset>0x138</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY4_DATA7</name>
              <description>Stores the seventh 32 bits of KEY4.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY5_DATA0</name>
          <description>Register 0 of BLOCK9 (KEY5).</description>
          <addressOffset>0x13C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY5_DATA0</name>
              <description>Stores the zeroth 32 bits of KEY5.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY5_DATA1</name>
          <description>Register 1 of BLOCK9 (KEY5).</description>
          <addressOffset>0x140</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY5_DATA1</name>
              <description>Stores the first 32 bits of KEY5.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY5_DATA2</name>
          <description>Register 2 of BLOCK9 (KEY5).</description>
          <addressOffset>0x144</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY5_DATA2</name>
              <description>Stores the second 32 bits of KEY5.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY5_DATA3</name>
          <description>Register 3 of BLOCK9 (KEY5).</description>
          <addressOffset>0x148</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY5_DATA3</name>
              <description>Stores the third 32 bits of KEY5.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY5_DATA4</name>
          <description>Register 4 of BLOCK9 (KEY5).</description>
          <addressOffset>0x14C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY5_DATA4</name>
              <description>Stores the fourth 32 bits of KEY5.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY5_DATA5</name>
          <description>Register 5 of BLOCK9 (KEY5).</description>
          <addressOffset>0x150</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY5_DATA5</name>
              <description>Stores the fifth 32 bits of KEY5.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY5_DATA6</name>
          <description>Register 6 of BLOCK9 (KEY5).</description>
          <addressOffset>0x154</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY5_DATA6</name>
              <description>Stores the sixth 32 bits of KEY5.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_KEY5_DATA7</name>
          <description>Register 7 of BLOCK9 (KEY5).</description>
          <addressOffset>0x158</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY5_DATA7</name>
              <description>Stores the seventh 32 bits of KEY5.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART2_DATA0</name>
          <description>Register 0 of BLOCK10 (system).</description>
          <addressOffset>0x15C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART2_0</name>
              <description>Stores the 0th 32 bits of the 2nd part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART2_DATA1</name>
          <description>Register 1 of BLOCK9 (KEY5).</description>
          <addressOffset>0x160</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART2_1</name>
              <description>Stores the 1st 32 bits of the 2nd part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART2_DATA2</name>
          <description>Register 2 of BLOCK10 (system).</description>
          <addressOffset>0x164</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART2_2</name>
              <description>Stores the 2nd 32 bits of the 2nd part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART2_DATA3</name>
          <description>Register 3 of BLOCK10 (system).</description>
          <addressOffset>0x168</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART2_3</name>
              <description>Stores the 3rd 32 bits of the 2nd part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART2_DATA4</name>
          <description>Register 4 of BLOCK10 (system).</description>
          <addressOffset>0x16C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART2_4</name>
              <description>Stores the 4th 32 bits of the 2nd part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART2_DATA5</name>
          <description>Register 5 of BLOCK10 (system).</description>
          <addressOffset>0x170</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART2_5</name>
              <description>Stores the 5th 32 bits of the 2nd part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART2_DATA6</name>
          <description>Register 6 of BLOCK10 (system).</description>
          <addressOffset>0x174</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART2_6</name>
              <description>Stores the 6th 32 bits of the 2nd part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_SYS_PART2_DATA7</name>
          <description>Register 7 of BLOCK10 (system).</description>
          <addressOffset>0x178</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYS_DATA_PART2_7</name>
              <description>Stores the 7th 32 bits of the 2nd part of system data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_ERR0</name>
          <description>Programming error record register 0 of BLOCK0.</description>
          <addressOffset>0x17C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RD_DIS_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_RTC_RAM_BOOT_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_ICACHE_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_DCACHE_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_DOWNLOAD_ICACHE_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_DOWNLOAD_DCACHE_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_FORCE_DOWNLOAD_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_USB_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_CAN_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_APP_CPU_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SOFT_DIS_JTAG_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_PAD_JTAG_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_DOWNLOAD_MANUAL_ENCRYPT_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USB_DREFH_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USB_DREFL_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USB_EXCHG_PINS_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EXT_PHY_ENABLE_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BTLC_GPIO_ENABLE_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_MODECURLIM_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_DREFH_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_ERR1</name>
          <description>Programming error record register 1 of BLOCK0.</description>
          <addressOffset>0x180</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>VDD_SPI_DREFM_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_DREFL_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_XPD_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_TIEH_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_FORCE_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_EN_INIT_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_ENCURLIM_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_DCURLIM_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_INIT_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VDD_SPI_DCAP_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>WDT_DELAY_SEL_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SPI_BOOT_CRYPT_CNT_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_KEY_REVOKE0_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_KEY_REVOKE1_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_KEY_REVOKE2_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_0_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_1_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_ERR2</name>
          <description>Programming error record register 2 of BLOCK0.</description>
          <addressOffset>0x184</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY_PURPOSE_2_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_3_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_4_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY_PURPOSE_5_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RPT4_RESERVED0_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_EN_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_AGGRESSIVE_REVOKE_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_USB_JTAG_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_USB_DEVICE_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>STRAP_JTAG_SEL_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USB_PHY_SEL_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>POWER_GLITCH_DSENSE_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_TPUW_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_ERR3</name>
          <description>Programming error record register 3 of BLOCK0.</description>
          <addressOffset>0x188</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DIS_DOWNLOAD_MODE_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_LEGACY_SPI_BOOT_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>UART_PRINT_CHANNEL_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_ECC_MODE_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIS_USB_DOWNLOAD_MODE_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ENABLE_SECURITY_DOWNLOAD_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>UART_PRINT_CONTROL_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PIN_POWER_SELECTION_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_TYPE_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_PAGE_SIZE_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_ECC_EN_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FORCE_SEND_RESUME_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_VERSION_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>POWERGLITCH_EN_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RPT4_RESERVED1_ERR</name>
              <description>Reserved.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_REPEAT_ERR4</name>
          <description>Programming error record register 4 of BLOCK0.</description>
          <addressOffset>0x190</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RPT4_RESERVED2_ERR</name>
              <description>If any bits in this filed are 1, then it indicates a programming error.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_RS_ERR0</name>
          <description>Programming error record register 0 of BLOCK1-10.</description>
          <addressOffset>0x1C0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MAC_SPI_8M_ERR_NUM</name>
              <description>The value of this signal means the number of error bytes.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAC_SPI_8M_FAIL</name>
              <description>0: Means no failure and that the data of MAC_SPI_8M is reliable 1: Means that programming user data failed and the number of error bytes is over 6.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SYS_PART1_NUM</name>
              <description>The value of this signal means the number of error bytes.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SYS_PART1_FAIL</name>
              <description>0: Means no failure and that the data of system part1 is reliable 1: Means that programming user data failed and the number of error bytes is over 6.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USR_DATA_ERR_NUM</name>
              <description>The value of this signal means the number of error bytes.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USR_DATA_FAIL</name>
              <description>0: Means no failure and that the user data is reliable 1: Means that programming user data failed and the number of error bytes is over 6.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY0_ERR_NUM</name>
              <description>The value of this signal means the number of error bytes.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY0_FAIL</name>
              <description>0: Means no failure and that the data of key0 is reliable 1: Means that programming key0 failed and the number of error bytes is over 6.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY1_ERR_NUM</name>
              <description>The value of this signal means the number of error bytes.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY1_FAIL</name>
              <description>0: Means no failure and that the data of key1 is reliable 1: Means that programming key1 failed and the number of error bytes is over 6.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY2_ERR_NUM</name>
              <description>The value of this signal means the number of error bytes.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY2_FAIL</name>
              <description>0: Means no failure and that the data of key2 is reliable 1: Means that programming key2 failed and the number of error bytes is over 6.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY3_ERR_NUM</name>
              <description>The value of this signal means the number of error bytes.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY3_FAIL</name>
              <description>0: Means no failure and that the data of key3 is reliable 1: Means that programming key3 failed and the number of error bytes is over 6.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY4_ERR_NUM</name>
              <description>The value of this signal means the number of error bytes.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY4_FAIL</name>
              <description>0: Means no failure and that the data of key4 is reliable 1: Means that programming key4 failed and the number of error bytes is over 6.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_RS_ERR1</name>
          <description>Programming error record register 1 of BLOCK1-10.</description>
          <addressOffset>0x1C4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY5_ERR_NUM</name>
              <description>The value of this signal means the number of error bytes.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>KEY5_FAIL</name>
              <description>0: Means no failure and that the data of KEY5 is reliable 1: Means that programming user data failed and the number of error bytes is over 6.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SYS_PART2_ERR_NUM</name>
              <description>The value of this signal means the number of error bytes.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SYS_PART2_FAIL</name>
              <description>0: Means no failure and that the data of system part2 is reliable 1: Means that programming user data failed and the number of error bytes is over 6.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLK</name>
          <description>eFuse clcok configuration register.</description>
          <addressOffset>0x1C8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000002</resetValue>
          <fields>
            <field>
              <name>EFUSE_MEM_FORCE_PD</name>
              <description>Set this bit to force eFuse SRAM into power-saving mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_CLK_FORCE_ON</name>
              <description>Set this bit and force to activate clock signal of eFuse SRAM.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EFUSE_MEM_FORCE_PU</name>
              <description>Set this bit to force eFuse SRAM into working mode.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EN</name>
              <description>Set this bit and force to enable clock signal of eFuse memory.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONF</name>
          <description>eFuse operation mode configuraiton register</description>
          <addressOffset>0x1CC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OP_CODE</name>
              <description>0x5A5A: Operate programming command 0x5AA5: Operate read command.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS</name>
          <description>eFuse status register.</description>
          <addressOffset>0x1D0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>STATE</name>
              <description>Indicates the state of the eFuse state machine.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OTP_LOAD_SW</name>
              <description>The value of OTP_LOAD_SW.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OTP_VDDQ_C_SYNC2</name>
              <description>The value of OTP_VDDQ_C_SYNC2.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OTP_STROBE_SW</name>
              <description>The value of OTP_STROBE_SW.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OTP_CSB_SW</name>
              <description>The value of OTP_CSB_SW.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OTP_PGENB_SW</name>
              <description>The value of OTP_PGENB_SW.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OTP_VDDQ_IS_SW</name>
              <description>The value of OTP_VDDQ_IS_SW.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>REPEAT_ERR_CNT</name>
              <description>Indicates the number of error bits during programming BLOCK0.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD</name>
          <description>eFuse command register.</description>
          <addressOffset>0x1D4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>READ_CMD</name>
              <description>Set this bit to send read command.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PGM_CMD</name>
              <description>Set this bit to send programming command.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BLK_NUM</name>
              <description>The serial number of the block to be programmed. Value 0-10 corresponds to block number 0-10, respectively.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW</name>
          <description>eFuse raw interrupt register.</description>
          <addressOffset>0x1D8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>READ_DONE_INT_RAW</name>
              <description>The raw bit signal for read_done interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PGM_DONE_INT_RAW</name>
              <description>The raw bit signal for pgm_done interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST</name>
          <description>eFuse interrupt status register.</description>
          <addressOffset>0x1DC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>READ_DONE_INT_ST</name>
              <description>The status signal for read_done interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PGM_DONE_INT_ST</name>
              <description>The status signal for pgm_done interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>eFuse interrupt enable register.</description>
          <addressOffset>0x1E0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>READ_DONE_INT_ENA</name>
              <description>The enable signal for read_done interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PGM_DONE_INT_ENA</name>
              <description>The enable signal for pgm_done interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>eFuse interrupt clear register.</description>
          <addressOffset>0x1E4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>READ_DONE_INT_CLR</name>
              <description>The clear signal for read_done interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>PGM_DONE_INT_CLR</name>
              <description>The clear signal for pgm_done interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DAC_CONF</name>
          <description>Controls the eFuse programming voltage.</description>
          <addressOffset>0x1E8</addressOffset>
          <size>0x20</size>
          <resetValue>0x0001FE1C</resetValue>
          <fields>
            <field>
              <name>DAC_CLK_DIV</name>
              <description>Controls the division factor of the rising clock of the programming voltage.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_CLK_PAD_SEL</name>
              <description>Don't care.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_NUM</name>
              <description>Controls the rising period of the programming voltage.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OE_CLR</name>
              <description>Reduces the power supply of the programming voltage.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_TIM_CONF</name>
          <description>Configures read timing parameters.</description>
          <addressOffset>0x1EC</addressOffset>
          <size>0x20</size>
          <resetValue>0x12000000</resetValue>
          <fields>
            <field>
              <name>READ_INIT_NUM</name>
              <description>Configures the initial read time of eFuse.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WR_TIM_CONF1</name>
          <description>Configurarion register 1 of eFuse programming timing parameters.</description>
          <addressOffset>0x1F4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00288000</resetValue>
          <fields>
            <field>
              <name>PWR_ON_NUM</name>
              <description>Configures the power up time for VDDQ.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WR_TIM_CONF2</name>
          <description>Configurarion register 2 of eFuse programming timing parameters.</description>
          <addressOffset>0x1F8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000190</resetValue>
          <fields>
            <field>
              <name>PWR_OFF_NUM</name>
              <description>Configures the power outage time for VDDQ.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>eFuse version register.</description>
          <addressOffset>0x1FC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02101290</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>Stores eFuse version.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>EXTMEM</name>
      <description>External Memory</description>
      <groupName>EXTMEM</groupName>
      <baseAddress>0x600C4000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x17C</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>DCACHE_CTRL</name>
          <description>******* Description ***********</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DCACHE_ENABLE</name>
              <description>The bit is used to activate the data cache. 0: disable, 1: enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_SIZE_MODE</name>
              <description>The bit is used to configure cache memory size.0: 32KB, 1: 64KB</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_BLOCKSIZE_MODE</name>
              <description>The bit is used to configure cache block size.0: 16 bytes, 1: 32 bytes,2: 64 bytes</description>
              <bitOffset>3</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_CTRL1</name>
          <description>******* Description ***********</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>DCACHE_SHUT_CORE0_BUS</name>
              <description>The bit is used to disable core0 dbus, 0: enable, 1: disable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_SHUT_CORE1_BUS</name>
              <description>The bit is used to disable core1 dbus, 0: enable, 1: disable</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_TAG_POWER_CTRL</name>
          <description>******* Description ***********</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000005</resetValue>
          <fields>
            <field>
              <name>DCACHE_TAG_MEM_FORCE_ON</name>
              <description>The bit is used to close clock gating of dcache tag memory. 1: close gating, 0: open clock gating.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_TAG_MEM_FORCE_PD</name>
              <description>The bit is used to power dcache tag memory down, 0: follow  rtc_lslp_pd, 1: power down</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_TAG_MEM_FORCE_PU</name>
              <description>The bit is used to power dcache tag memory up, 0: follow  rtc_lslp_pd, 1: power up</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_PRELOCK_CTRL</name>
          <description>******* Description ***********</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DCACHE_PRELOCK_SCT0_EN</name>
              <description>The bit is used to enable the first section of prelock function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_PRELOCK_SCT1_EN</name>
              <description>The bit is used to enable the second section of prelock function.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_PRELOCK_SCT0_ADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DCACHE_PRELOCK_SCT0_ADDR</name>
              <description>The bits are used to configure the first start virtual address of data prelock, which is combined with DCACHE_PRELOCK_SCT0_SIZE_REG</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_PRELOCK_SCT1_ADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DCACHE_PRELOCK_SCT1_ADDR</name>
              <description>The bits are used to configure the second start virtual address of data prelock, which is combined with DCACHE_PRELOCK_SCT1_SIZE_REG</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_PRELOCK_SCT_SIZE</name>
          <description>******* Description ***********</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DCACHE_PRELOCK_SCT1_SIZE</name>
              <description>The bits are used to configure the second length of data locking, which is combined with DCACHE_PRELOCK_SCT1_ADDR_REG</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_PRELOCK_SCT0_SIZE</name>
              <description>The bits are used to configure the first length of data locking, which is combined with DCACHE_PRELOCK_SCT0_ADDR_REG</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_LOCK_CTRL</name>
          <description>******* Description ***********</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000004</resetValue>
          <fields>
            <field>
              <name>DCACHE_LOCK_ENA</name>
              <description>The bit is used to enable lock operation. It will be cleared by hardware after lock operation done.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_UNLOCK_ENA</name>
              <description>The bit is used to enable unlock operation. It will be cleared by hardware after unlock operation done.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_LOCK_DONE</name>
              <description>The bit is used to indicate unlock/lock operation is finished.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_LOCK_ADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DCACHE_LOCK_ADDR</name>
              <description>The bits are used to configure the start virtual address for lock operations. It should be combined with DCACHE_LOCK_SIZE_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_LOCK_SIZE</name>
          <description>******* Description ***********</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DCACHE_LOCK_SIZE</name>
              <description>The bits are used to configure the length for lock operations. The bits are the counts of cache block. It should be combined with DCACHE_LOCK_ADDR_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_SYNC_CTRL</name>
          <description>******* Description ***********</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>DCACHE_INVALIDATE_ENA</name>
              <description>The bit is used to enable invalidate operation. It will be cleared by hardware after invalidate operation done.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_WRITEBACK_ENA</name>
              <description>The bit is used to enable writeback operation. It will be cleared by hardware after writeback operation done.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_CLEAN_ENA</name>
              <description>The bit is used to enable clean operation. It will be cleared by hardware after clean operation done.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_SYNC_DONE</name>
              <description>The bit is used to indicate clean/writeback/invalidate operation is finished.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_SYNC_ADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DCACHE_SYNC_ADDR</name>
              <description>The bits are used to configure the start virtual address for clean operations. It should be combined with DCACHE_SYNC_SIZE_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_SYNC_SIZE</name>
          <description>******* Description ***********</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DCACHE_SYNC_SIZE</name>
              <description>The bits are used to configure the length for sync operations. The bits are the counts of cache block. It should be combined with DCACHE_SYNC_ADDR_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>23</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_OCCUPY_CTRL</name>
          <description>******* Description ***********</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000002</resetValue>
          <fields>
            <field>
              <name>DCACHE_OCCUPY_ENA</name>
              <description>The bit is used to enable occupy operation. It will be cleared by hardware after issuing Auot-Invalidate Operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_OCCUPY_DONE</name>
              <description>The bit is used to indicate occupy operation is finished.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_OCCUPY_ADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DCACHE_OCCUPY_ADDR</name>
              <description>The bits are used to configure the start virtual address for occupy operation. It should be combined with DCACHE_OCCUPY_SIZE_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_OCCUPY_SIZE</name>
          <description>******* Description ***********</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DCACHE_OCCUPY_SIZE</name>
              <description>The bits are used to configure the length for occupy operation. The bits are the counts of cache block. It should be combined with DCACHE_OCCUPY_ADDR_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_PRELOAD_CTRL</name>
          <description>******* Description ***********</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000002</resetValue>
          <fields>
            <field>
              <name>DCACHE_PRELOAD_ENA</name>
              <description>The bit is used to enable preload operation. It will be cleared by hardware after preload operation done.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_PRELOAD_DONE</name>
              <description>The bit is used to indicate preload operation is finished.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DCACHE_PRELOAD_ORDER</name>
              <description>The bit is used to configure the direction of preload operation. 1: descending, 0: ascending.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_PRELOAD_ADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DCACHE_PRELOAD_ADDR</name>
              <description>The bits are used to configure the start virtual address for preload operation. It should be combined with DCACHE_PRELOAD_SIZE_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_PRELOAD_SIZE</name>
          <description>******* Description ***********</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DCACHE_PRELOAD_SIZE</name>
              <description>The bits are used to configure the length for preload operation. The bits are the counts of cache block. It should be combined with DCACHE_PRELOAD_ADDR_REG..</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_AUTOLOAD_CTRL</name>
          <description>******* Description ***********</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>DCACHE_AUTOLOAD_SCT0_ENA</name>
              <description>The bits are used to enable the first section for autoload operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_AUTOLOAD_SCT1_ENA</name>
              <description>The bits are used to enable the second section for autoload operation.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_AUTOLOAD_ENA</name>
              <description>The bit is used to enable and disable autoload operation. It is combined with dcache_autoload_done. 1: enable, 0: disable.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_AUTOLOAD_DONE</name>
              <description>The bit is used to indicate autoload operation is finished.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DCACHE_AUTOLOAD_ORDER</name>
              <description>The bits are used to configure the direction of autoload. 1: descending, 0: ascending.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_AUTOLOAD_RQST</name>
              <description>The bits are used to configure trigger conditions for autoload. 0/3: cache miss, 1: cache hit, 2: both cache miss and hit.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_AUTOLOAD_SIZE</name>
              <description>The bits are used to configure the numbers of the cache block for the issuing autoload operation.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_AUTOLOAD_BUFFER_CLEAR</name>
              <description>The bit is used to clear autoload buffer in dcache.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_AUTOLOAD_SCT0_ADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DCACHE_AUTOLOAD_SCT0_ADDR</name>
              <description>The bits are used to configure the start virtual address of the first section for autoload operation. It should be combined with dcache_autoload_sct0_ena.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_AUTOLOAD_SCT0_SIZE</name>
          <description>******* Description ***********</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DCACHE_AUTOLOAD_SCT0_SIZE</name>
              <description>The bits are used to configure the length of the first section for autoload operation. It should be combined with dcache_autoload_sct0_ena.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_AUTOLOAD_SCT1_ADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DCACHE_AUTOLOAD_SCT1_ADDR</name>
              <description>The bits are used to configure the start virtual address of the second section for autoload operation. It should be combined with dcache_autoload_sct1_ena.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_AUTOLOAD_SCT1_SIZE</name>
          <description>******* Description ***********</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DCACHE_AUTOLOAD_SCT1_SIZE</name>
              <description>The bits are used to configure the length of the second section for autoload operation. It should be combined with dcache_autoload_sct1_ena.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_CTRL</name>
          <description>******* Description ***********</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_ENABLE</name>
              <description>The bit is used to activate the data cache. 0: disable, 1: enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_WAY_MODE</name>
              <description>The bit is used to configure cache way mode.0: 4-way, 1: 8-way</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_SIZE_MODE</name>
              <description>The bit is used to configure cache memory size.0: 16KB, 1: 32KB</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_BLOCKSIZE_MODE</name>
              <description>The bit is used to configure cache block size.0: 16 bytes, 1: 32 bytes</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_CTRL1</name>
          <description>******* Description ***********</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>ICACHE_SHUT_CORE0_BUS</name>
              <description>The bit is used to disable core0 ibus, 0: enable, 1: disable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_SHUT_CORE1_BUS</name>
              <description>The bit is used to disable core1 ibus, 0: enable, 1: disable</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_TAG_POWER_CTRL</name>
          <description>******* Description ***********</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000005</resetValue>
          <fields>
            <field>
              <name>ICACHE_TAG_MEM_FORCE_ON</name>
              <description>The bit is used to close clock gating of  icache tag memory. 1: close gating, 0: open clock gating.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_TAG_MEM_FORCE_PD</name>
              <description>The bit is used to power  icache tag memory down, 0: follow rtc_lslp, 1: power down</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_TAG_MEM_FORCE_PU</name>
              <description>The bit is used to power  icache tag memory up, 0: follow rtc_lslp, 1: power up</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_PRELOCK_CTRL</name>
          <description>******* Description ***********</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_PRELOCK_SCT0_EN</name>
              <description>The bit is used to enable the first section of prelock function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_PRELOCK_SCT1_EN</name>
              <description>The bit is used to enable the second section of prelock function.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_PRELOCK_SCT0_ADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_PRELOCK_SCT0_ADDR</name>
              <description>The bits are used to configure the first start virtual address of data prelock, which is combined with ICACHE_PRELOCK_SCT0_SIZE_REG</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_PRELOCK_SCT1_ADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_PRELOCK_SCT1_ADDR</name>
              <description>The bits are used to configure the second start virtual address of data prelock, which is combined with ICACHE_PRELOCK_SCT1_SIZE_REG</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_PRELOCK_SCT_SIZE</name>
          <description>******* Description ***********</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_PRELOCK_SCT1_SIZE</name>
              <description>The bits are used to configure the second length of data locking, which is combined with ICACHE_PRELOCK_SCT1_ADDR_REG</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_PRELOCK_SCT0_SIZE</name>
              <description>The bits are used to configure the first length of data locking, which is combined with ICACHE_PRELOCK_SCT0_ADDR_REG</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_LOCK_CTRL</name>
          <description>******* Description ***********</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000004</resetValue>
          <fields>
            <field>
              <name>ICACHE_LOCK_ENA</name>
              <description>The bit is used to enable lock operation. It will be cleared by hardware after lock operation done.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_UNLOCK_ENA</name>
              <description>The bit is used to enable unlock operation. It will be cleared by hardware after unlock operation done.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_LOCK_DONE</name>
              <description>The bit is used to indicate unlock/lock operation is finished.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_LOCK_ADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_LOCK_ADDR</name>
              <description>The bits are used to configure the start virtual address for lock operations. It should be combined with ICACHE_LOCK_SIZE_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_LOCK_SIZE</name>
          <description>******* Description ***********</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_LOCK_SIZE</name>
              <description>The bits are used to configure the length for lock operations. The bits are the counts of cache block. It should be combined with ICACHE_LOCK_ADDR_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_SYNC_CTRL</name>
          <description>******* Description ***********</description>
          <addressOffset>0x88</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>ICACHE_INVALIDATE_ENA</name>
              <description>The bit is used to enable invalidate operation. It will be cleared by hardware after invalidate operation done.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_SYNC_DONE</name>
              <description>The bit is used to indicate invalidate operation is finished.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_SYNC_ADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x8C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_SYNC_ADDR</name>
              <description>The bits are used to configure the start virtual address for clean operations. It should be combined with ICACHE_SYNC_SIZE_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_SYNC_SIZE</name>
          <description>******* Description ***********</description>
          <addressOffset>0x90</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_SYNC_SIZE</name>
              <description>The bits are used to configure the length for sync operations. The bits are the counts of cache block. It should be combined with ICACHE_SYNC_ADDR_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>23</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_PRELOAD_CTRL</name>
          <description>******* Description ***********</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000002</resetValue>
          <fields>
            <field>
              <name>ICACHE_PRELOAD_ENA</name>
              <description>The bit is used to enable preload operation. It will be cleared by hardware after preload operation done.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_PRELOAD_DONE</name>
              <description>The bit is used to indicate preload operation is finished.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ICACHE_PRELOAD_ORDER</name>
              <description>The bit is used to configure the direction of preload operation. 1: descending, 0: ascending.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_PRELOAD_ADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_PRELOAD_ADDR</name>
              <description>The bits are used to configure the start virtual address for preload operation. It should be combined with ICACHE_PRELOAD_SIZE_REG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_PRELOAD_SIZE</name>
          <description>******* Description ***********</description>
          <addressOffset>0x9C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_PRELOAD_SIZE</name>
              <description>The bits are used to configure the length for preload operation. The bits are the counts of cache block. It should be combined with ICACHE_PRELOAD_ADDR_REG..</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_AUTOLOAD_CTRL</name>
          <description>******* Description ***********</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>ICACHE_AUTOLOAD_SCT0_ENA</name>
              <description>The bits are used to enable the first section for autoload operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_AUTOLOAD_SCT1_ENA</name>
              <description>The bits are used to enable the second section for autoload operation.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_AUTOLOAD_ENA</name>
              <description>The bit is used to enable and disable autoload operation. It is combined with icache_autoload_done. 1: enable, 0: disable.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_AUTOLOAD_DONE</name>
              <description>The bit is used to indicate autoload operation is finished.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ICACHE_AUTOLOAD_ORDER</name>
              <description>The bits are used to configure the direction of autoload. 1: descending, 0: ascending.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_AUTOLOAD_RQST</name>
              <description>The bits are used to configure trigger conditions for autoload. 0/3: cache miss, 1: cache hit, 2: both cache miss and hit.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_AUTOLOAD_SIZE</name>
              <description>The bits are used to configure the numbers of the cache block for the issuing autoload operation.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_AUTOLOAD_BUFFER_CLEAR</name>
              <description>The bit is used to clear autoload buffer in icache.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_AUTOLOAD_SCT0_ADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0xA4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_AUTOLOAD_SCT0_ADDR</name>
              <description>The bits are used to configure the start virtual address of the first section for autoload operation. It should be combined with icache_autoload_sct0_ena.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_AUTOLOAD_SCT0_SIZE</name>
          <description>******* Description ***********</description>
          <addressOffset>0xA8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_AUTOLOAD_SCT0_SIZE</name>
              <description>The bits are used to configure the length of the first section for autoload operation. It should be combined with icache_autoload_sct0_ena.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_AUTOLOAD_SCT1_ADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0xAC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_AUTOLOAD_SCT1_ADDR</name>
              <description>The bits are used to configure the start virtual address of the second section for autoload operation. It should be combined with icache_autoload_sct1_ena.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_AUTOLOAD_SCT1_SIZE</name>
          <description>******* Description ***********</description>
          <addressOffset>0xB0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_AUTOLOAD_SCT1_SIZE</name>
              <description>The bits are used to configure the length of the second section for autoload operation. It should be combined with icache_autoload_sct1_ena.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>27</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IBUS_TO_FLASH_START_VADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0xB4</addressOffset>
          <size>0x20</size>
          <resetValue>0x44000000</resetValue>
          <fields>
            <field>
              <name>IBUS_TO_FLASH_START_VADDR</name>
              <description>The bits are used to configure the start virtual address of ibus to access flash. The register is used to give constraints to ibus access counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IBUS_TO_FLASH_END_VADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0xB8</addressOffset>
          <size>0x20</size>
          <resetValue>0x47FFFFFF</resetValue>
          <fields>
            <field>
              <name>IBUS_TO_FLASH_END_VADDR</name>
              <description>The bits are used to configure the end virtual address of ibus to access flash. The register is used to give constraints to ibus access counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBUS_TO_FLASH_START_VADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0xBC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DBUS_TO_FLASH_START_VADDR</name>
              <description>The bits are used to configure the start virtual address of dbus to access flash. The register is used to give constraints to dbus access counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBUS_TO_FLASH_END_VADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0xC0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DBUS_TO_FLASH_END_VADDR</name>
              <description>The bits are used to configure the end virtual address of dbus to access flash. The register is used to give constraints to dbus access counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_ACS_CNT_CLR</name>
          <description>******* Description ***********</description>
          <addressOffset>0xC4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DCACHE_ACS_CNT_CLR</name>
              <description>The bit is used to clear dcache counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ICACHE_ACS_CNT_CLR</name>
              <description>The bit is used to clear icache counter.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IBUS_ACS_MISS_CNT</name>
          <description>******* Description ***********</description>
          <addressOffset>0xC8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IBUS_ACS_MISS_CNT</name>
              <description>The bits are used to count the number of the cache miss caused by ibus access flash/spiram.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IBUS_ACS_CNT</name>
          <description>******* Description ***********</description>
          <addressOffset>0xCC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IBUS_ACS_CNT</name>
              <description>The bits are used to count the number of ibus access flash/spiram through icache.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBUS_ACS_FLASH_MISS_CNT</name>
          <description>******* Description ***********</description>
          <addressOffset>0xD0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DBUS_ACS_FLASH_MISS_CNT</name>
              <description>The bits are used to count the number of the cache miss caused by dbus access flash.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBUS_ACS_SPIRAM_MISS_CNT</name>
          <description>******* Description ***********</description>
          <addressOffset>0xD4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DBUS_ACS_SPIRAM_MISS_CNT</name>
              <description>The bits are used to count the number of the cache miss caused by dbus access spiram.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBUS_ACS_CNT</name>
          <description>******* Description ***********</description>
          <addressOffset>0xD8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DBUS_ACS_CNT</name>
              <description>The bits are used to count the number of dbus access flash/spiram through dcache.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_ILG_INT_ENA</name>
          <description>******* Description ***********</description>
          <addressOffset>0xDC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_SYNC_OP_FAULT_INT_ENA</name>
              <description>The bit is used to enable interrupt by sync configurations fault.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_PRELOAD_OP_FAULT_INT_ENA</name>
              <description>The bit is used to enable interrupt by preload configurations fault.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_SYNC_OP_FAULT_INT_ENA</name>
              <description>The bit is used to enable interrupt by sync configurations fault.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_PRELOAD_OP_FAULT_INT_ENA</name>
              <description>The bit is used to enable interrupt by preload configurations fault.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_WRITE_FLASH_INT_ENA</name>
              <description>The bit is used to enable interrupt by dcache trying to write flash.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MMU_ENTRY_FAULT_INT_ENA</name>
              <description>The bit is used to enable interrupt by mmu entry fault.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_OCCUPY_EXC_INT_ENA</name>
              <description>The bit is used to enable interrupt by dcache trying to replace a line whose blocks all have been occupied by occupy-mode.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IBUS_CNT_OVF_INT_ENA</name>
              <description>The bit is used to enable interrupt by ibus counter overflow.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBUS_CNT_OVF_INT_ENA</name>
              <description>The bit is used to enable interrupt by dbus counter overflow.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_ILG_INT_CLR</name>
          <description>******* Description ***********</description>
          <addressOffset>0xE0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_SYNC_OP_FAULT_INT_CLR</name>
              <description>The bit is used to clear interrupt by sync configurations fault.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ICACHE_PRELOAD_OP_FAULT_INT_CLR</name>
              <description>The bit is used to clear interrupt by preload configurations fault.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DCACHE_SYNC_OP_FAULT_INT_CLR</name>
              <description>The bit is used to clear interrupt by sync configurations fault.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DCACHE_PRELOAD_OP_FAULT_INT_CLR</name>
              <description>The bit is used to clear interrupt by preload configurations fault.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DCACHE_WRITE_FLASH_INT_CLR</name>
              <description>The bit is used to clear interrupt by dcache trying to write flash.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MMU_ENTRY_FAULT_INT_CLR</name>
              <description>The bit is used to clear interrupt by mmu entry fault.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DCACHE_OCCUPY_EXC_INT_CLR</name>
              <description>The bit is used to clear interrupt by dcache trying to replace a line whose blocks all have been occupied by occupy-mode.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IBUS_CNT_OVF_INT_CLR</name>
              <description>The bit is used to clear interrupt by ibus counter overflow.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DBUS_CNT_OVF_INT_CLR</name>
              <description>The bit is used to clear interrupt by dbus counter overflow.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_ILG_INT_ST</name>
          <description>******* Description ***********</description>
          <addressOffset>0xE4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_SYNC_OP_FAULT_ST</name>
              <description>The bit is used to indicate interrupt by sync configurations fault.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ICACHE_PRELOAD_OP_FAULT_ST</name>
              <description>The bit is used to indicate interrupt by preload configurations fault.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DCACHE_SYNC_OP_FAULT_ST</name>
              <description>The bit is used to indicate interrupt by sync configurations fault.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DCACHE_PRELOAD_OP_FAULT_ST</name>
              <description>The bit is used to indicate interrupt by preload configurations fault.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DCACHE_WRITE_FLASH_ST</name>
              <description>The bit is used to indicate interrupt by dcache trying to write flash.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MMU_ENTRY_FAULT_ST</name>
              <description>The bit is used to indicate interrupt by mmu entry fault.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DCACHE_OCCUPY_EXC_ST</name>
              <description>The bit is used to indicate interrupt by dcache trying to replace a line whose blocks all have been occupied by occupy-mode.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IBUS_ACS_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by ibus access flash/spiram counter overflow.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IBUS_ACS_MISS_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by ibus access flash/spiram miss counter overflow.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DBUS_ACS_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by dbus access flash/spiram counter overflow.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DBUS_ACS_FLASH_MISS_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by dbus access flash miss counter overflow.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DBUS_ACS_SPIRAM_MISS_CNT_OVF_ST</name>
              <description>The bit is used to indicate interrupt by dbus access spiram miss counter overflow.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE0_ACS_CACHE_INT_ENA</name>
          <description>******* Description ***********</description>
          <addressOffset>0xE8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE0_IBUS_ACS_MSK_IC_INT_ENA</name>
              <description>The bit is used to enable interrupt by cpu access icache while the corresponding ibus is disabled which include speculative access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE0_IBUS_WR_IC_INT_ENA</name>
              <description>The bit is used to enable interrupt by ibus trying to write icache</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE0_IBUS_REJECT_INT_ENA</name>
              <description>The bit is used to enable interrupt by authentication fail.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE0_DBUS_ACS_MSK_DC_INT_ENA</name>
              <description>The bit is used to enable interrupt by cpu access dcache while the corresponding dbus is disabled which include speculative access.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE0_DBUS_REJECT_INT_ENA</name>
              <description>The bit is used to enable interrupt by authentication fail.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE0_ACS_CACHE_INT_CLR</name>
          <description>******* Description ***********</description>
          <addressOffset>0xEC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE0_IBUS_ACS_MSK_IC_INT_CLR</name>
              <description>The bit is used to clear interrupt by cpu access icache while the corresponding ibus is disabled or icache is disabled which include speculative access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CORE0_IBUS_WR_IC_INT_CLR</name>
              <description>The bit is used to clear interrupt by ibus trying to write icache</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CORE0_IBUS_REJECT_INT_CLR</name>
              <description>The bit is used to clear interrupt by authentication fail.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CORE0_DBUS_ACS_MSK_DC_INT_CLR</name>
              <description>The bit is used to clear interrupt by cpu access dcache while the corresponding dbus is disabled or dcache is disabled which include speculative access.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CORE0_DBUS_REJECT_INT_CLR</name>
              <description>The bit is used to clear interrupt by authentication fail.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE0_ACS_CACHE_INT_ST</name>
          <description>******* Description ***********</description>
          <addressOffset>0xF0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE0_IBUS_ACS_MSK_ICACHE_ST</name>
              <description>The bit is used to indicate interrupt by cpu access  icache while the core0_ibus is disabled or icache is disabled which include speculative access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE0_IBUS_WR_ICACHE_ST</name>
              <description>The bit is used to indicate interrupt by ibus trying to write icache</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE0_IBUS_REJECT_ST</name>
              <description>The bit is used to indicate interrupt by authentication fail.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE0_DBUS_ACS_MSK_DCACHE_ST</name>
              <description>The bit is used to indicate interrupt by cpu access dcache while the core0_dbus is disabled or dcache is disabled which include speculative access.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE0_DBUS_REJECT_ST</name>
              <description>The bit is used to indicate interrupt by authentication fail.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE1_ACS_CACHE_INT_ENA</name>
          <description>******* Description ***********</description>
          <addressOffset>0xF4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE1_IBUS_ACS_MSK_IC_INT_ENA</name>
              <description>The bit is used to enable interrupt by cpu access icache while the corresponding ibus is disabled which include speculative access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE1_IBUS_WR_IC_INT_ENA</name>
              <description>The bit is used to enable interrupt by ibus trying to write icache</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE1_IBUS_REJECT_INT_ENA</name>
              <description>The bit is used to enable interrupt by authentication fail.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE1_DBUS_ACS_MSK_DC_INT_ENA</name>
              <description>The bit is used to enable interrupt by cpu access dcache while the corresponding dbus is disabled which include speculative access.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE1_DBUS_REJECT_INT_ENA</name>
              <description>The bit is used to enable interrupt by authentication fail.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE1_ACS_CACHE_INT_CLR</name>
          <description>******* Description ***********</description>
          <addressOffset>0xF8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE1_IBUS_ACS_MSK_IC_INT_CLR</name>
              <description>The bit is used to clear interrupt by cpu access icache while the corresponding ibus is disabled or icache is disabled which include speculative access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CORE1_IBUS_WR_IC_INT_CLR</name>
              <description>The bit is used to clear interrupt by ibus trying to write icache</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CORE1_IBUS_REJECT_INT_CLR</name>
              <description>The bit is used to clear interrupt by authentication fail.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CORE1_DBUS_ACS_MSK_DC_INT_CLR</name>
              <description>The bit is used to clear interrupt by cpu access dcache while the corresponding dbus is disabled or dcache is disabled which include speculative access.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CORE1_DBUS_REJECT_INT_CLR</name>
              <description>The bit is used to clear interrupt by authentication fail.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE1_ACS_CACHE_INT_ST</name>
          <description>******* Description ***********</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE1_IBUS_ACS_MSK_ICACHE_ST</name>
              <description>The bit is used to indicate interrupt by cpu access  icache while the core1_ibus is disabled or  icache is disabled which include speculative access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE1_IBUS_WR_ICACHE_ST</name>
              <description>The bit is used to indicate interrupt by ibus trying to write icache</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE1_IBUS_REJECT_ST</name>
              <description>The bit is used to indicate interrupt by authentication fail.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE1_DBUS_ACS_MSK_DCACHE_ST</name>
              <description>The bit is used to indicate interrupt by cpu access dcache while the core1_dbus is disabled or dcache is disabled which include speculative access.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE1_DBUS_REJECT_ST</name>
              <description>The bit is used to indicate interrupt by authentication fail.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE0_DBUS_REJECT_ST</name>
          <description>******* Description ***********</description>
          <addressOffset>0x100</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE0_DBUS_TAG_ATTR</name>
              <description>The bits are used to indicate the attribute of data from external memory when authentication fail. 0: invalidate, 1: execute-able, 2: read-able, 4: write-able.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE0_DBUS_ATTR</name>
              <description>The bits are used to indicate the attribute of CPU access dbus when authentication fail. 0: invalidate, 1: execute-able, 2: read-able, 4: write-able.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE0_DBUS_WORLD</name>
              <description>The bit is used to indicate the world of CPU access dbus when authentication fail. 0: WORLD0, 1: WORLD1</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE0_DBUS_REJECT_VADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x104</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE0_DBUS_VADDR</name>
              <description>The bits are used to indicate the virtual address of CPU access dbus when authentication fail.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE0_IBUS_REJECT_ST</name>
          <description>******* Description ***********</description>
          <addressOffset>0x108</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE0_IBUS_TAG_ATTR</name>
              <description>The bits are used to indicate the attribute of data from external memory when authentication fail. 0: invalidate, 1: execute-able, 2: read-able, 4: write-able.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE0_IBUS_ATTR</name>
              <description>The bits are used to indicate the attribute of CPU access ibus when authentication fail. 0: invalidate, 1: execute-able, 2: read-able</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE0_IBUS_WORLD</name>
              <description>The bit is used to indicate the world of CPU access ibus when authentication fail. 0: WORLD0, 1: WORLD1</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE0_IBUS_REJECT_VADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x10C</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE0_IBUS_VADDR</name>
              <description>The bits are used to indicate the virtual address of CPU access  ibus when authentication fail.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE1_DBUS_REJECT_ST</name>
          <description>******* Description ***********</description>
          <addressOffset>0x110</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE1_DBUS_TAG_ATTR</name>
              <description>The bits are used to indicate the attribute of data from external memory when authentication fail. 0: invalidate, 1: execute-able, 2: read-able, 4: write-able.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE1_DBUS_ATTR</name>
              <description>The bits are used to indicate the attribute of CPU access dbus when authentication fail. 0: invalidate, 1: execute-able, 2: read-able, 4: write-able.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE1_DBUS_WORLD</name>
              <description>The bit is used to indicate the world of CPU access dbus when authentication fail. 0: WORLD0, 1: WORLD1</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE1_DBUS_REJECT_VADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x114</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE1_DBUS_VADDR</name>
              <description>The bits are used to indicate the virtual address of CPU access dbus when authentication fail.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE1_IBUS_REJECT_ST</name>
          <description>******* Description ***********</description>
          <addressOffset>0x118</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE1_IBUS_TAG_ATTR</name>
              <description>The bits are used to indicate the attribute of data from external memory when authentication fail. 0: invalidate, 1: execute-able, 2: read-able, 4: write-able.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE1_IBUS_ATTR</name>
              <description>The bits are used to indicate the attribute of CPU access ibus when authentication fail. 0: invalidate, 1: execute-able, 2: read-able</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE1_IBUS_WORLD</name>
              <description>The bit is used to indicate the world of CPU access ibus when authentication fail. 0: WORLD0, 1: WORLD1</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE1_IBUS_REJECT_VADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x11C</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE1_IBUS_VADDR</name>
              <description>The bits are used to indicate the virtual address of CPU access  ibus when authentication fail.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_MMU_FAULT_CONTENT</name>
          <description>******* Description ***********</description>
          <addressOffset>0x120</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CACHE_MMU_FAULT_CONTENT</name>
              <description>The bits are used to indicate the content of mmu entry which cause mmu fault..</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CACHE_MMU_FAULT_CODE</name>
              <description>The right-most 3 bits are used to indicate the operations which cause mmu fault occurrence. 0: default, 1: cpu miss, 2: preload miss, 3: writeback, 4: cpu miss evict recovery address, 5: load miss evict recovery address, 6: external dma tx, 7: external dma rx. The most significant bit is used to indicate this operation occurs in which one icache.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_MMU_FAULT_VADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x124</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CACHE_MMU_FAULT_VADDR</name>
              <description>The bits are used to indicate the virtual address which cause mmu fault..</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_WRAP_AROUND_CTRL</name>
          <description>******* Description ***********</description>
          <addressOffset>0x128</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CACHE_FLASH_WRAP_AROUND</name>
              <description>The bit is used to enable wrap around mode when read data from flash.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CACHE_SRAM_RD_WRAP_AROUND</name>
              <description>The bit is used to enable wrap around mode when read data from spiram.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_MMU_POWER_CTRL</name>
          <description>******* Description ***********</description>
          <addressOffset>0x12C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000005</resetValue>
          <fields>
            <field>
              <name>CACHE_MMU_MEM_FORCE_ON</name>
              <description>The bit is used to enable clock gating to save power when access mmu memory, 0: enable, 1: disable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CACHE_MMU_MEM_FORCE_PD</name>
              <description>The bit is used to power mmu memory down, 0: follow_rtc_lslp_pd, 1: power down</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CACHE_MMU_MEM_FORCE_PU</name>
              <description>The bit is used to power mmu memory down, 0: follow_rtc_lslp_pd, 1: power up</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_STATE</name>
          <description>******* Description ***********</description>
          <addressOffset>0x130</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_STATE</name>
              <description>The bit is used to indicate whether  icache main fsm is in idle state or not. 1: in idle state,  0: not in idle state</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DCACHE_STATE</name>
              <description>The bit is used to indicate whether dcache main fsm is in idle state or not. 1: in idle state,  0: not in idle state</description>
              <bitOffset>12</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_ENCRYPT_DECRYPT_RECORD_DISABLE</name>
          <description>******* Description ***********</description>
          <addressOffset>0x134</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RECORD_DISABLE_DB_ENCRYPT</name>
              <description>Reserved</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RECORD_DISABLE_G0CB_DECRYPT</name>
              <description>Reserved</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_ENCRYPT_DECRYPT_CLK_FORCE_ON</name>
          <description>******* Description ***********</description>
          <addressOffset>0x138</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000007</resetValue>
          <fields>
            <field>
              <name>CLK_FORCE_ON_MANUAL_CRYPT</name>
              <description>The bit is used to close clock gating of manual crypt clock. 1: close gating, 0: open clock gating.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_FORCE_ON_AUTO_CRYPT</name>
              <description>The bit is used to close clock gating of automatic crypt clock. 1: close gating, 0: open clock gating.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_FORCE_ON_CRYPT</name>
              <description>The bit is used to close clock gating of external memory encrypt and decrypt clock. 1: close gating, 0: open clock gating.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_BRIDGE_ARBITER_CTRL</name>
          <description>******* Description ***********</description>
          <addressOffset>0x13C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ALLOC_WB_HOLD_ARBITER</name>
              <description>Reserved</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_PRELOAD_INT_CTRL</name>
          <description>******* Description ***********</description>
          <addressOffset>0x140</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_PRELOAD_INT_ST</name>
              <description>The bit is used to indicate the interrupt by  icache pre-load done.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ICACHE_PRELOAD_INT_ENA</name>
              <description>The bit is used to enable the interrupt by  icache pre-load done.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_PRELOAD_INT_CLR</name>
              <description>The bit is used to clear the interrupt by  icache pre-load done.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DCACHE_PRELOAD_INT_ST</name>
              <description>The bit is used to indicate the interrupt by dcache pre-load done.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DCACHE_PRELOAD_INT_ENA</name>
              <description>The bit is used to enable the interrupt by dcache pre-load done.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_PRELOAD_INT_CLR</name>
              <description>The bit is used to clear the interrupt by dcache pre-load done.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_SYNC_INT_CTRL</name>
          <description>******* Description ***********</description>
          <addressOffset>0x144</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_SYNC_INT_ST</name>
              <description>The bit is used to indicate the interrupt by  icache sync done.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ICACHE_SYNC_INT_ENA</name>
              <description>The bit is used to enable the interrupt by  icache sync done.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_SYNC_INT_CLR</name>
              <description>The bit is used to clear the interrupt by  icache sync done.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DCACHE_SYNC_INT_ST</name>
              <description>The bit is used to indicate the interrupt by dcache sync done.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DCACHE_SYNC_INT_ENA</name>
              <description>The bit is used to enable the interrupt by dcache sync done.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_SYNC_INT_CLR</name>
              <description>The bit is used to clear the interrupt by dcache sync done.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_MMU_OWNER</name>
          <description>******* Description ***********</description>
          <addressOffset>0x148</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CACHE_MMU_OWNER</name>
              <description>The bits are used to specify the owner of MMU.bit0: icache, bit1: dcache, bit2: dma, bit3: reserved.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_CONF_MISC</name>
          <description>******* Description ***********</description>
          <addressOffset>0x14C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000007</resetValue>
          <fields>
            <field>
              <name>CACHE_IGNORE_PRELOAD_MMU_ENTRY_FAULT</name>
              <description>The bit is used to disable checking mmu entry fault by preload operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CACHE_IGNORE_SYNC_MMU_ENTRY_FAULT</name>
              <description>The bit is used to disable checking mmu entry fault by sync operation.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CACHE_TRACE_ENA</name>
              <description>The bit is used to enable cache trace function.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_FREEZE</name>
          <description>******* Description ***********</description>
          <addressOffset>0x150</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000004</resetValue>
          <fields>
            <field>
              <name>ENA</name>
              <description>The bit is used to enable dcache freeze mode</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE</name>
              <description>The bit is used to configure freeze mode, 0:  assert busy if CPU miss 1: assert hit if CPU miss</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DONE</name>
              <description>The bit is used to indicate dcache freeze success</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_FREEZE</name>
          <description>******* Description ***********</description>
          <addressOffset>0x154</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000004</resetValue>
          <fields>
            <field>
              <name>ENA</name>
              <description>The bit is used to enable icache freeze mode</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE</name>
              <description>The bit is used to configure freeze mode, 0:  assert busy if CPU miss 1: assert hit if CPU miss</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DONE</name>
              <description>The bit is used to indicate icache freeze success</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_ATOMIC_OPERATE_ENA</name>
          <description>******* Description ***********</description>
          <addressOffset>0x158</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>ICACHE_ATOMIC_OPERATE_ENA</name>
              <description>The bit is used to activate icache atomic operation protection. In this case, sync/lock operation can not interrupt miss-work. This feature does not work during invalidateAll operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_ATOMIC_OPERATE_ENA</name>
          <description>******* Description ***********</description>
          <addressOffset>0x15C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>DCACHE_ATOMIC_OPERATE_ENA</name>
              <description>The bit is used to activate dcache atomic operation protection. In this case, sync/lock/occupy operation can not interrupt miss-work. This feature does not work during invalidateAll operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_REQUEST</name>
          <description>******* Description ***********</description>
          <addressOffset>0x160</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BYPASS</name>
              <description>The bit is used to disable request recording which could cause performance issue</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLOCK_GATE</name>
          <description>******* Description ***********</description>
          <addressOffset>0x164</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>CLK_EN</name>
              <description>Reserved</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_TAG_OBJECT_CTRL</name>
          <description>******* Description ***********</description>
          <addressOffset>0x180</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ICACHE_TAG_OBJECT</name>
              <description>Set this bit to set icache tag memory as object. This bit should be onehot with the others fields inside this register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_TAG_OBJECT</name>
              <description>Set this bit to set dcache tag memory as object. This bit should be onehot with the others fields inside this register.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_TAG_WAY_OBJECT</name>
          <description>******* Description ***********</description>
          <addressOffset>0x184</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CACHE_TAG_WAY_OBJECT</name>
              <description>Set this bits to select which way of the tag-object will be accessed. 0: way0, 1: way1, 2: way2, 3: way3, .., 7: way7.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_VADDR</name>
          <description>******* Description ***********</description>
          <addressOffset>0x188</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CACHE_VADDR</name>
              <description>Those bits stores the virtual address which will decide where inside the specified tag memory object will be accessed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_TAG_CONTENT</name>
          <description>******* Description ***********</description>
          <addressOffset>0x18C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CACHE_TAG_CONTENT</name>
              <description>This is a constant place where we can write data to or read data from the tag memory on the specified cache.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>******* Description ***********</description>
          <addressOffset>0x3FC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02012310</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>version information.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>GPIO</name>
      <description>General Purpose Input/Output</description>
      <groupName>GPIO</groupName>
      <baseAddress>0x60004000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x634</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>GPIO</name>
        <value>16</value>
      </interrupt>
      <interrupt>
        <name>GPIO_NMI</name>
        <value>17</value>
      </interrupt>
      <registers>
        <register>
          <name>BT_SELECT</name>
          <description>GPIO bit select register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BT_SEL</name>
              <description>GPIO bit select register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT</name>
          <description>GPIO output register for GPIO0-31</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DATA_ORIG</name>
              <description>GPIO output register for GPIO0-31</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_W1TS</name>
          <description>GPIO output set register for GPIO0-31</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUT_W1TS</name>
              <description>GPIO output set register for GPIO0-31</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_W1TC</name>
          <description>GPIO output clear register for GPIO0-31</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUT_W1TC</name>
              <description>GPIO output clear register for GPIO0-31</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT1</name>
          <description>GPIO output register for GPIO32-53</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DATA_ORIG</name>
              <description>GPIO output register for GPIO32-53</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT1_W1TS</name>
          <description>GPIO output set register for GPIO32-53</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUT1_W1TS</name>
              <description>GPIO output set register for GPIO32-53</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT1_W1TC</name>
          <description>GPIO output clear register for GPIO32-53</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUT1_W1TC</name>
              <description>GPIO output clear register for GPIO32-53</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDIO_SELECT</name>
          <description>GPIO sdio select register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SDIO_SEL</name>
              <description>GPIO sdio select register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ENABLE</name>
          <description>GPIO output enable register for GPIO0-31</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DATA</name>
              <description>GPIO output enable register for GPIO0-31</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ENABLE_W1TS</name>
          <description>GPIO output enable set register for GPIO0-31</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ENABLE_W1TS</name>
              <description>GPIO output enable set register for GPIO0-31</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ENABLE_W1TC</name>
          <description>GPIO output enable clear register for GPIO0-31</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ENABLE_W1TC</name>
              <description>GPIO output enable clear register for GPIO0-31</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ENABLE1</name>
          <description>GPIO output enable register for GPIO32-53</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DATA</name>
              <description>GPIO output enable register for GPIO32-53</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ENABLE1_W1TS</name>
          <description>GPIO output enable set register for GPIO32-53</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ENABLE1_W1TS</name>
              <description>GPIO output enable set register for GPIO32-53</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ENABLE1_W1TC</name>
          <description>GPIO output enable clear register for GPIO32-53</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ENABLE1_W1TC</name>
              <description>GPIO output enable clear register for GPIO32-53</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STRAP</name>
          <description>pad strapping register</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>STRAPPING</name>
              <description>pad strapping register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN</name>
          <description>GPIO input register for GPIO0-31</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DATA_NEXT</name>
              <description>GPIO input register for GPIO0-31</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN1</name>
          <description>GPIO input register for GPIO32-53</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DATA_NEXT</name>
              <description>GPIO input register for GPIO32-53</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS</name>
          <description>GPIO interrupt status register for GPIO0-31</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INTERRUPT</name>
              <description>GPIO interrupt status register for GPIO0-31</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS_W1TS</name>
          <description>GPIO interrupt status set register for GPIO0-31</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>STATUS_W1TS</name>
              <description>GPIO interrupt status set register for GPIO0-31</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS_W1TC</name>
          <description>GPIO interrupt status clear register for GPIO0-31</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>STATUS_W1TC</name>
              <description>GPIO interrupt status clear register for GPIO0-31</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS1</name>
          <description>GPIO interrupt status register for GPIO32-53</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INTERRUPT</name>
              <description>GPIO interrupt status register for GPIO32-53</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS1_W1TS</name>
          <description>GPIO interrupt status set register for GPIO32-53</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>STATUS1_W1TS</name>
              <description>GPIO interrupt status set register for GPIO32-53</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS1_W1TC</name>
          <description>GPIO interrupt status clear register for GPIO32-53</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>STATUS1_W1TC</name>
              <description>GPIO interrupt status clear register for GPIO32-53</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PCPU_INT</name>
          <description>GPIO PRO_CPU interrupt status register for GPIO0-31</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PROCPU_INT</name>
              <description>GPIO PRO_CPU interrupt status register for GPIO0-31</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PCPU_NMI_INT</name>
          <description>GPIO PRO_CPU(not shielded) interrupt status register for GPIO0-31</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PROCPU_NMI_INT</name>
              <description>GPIO PRO_CPU(not shielded) interrupt status register for GPIO0-31</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPUSDIO_INT</name>
          <description>GPIO CPUSDIO interrupt status register for GPIO0-31</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SDIO_INT</name>
              <description>GPIO CPUSDIO interrupt status register for GPIO0-31</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PCPU_INT1</name>
          <description>GPIO PRO_CPU interrupt status register for GPIO32-53</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PROCPU_INT1</name>
              <description>GPIO PRO_CPU interrupt status register for GPIO32-53</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PCPU_NMI_INT1</name>
          <description>GPIO PRO_CPU(not shielded) interrupt status register for GPIO32-53</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PROCPU_NMI_INT1</name>
              <description>GPIO PRO_CPU(not shielded) interrupt status register for GPIO32-53</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPUSDIO_INT1</name>
          <description>GPIO CPUSDIO interrupt status register for GPIO32-53</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SDIO_INT1</name>
              <description>GPIO CPUSDIO interrupt status register for GPIO32-53</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>54</dim>
          <dimIncrement>0x4</dimIncrement>
          <dimIndex>0-53</dimIndex>
          <name>PIN%s</name>
          <description>GPIO pin configuration register</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYNC2_BYPASS</name>
              <description>set GPIO input_sync2 signal mode. 0:disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PAD_DRIVER</name>
              <description>set this bit to select pad driver. 1:open-drain. 0:normal.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNC1_BYPASS</name>
              <description>set GPIO input_sync1 signal mode. 0:disable. 1:trigger at negedge. 2or3:trigger at posedge.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INT_TYPE</name>
              <description>set this value to choose interrupt mode. 0:disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level</description>
              <bitOffset>7</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WAKEUP_ENABLE</name>
              <description>set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CONFIG</name>
              <description>reserved</description>
              <bitOffset>11</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INT_ENA</name>
              <description>set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS_NEXT</name>
          <description>GPIO interrupt source register for GPIO0-31</description>
          <addressOffset>0x14C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>STATUS_INTERRUPT_NEXT</name>
              <description>GPIO interrupt source register for GPIO0-31</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS_NEXT1</name>
          <description>GPIO interrupt source register for GPIO32-53</description>
          <addressOffset>0x150</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>STATUS_INTERRUPT_NEXT1</name>
              <description>GPIO interrupt source register for GPIO32-53</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>256</dim>
          <dimIncrement>0x4</dimIncrement>
          <dimIndex>0-255</dimIndex>
          <name>FUNC%s_IN_SEL_CFG</name>
          <description>GPIO input function configuration register</description>
          <addressOffset>0x154</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IN_SEL</name>
              <description>set this value: s=0-53: connect GPIO[s] to this port. s=0x38: set this port always high level. s=0x3C: set this port always low level.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_INV_SEL</name>
              <description>set this bit to invert input signal. 1:invert. 0:not invert.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEL</name>
              <description>set this bit to bypass GPIO. 1:do not bypass GPIO. 0:bypass GPIO.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>54</dim>
          <dimIncrement>0x4</dimIncrement>
          <dimIndex>0-53</dimIndex>
          <name>FUNC%s_OUT_SEL_CFG</name>
          <description>GPIO output function select register</description>
          <addressOffset>0x554</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000100</resetValue>
          <fields>
            <field>
              <name>OUT_SEL</name>
              <description>The value of the bits: 0&lt;=s&lt;=256. Set the value to select output signal. s=0-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n].</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INV_SEL</name>
              <description>set this bit to invert output signal.1:invert.0:not invert.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OEN_SEL</name>
              <description>set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.0:use peripheral output enable signal.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OEN_INV_SEL</name>
              <description>set this bit to invert output enable signal.1:invert.0:not invert.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLOCK_GATE</name>
          <description>GPIO clock gate register</description>
          <addressOffset>0x62C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>CLK_EN</name>
              <description>set this bit to enable GPIO clock gate</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DATE</name>
          <description>GPIO version register</description>
          <addressOffset>0x6FC</addressOffset>
          <size>0x20</size>
          <resetValue>0x01907040</resetValue>
          <fields>
            <field>
              <name>REG_DATE</name>
              <description>version register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>GPIOSD</name>
      <description>Sigma-Delta Modulation</description>
      <groupName>GPIOSD</groupName>
      <baseAddress>0x60004F00</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x2C</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <dim>8</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>SIGMADELTA%s</name>
          <description>Duty Cycle Configure Register of SDM%s</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000FF00</resetValue>
          <fields>
            <field>
              <name>SD_IN</name>
              <description>This field is used to configure the duty cycle of sigma delta modulation output.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SD_PRESCALE</name>
              <description>This field is used to set a divider value to divide APB clock.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SIGMADELTA_CG</name>
          <description>Clock Gating Configure Register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CLK_EN</name>
              <description>Clock enable bit of configuration registers for sigma delta modulation.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SIGMADELTA_MISC</name>
          <description>MISC Register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>FUNCTION_CLK_EN</name>
              <description>Clock enable bit of sigma delta modulation.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SWAP</name>
              <description>Reserved.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SIGMADELTA_VERSION</name>
          <description>Version Control Register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <resetValue>0x01802260</resetValue>
          <fields>
            <field>
              <name>GPIO_SD_DATE</name>
              <description>Version control register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>HMAC</name>
      <description>HMAC (Hash-based Message Authentication Code) Accelerator</description>
      <groupName>HMAC</groupName>
      <baseAddress>0x6003E000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xA4</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>SET_START</name>
          <description>Process control register 0.</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_START</name>
              <description>Start hmac operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_PARA_PURPOSE</name>
          <description>Configure purpose.</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PURPOSE_SET</name>
              <description>Set hmac parameter purpose.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_PARA_KEY</name>
          <description>Configure key.</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>KEY_SET</name>
              <description>Set hmac parameter key.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_PARA_FINISH</name>
          <description>Finish initial configuration.</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_PARA_END</name>
              <description>Finish hmac configuration.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_MESSAGE_ONE</name>
          <description>Process control register 1.</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_TEXT_ONE</name>
              <description>Call SHA to calculate one message block.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_MESSAGE_ING</name>
          <description>Process control register 2.</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_TEXT_ING</name>
              <description>Continue typical hmac.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_MESSAGE_END</name>
          <description>Process control register 3.</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_TEXT_END</name>
              <description>Start hardware padding.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_RESULT_FINISH</name>
          <description>Process control register 4.</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_RESULT_END</name>
              <description>After read result from upstream, then let hmac back to idle.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_INVALIDATE_JTAG</name>
          <description>Invalidate register 0.</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_INVALIDATE_JTAG</name>
              <description>Clear result from hmac downstream JTAG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SET_INVALIDATE_DS</name>
          <description>Invalidate register 1.</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_INVALIDATE_DS</name>
              <description>Clear result from hmac downstream DS.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>QUERY_ERROR</name>
          <description>Error register.</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>QUREY_CHECK</name>
              <description>Hmac configuration state. 0: key are agree with purpose. 1: error</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>QUERY_BUSY</name>
          <description>Busy register.</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUSY_STATE</name>
              <description>Hmac state. 1'b0: idle. 1'b1: busy</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>64</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>WR_MESSAGE_MEM[%s]</name>
          <description>Message block memory.</description>
          <addressOffset>0x80</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <dim>32</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>RD_RESULT_MEM[%s]</name>
          <description>Result from upstream.</description>
          <addressOffset>0xC0</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <name>SET_MESSAGE_PAD</name>
          <description>Process control register 5.</description>
          <addressOffset>0xF0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_TEXT_PAD</name>
              <description>Start software padding.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ONE_BLOCK</name>
          <description>Process control register 6.</description>
          <addressOffset>0xF4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SET_ONE_BLOCK</name>
              <description>Don't have to do padding.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SOFT_JTAG_CTRL</name>
          <description>Jtag register 0.</description>
          <addressOffset>0xF8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SOFT_JTAG_CTRL</name>
              <description>Turn on JTAG verification.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WR_JTAG</name>
          <description>Jtag register 1.</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>WR_JTAG</name>
              <description>32-bit of key to be compared.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>Date register.</description>
          <addressOffset>0x1FC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02101070</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>Hmac date information/ hmac version information.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>I2C0</name>
      <description>I2C (Inter-Integrated Circuit) Controller</description>
      <groupName>I2C</groupName>
      <baseAddress>0x60013000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x90</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>I2C_MST</name>
        <value>11</value>
      </interrupt>
      <interrupt>
        <name>I2C_EXT0</name>
        <value>42</value>
      </interrupt>
      <registers>
        <register>
          <name>SCL_LOW_PERIOD</name>
          <description>Configures the low level width of the SCL
Clock</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SCL_LOW_PERIOD</name>
              <description>This register is used to configure for how long SCL remains low in master mode, in I2C module clock cycles.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTR</name>
          <description>Transmission setting</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000020B</resetValue>
          <fields>
            <field>
              <name>SDA_FORCE_OUT</name>
              <description>0: direct output; 1: open drain output.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_FORCE_OUT</name>
              <description>0: direct output; 1: open drain output.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAMPLE_SCL_LEVEL</name>
              <description>This register is used to select the sample mode.
1: sample SDA data on the SCL low level.
0: sample SDA data on the SCL high level.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_FULL_ACK_LEVEL</name>
              <description>This register is used to configure the ACK value that need to sent by master when the rx_fifo_cnt has reached the threshold.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MS_MODE</name>
              <description>Set this bit to configure the module as an I2C Master. Clear this bit to configure the
module as an I2C Slave.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRANS_START</name>
              <description>Set this bit to start sending the data in txfifo.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TX_LSB_FIRST</name>
              <description>This bit is used to control the sending mode for data needing to be sent.
1: send data from the least significant bit;
0: send data from the most significant bit.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_LSB_FIRST</name>
              <description>This bit is used to control the storage mode for received data.
1: receive data from the least significant bit;
0: receive data from the most significant bit.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EN</name>
              <description>Reserved</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ARBITRATION_EN</name>
              <description>This is the enable bit for arbitration_lost.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FSM_RST</name>
              <description>This register is used to reset the scl FMS.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CONF_UPGATE</name>
              <description>synchronization bit</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLV_TX_AUTO_START_EN</name>
              <description>This is the enable bit for slave to send data automatically</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_10BIT_RW_CHECK_EN</name>
              <description>This is the enable bit to check if the r/w bit of 10bit addressing consists with I2C protocol</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_BROADCASTING_EN</name>
              <description>This is the enable bit to support the 7bit general call function.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SR</name>
          <description>Describe I2C work status.</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000C000</resetValue>
          <fields>
            <field>
              <name>RESP_REC</name>
              <description>The received ACK value in master mode or slave mode. 0: ACK, 1: NACK.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLAVE_RW</name>
              <description>When in slave mode, 1: master reads from slave; 0: master writes to slave.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ARB_LOST</name>
              <description>When the I2C controller loses control of SCL line, this register changes to 1.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BUS_BUSY</name>
              <description>1: the I2C bus is busy transferring data; 0: the I2C bus is in idle state.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLAVE_ADDRESSED</name>
              <description>When configured as an I2C Slave, and the address sent by the master is
equal to the address of the slave, then this bit will be of high level.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_CNT</name>
              <description>This field represents the amount of data needed to be sent.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>STRETCH_CAUSE</name>
              <description>The cause of stretching SCL low in slave mode. 0:  stretching SCL low at the beginning of I2C read data state. 1: stretching SCL low when I2C Tx FIFO is empty in slave mode. 2: stretching SCL low when I2C Rx FIFO is full in slave mode.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_CNT</name>
              <description>This field stores the amount of received data in RAM.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SCL_MAIN_STATE_LAST</name>
              <description>This field indicates the states of the I2C module state machine.
0: Idle; 1: Address shift; 2: ACK address; 3: Rx data; 4: Tx data; 5: Send ACK; 6: Wait ACK</description>
              <bitOffset>24</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SCL_STATE_LAST</name>
              <description>This field indicates the states of the state machine used to produce SCL.
0: Idle; 1: Start; 2: Negative edge; 3: Low; 4: Positive edge; 5: High; 6: Stop</description>
              <bitOffset>28</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TO</name>
          <description>Setting time out control for receiving data.</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>TIME_OUT_VALUE</name>
              <description>This register is used to configure the timeout for receiving a data bit in APB
clock cycles.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIME_OUT_EN</name>
              <description>This is the enable bit for time out control.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLAVE_ADDR</name>
          <description>Local slave address setting</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLAVE_ADDR</name>
              <description>When configured as an I2C Slave, this field is used to configure the slave address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_10BIT_EN</name>
              <description>This field is used to enable the slave 10-bit addressing mode in master mode.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFO_ST</name>
          <description>FIFO status register.</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RXFIFO_RADDR</name>
              <description>This is the offset address of the APB reading from rxfifo</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_WADDR</name>
              <description>This is the offset address of i2c module receiving data and writing to rxfifo.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_RADDR</name>
              <description>This is the offset address of i2c module reading from txfifo.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_WADDR</name>
              <description>This is the offset address of APB bus writing to txfifo.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLAVE_RW_POINT</name>
              <description>The received data in I2C slave mode.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFO_CONF</name>
          <description>FIFO configuration register.</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000408B</resetValue>
          <fields>
            <field>
              <name>RXFIFO_WM_THRHD</name>
              <description>The water mark threshold of rx FIFO in nonfifo access mode. When reg_reg_fifo_prt_en is 1 and rx FIFO counter is bigger than reg_rxfifo_wm_thrhd[4:0], reg_rxfifo_wm_int_raw bit will be valid.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFO_WM_THRHD</name>
              <description>The water mark threshold of tx FIFO in nonfifo access mode. When reg_reg_fifo_prt_en is 1 and tx FIFO counter is smaller than reg_txfifo_wm_thrhd[4:0], reg_txfifo_wm_int_raw bit will be valid.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NONFIFO_EN</name>
              <description>Set this bit to enable APB nonfifo access.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO_ADDR_CFG_EN</name>
              <description>When this bit is set to 1, the byte received after the I2C address byte represents the offset address in the I2C Slave RAM.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_FIFO_RST</name>
              <description>Set this bit to reset rx-fifo.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_FIFO_RST</name>
              <description>Set this bit to reset tx-fifo.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO_PRT_EN</name>
              <description>The control enable bit of FIFO pointer in non-fifo access mode. This bit controls the valid bits and the interrupts of tx/rx_fifo overflow, underflow, full and empty.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA</name>
          <description>Rx FIFO read data.</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>FIFO_RDATA</name>
              <description>The value of rx FIFO read data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW</name>
          <description>Raw interrupt status</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000002</resetValue>
          <fields>
            <field>
              <name>RXFIFO_WM_INT_RAW</name>
              <description>The raw interrupt bit for I2C_RXFIFO_WM_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_WM_INT_RAW</name>
              <description>The raw interrupt bit for I2C_TXFIFO_WM_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_OVF_INT_RAW</name>
              <description>The raw interrupt bit for I2C_RXFIFO_OVF_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>END_DETECT_INT_RAW</name>
              <description>The raw interrupt bit for the I2C_END_DETECT_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BYTE_TRANS_DONE_INT_RAW</name>
              <description>The raw interrupt bit for the I2C_END_DETECT_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ARBITRATION_LOST_INT_RAW</name>
              <description>The raw interrupt bit for the I2C_ARBITRATION_LOST_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MST_TXFIFO_UDF_INT_RAW</name>
              <description>The raw interrupt bit for I2C_TRANS_COMPLETE_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TRANS_COMPLETE_INT_RAW</name>
              <description>The raw interrupt bit for the I2C_TRANS_COMPLETE_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIME_OUT_INT_RAW</name>
              <description>The raw interrupt bit for the I2C_TIME_OUT_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TRANS_START_INT_RAW</name>
              <description>The raw interrupt bit for the I2C_TRANS_START_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NACK_INT_RAW</name>
              <description>The raw interrupt bit for I2C_SLAVE_STRETCH_INT interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_OVF_INT_RAW</name>
              <description>The raw interrupt bit for I2C_TXFIFO_OVF_INT interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_UDF_INT_RAW</name>
              <description>The raw interrupt bit for I2C_RXFIFO_UDF_INT  interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SCL_ST_TO_INT_RAW</name>
              <description>The raw interrupt bit for I2C_SCL_ST_TO_INT interrupt.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SCL_MAIN_ST_TO_INT_RAW</name>
              <description>The raw interrupt bit for I2C_SCL_MAIN_ST_TO_INT interrupt.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DET_START_INT_RAW</name>
              <description>The raw interrupt bit for I2C_DET_START_INT interrupt.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLAVE_STRETCH_INT_RAW</name>
              <description>The raw interrupt bit for I2C_SLAVE_STRETCH_INT interrupt.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GENERAL_CALL_INT_RAW</name>
              <description>The raw interrupt bit for I2C_GENARAL_CALL_INT interrupt.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>Interrupt clear bits</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RXFIFO_WM_INT_CLR</name>
              <description>Set this bit to clear I2C_RXFIFO_WM_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TXFIFO_WM_INT_CLR</name>
              <description>Set this bit to clear I2C_TXFIFO_WM_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RXFIFO_OVF_INT_CLR</name>
              <description>Set this bit to clear I2C_RXFIFO_OVF_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>END_DETECT_INT_CLR</name>
              <description>Set this bit to clear the I2C_END_DETECT_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BYTE_TRANS_DONE_INT_CLR</name>
              <description>Set this bit to clear the I2C_END_DETECT_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ARBITRATION_LOST_INT_CLR</name>
              <description>Set this bit to clear the I2C_ARBITRATION_LOST_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MST_TXFIFO_UDF_INT_CLR</name>
              <description>Set this bit to clear I2C_TRANS_COMPLETE_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TRANS_COMPLETE_INT_CLR</name>
              <description>Set this bit to clear the I2C_TRANS_COMPLETE_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TIME_OUT_INT_CLR</name>
              <description>Set this bit to clear the I2C_TIME_OUT_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TRANS_START_INT_CLR</name>
              <description>Set this bit to clear the I2C_TRANS_START_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>NACK_INT_CLR</name>
              <description>Set this bit to clear I2C_SLAVE_STRETCH_INT interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TXFIFO_OVF_INT_CLR</name>
              <description>Set this bit to clear I2C_TXFIFO_OVF_INT interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RXFIFO_UDF_INT_CLR</name>
              <description>Set this bit to clear I2C_RXFIFO_UDF_INT  interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SCL_ST_TO_INT_CLR</name>
              <description>Set this bit to clear I2C_SCL_ST_TO_INT interrupt.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SCL_MAIN_ST_TO_INT_CLR</name>
              <description>Set this bit to clear I2C_SCL_MAIN_ST_TO_INT interrupt.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DET_START_INT_CLR</name>
              <description>Set this bit to clear I2C_DET_START_INT interrupt.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLAVE_STRETCH_INT_CLR</name>
              <description>Set this bit to clear I2C_SLAVE_STRETCH_INT interrupt.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>GENERAL_CALL_INT_CLR</name>
              <description>Set this bit for I2C_GENARAL_CALL_INT interrupt.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>Interrupt enable bits</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RXFIFO_WM_INT_ENA</name>
              <description>The interrupt enable bit for I2C_RXFIFO_WM_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFO_WM_INT_ENA</name>
              <description>The interrupt enable bit for I2C_TXFIFO_WM_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFO_OVF_INT_ENA</name>
              <description>The interrupt enable bit for I2C_RXFIFO_OVF_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>END_DETECT_INT_ENA</name>
              <description>The interrupt enable bit for the I2C_END_DETECT_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BYTE_TRANS_DONE_INT_ENA</name>
              <description>The interrupt enable bit for the I2C_END_DETECT_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ARBITRATION_LOST_INT_ENA</name>
              <description>The interrupt enable bit for the I2C_ARBITRATION_LOST_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MST_TXFIFO_UDF_INT_ENA</name>
              <description>The interrupt enable bit for I2C_TRANS_COMPLETE_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRANS_COMPLETE_INT_ENA</name>
              <description>The interrupt enable bit for the I2C_TRANS_COMPLETE_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIME_OUT_INT_ENA</name>
              <description>The interrupt enable bit for the I2C_TIME_OUT_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRANS_START_INT_ENA</name>
              <description>The interrupt enable bit for the I2C_TRANS_START_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NACK_INT_ENA</name>
              <description>The interrupt enable bit for I2C_SLAVE_STRETCH_INT interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFO_OVF_INT_ENA</name>
              <description>The interrupt enable bit for I2C_TXFIFO_OVF_INT interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFO_UDF_INT_ENA</name>
              <description>The interrupt enable bit for I2C_RXFIFO_UDF_INT  interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_ST_TO_INT_ENA</name>
              <description>The interrupt enable bit for I2C_SCL_ST_TO_INT interrupt.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_MAIN_ST_TO_INT_ENA</name>
              <description>The interrupt enable bit for I2C_SCL_MAIN_ST_TO_INT interrupt.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DET_START_INT_ENA</name>
              <description>The interrupt enable bit for I2C_DET_START_INT interrupt.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLAVE_STRETCH_INT_ENA</name>
              <description>The interrupt enable bit for I2C_SLAVE_STRETCH_INT interrupt.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GENERAL_CALL_INT_ENA</name>
              <description>The interrupt enable bit for I2C_GENARAL_CALL_INT interrupt.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_STATUS</name>
          <description>Status of captured I2C communication events</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RXFIFO_WM_INT_ST</name>
              <description>The masked interrupt status bit for I2C_RXFIFO_WM_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_WM_INT_ST</name>
              <description>The masked interrupt status bit for I2C_TXFIFO_WM_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_OVF_INT_ST</name>
              <description>The masked interrupt status bit for I2C_RXFIFO_OVF_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>END_DETECT_INT_ST</name>
              <description>The masked interrupt status bit for the I2C_END_DETECT_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BYTE_TRANS_DONE_INT_ST</name>
              <description>The masked interrupt status bit for the I2C_END_DETECT_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ARBITRATION_LOST_INT_ST</name>
              <description>The masked interrupt status bit for the I2C_ARBITRATION_LOST_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MST_TXFIFO_UDF_INT_ST</name>
              <description>The masked interrupt status bit for I2C_TRANS_COMPLETE_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TRANS_COMPLETE_INT_ST</name>
              <description>The masked interrupt status bit for the I2C_TRANS_COMPLETE_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIME_OUT_INT_ST</name>
              <description>The masked interrupt status bit for the I2C_TIME_OUT_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TRANS_START_INT_ST</name>
              <description>The masked interrupt status bit for the I2C_TRANS_START_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NACK_INT_ST</name>
              <description>The masked interrupt status bit for I2C_SLAVE_STRETCH_INT interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_OVF_INT_ST</name>
              <description>The masked interrupt status bit for I2C_TXFIFO_OVF_INT interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_UDF_INT_ST</name>
              <description>The masked interrupt status bit for I2C_RXFIFO_UDF_INT  interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SCL_ST_TO_INT_ST</name>
              <description>The masked interrupt status bit for I2C_SCL_ST_TO_INT interrupt.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SCL_MAIN_ST_TO_INT_ST</name>
              <description>The masked interrupt status bit for I2C_SCL_MAIN_ST_TO_INT interrupt.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DET_START_INT_ST</name>
              <description>The masked interrupt status bit for I2C_DET_START_INT interrupt.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLAVE_STRETCH_INT_ST</name>
              <description>The masked interrupt status bit for I2C_SLAVE_STRETCH_INT interrupt.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GENERAL_CALL_INT_ST</name>
              <description>The masked interrupt status bit for I2C_GENARAL_CALL_INT interrupt.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDA_HOLD</name>
          <description>Configures the hold time after a negative SCL edge.</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIME</name>
              <description>This register is used to configure the time to hold the data after the negative
edge of SCL, in I2C module clock cycles.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDA_SAMPLE</name>
          <description>Configures the sample time after a positive SCL edge.</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIME</name>
              <description>This register is used to configure for how long SDA is sampled, in I2C module clock cycles.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_HIGH_PERIOD</name>
          <description>Configures the high level width of SCL</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SCL_HIGH_PERIOD</name>
              <description>This register is used to configure for how long SCL remains high in master mode, in I2C module clock cycles.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_WAIT_HIGH_PERIOD</name>
              <description>This register is used to configure for the SCL_FSM's waiting period for SCL high level in master mode, in I2C module clock cycles.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_START_HOLD</name>
          <description>Configures the delay between the SDA and SCL negative edge for a start condition</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>TIME</name>
              <description>This register is used to configure the time between the negative edge
of SDA and the negative edge of SCL for a START condition, in I2C module clock cycles.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_RSTART_SETUP</name>
          <description>Configures the delay between the positive
edge of SCL and the negative edge of SDA</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>TIME</name>
              <description>This register is used to configure the time between the positive
edge of SCL and the negative edge of SDA for a RESTART condition, in I2C module clock cycles.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_STOP_HOLD</name>
          <description>Configures the delay after the SCL clock
edge for a stop condition</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>TIME</name>
              <description>This register is used to configure the delay after the STOP condition,
in I2C module clock cycles.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_STOP_SETUP</name>
          <description>Configures the delay between the SDA and
SCL positive edge for a stop condition</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>TIME</name>
              <description>This register is used to configure the time between the positive edge
of SCL and the positive edge of SDA, in I2C module clock cycles.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FILTER_CFG</name>
          <description>SCL and SDA filter configuration register</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000300</resetValue>
          <fields>
            <field>
              <name>SCL_FILTER_THRES</name>
              <description>When a pulse on the SCL input has smaller width than this register value
in I2C module clock cycles, the I2C controller will ignore that pulse.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDA_FILTER_THRES</name>
              <description>When a pulse on the SDA input has smaller width than this register value
in I2C module clock cycles, the I2C controller will ignore that pulse.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_FILTER_EN</name>
              <description>This is the filter enable bit for SCL.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDA_FILTER_EN</name>
              <description>This is the filter enable bit for SDA.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLK_CONF</name>
          <description>I2C CLK configuration register</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <resetValue>0x00200000</resetValue>
          <fields>
            <field>
              <name>SCLK_DIV_NUM</name>
              <description>the integral part of the fractional divisor for i2c module</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLK_DIV_A</name>
              <description>the numerator of the fractional part of the fractional divisor for i2c module</description>
              <bitOffset>8</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLK_DIV_B</name>
              <description>the denominator of the fractional part of the fractional divisor for i2c module</description>
              <bitOffset>14</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLK_SEL</name>
              <description>The clock selection for i2c module:0-XTAL;1-CLK_8MHz.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLK_ACTIVE</name>
              <description>The clock switch for i2c module</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x4</dimIncrement>
          <dimIndex>0-7</dimIndex>
          <name>COMD%s</name>
          <description>I2C command register %s</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>COMMAND</name>
              <description>This is the content of command 0. It consists of three parts:
op_code is the command, 0: RSTART; 1: WRITE; 2: READ; 3: STOP; 4: END.
Byte_num represents the number of bytes that need to be sent or received.
ack_check_en, ack_exp and ack are used to control the ACK bit. See I2C cmd structure for more
Information.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND_DONE</name>
              <description>When command 0 is done in I2C Master mode, this bit changes to high
level.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_ST_TIME_OUT</name>
          <description>SCL status time out register</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SCL_ST_TO_I2C</name>
              <description>The threshold value of SCL_FSM state unchanged period. It should be o more than 23</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_MAIN_ST_TIME_OUT</name>
          <description>SCL main status time out register</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SCL_MAIN_ST_TO_I2C</name>
              <description>The threshold value of SCL_MAIN_FSM state unchanged period.nIt should be o more than 23</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_SP_CONF</name>
          <description>Power configuration register</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SCL_RST_SLV_EN</name>
              <description>When I2C master is IDLE, set this bit to send out SCL pulses. The number of pulses equals to reg_scl_rst_slv_num[4:0].</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_RST_SLV_NUM</name>
              <description>Configure the pulses of SCL generated in I2C master mode. Valid when reg_scl_rst_slv_en is 1.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_PD_EN</name>
              <description>The power down enable bit for the I2C output SCL line. 1: Power down. 0: Not power down. Set reg_scl_force_out and reg_scl_pd_en to 1 to stretch SCL low.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDA_PD_EN</name>
              <description>The power down enable bit for the I2C output SDA line. 1: Power down. 0: Not power down. Set reg_sda_force_out and reg_sda_pd_en to 1 to stretch SDA low.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_STRETCH_CONF</name>
          <description>Set SCL stretch of I2C slave</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>STRETCH_PROTECT_NUM</name>
              <description>Configure the period of I2C slave stretching SCL line.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLAVE_SCL_STRETCH_EN</name>
              <description>The enable bit for slave SCL stretch function. 1: Enable. 0: Disable. The SCL output line will be stretched low when reg_slave_scl_stretch_en is 1 and stretch event happens. The stretch cause can be seen in reg_stretch_cause.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLAVE_SCL_STRETCH_CLR</name>
              <description>Set this bit to clear the I2C slave SCL stretch function.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLAVE_BYTE_ACK_CTL_EN</name>
              <description>The enable bit for slave to control ACK level function.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLAVE_BYTE_ACK_LVL</name>
              <description>Set the ACK level when slave controlling ACK level function enables.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>Version register</description>
          <addressOffset>0xF8</addressOffset>
          <size>0x20</size>
          <resetValue>0x20070201</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>This is the the version register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXFIFO_START_ADDR</name>
          <description>I2C TXFIFO base address register</description>
          <addressOffset>0x100</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TXFIFO_START_ADDR</name>
              <description>This is the I2C txfifo first address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXFIFO_START_ADDR</name>
          <description>I2C RXFIFO base address register</description>
          <addressOffset>0x180</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RXFIFO_START_ADDR</name>
              <description>This is the I2C rxfifo first address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="I2C0">
      <name>I2C1</name>
      <description>I2C (Inter-Integrated Circuit) Controller</description>
      <baseAddress>0x60027000</baseAddress>
      <interrupt>
        <name>I2C_EXT1</name>
        <value>43</value>
      </interrupt>
    </peripheral>
    <peripheral>
      <name>I2S0</name>
      <description>I2S (Inter-IC Sound) Controller</description>
      <groupName>I2S</groupName>
      <baseAddress>0x6000F000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x5C</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>I2S0</name>
        <value>25</value>
      </interrupt>
      <registers>
        <register>
          <name>INT_RAW</name>
          <description>I2S interrupt raw register, valid in level.</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RX_DONE_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_rx_done_int interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_DONE_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_tx_done_int interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_HUNG_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_rx_hung_int interrupt</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_HUNG_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_tx_hung_int interrupt</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST</name>
          <description>I2S interrupt status register.</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RX_DONE_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_rx_done_int interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_DONE_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_tx_done_int interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_HUNG_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_rx_hung_int interrupt</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_HUNG_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_tx_hung_int interrupt</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>I2S interrupt enable register.</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RX_DONE_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_rx_done_int interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_DONE_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_tx_done_int interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_HUNG_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_rx_hung_int interrupt</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_HUNG_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_tx_hung_int interrupt</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>I2S interrupt clear register.</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RX_DONE_INT_CLR</name>
              <description>Set this bit to clear the i2s_rx_done_int interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TX_DONE_INT_CLR</name>
              <description>Set this bit to clear the i2s_tx_done_int interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RX_HUNG_INT_CLR</name>
              <description>Set this bit to clear the i2s_rx_hung_int interrupt</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TX_HUNG_INT_CLR</name>
              <description>Set this bit to clear the i2s_tx_hung_int interrupt</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_CONF</name>
          <description>I2S RX configure register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <resetValue>0x00009600</resetValue>
          <fields>
            <field>
              <name>RX_RESET</name>
              <description>Set this bit to reset receiver</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RX_FIFO_RESET</name>
              <description>Set this bit to reset Rx AFIFO</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RX_START</name>
              <description>Set this bit to start receiving data</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_SLAVE_MOD</name>
              <description>Set this bit to enable slave receiver mode</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MONO</name>
              <description>Set this bit to enable receiver  in mono mode</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_BIG_ENDIAN</name>
              <description>I2S Rx byte endian, 1: low addr value to high addr. 0: low addr with low addr value.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_UPDATE</name>
              <description>Set 1 to update I2S RX registers from APB clock domain to I2S RX clock domain. This bit will be cleared by hardware after update register done.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MONO_FST_VLD</name>
              <description>1: The first channel data value is valid in I2S RX mono mode.   0: The second channel data value is valid in I2S RX mono mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_PCM_CONF</name>
              <description>I2S RX compress/decompress configuration bit. &amp; 0 (atol): A-Law decompress, 1 (ltoa) : A-Law compress, 2 (utol) : u-Law decompress, 3 (ltou) : u-Law compress. &amp;</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_PCM_BYPASS</name>
              <description>Set this bit to bypass Compress/Decompress module for received data.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_STOP_MODE</name>
              <description>0  : I2S Rx only stop when reg_rx_start is cleared.   1: Stop when reg_rx_start is 0 or in_suc_eof is 1.   2:  Stop I2S RX when reg_rx_start is 0 or RX FIFO is full.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_LEFT_ALIGN</name>
              <description>1: I2S RX left alignment mode. 0: I2S RX right alignment mode.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_24_FILL_EN</name>
              <description>1: store 24 channel bits to 32 bits. 0:store 24 channel bits to 24 bits.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_WS_IDLE_POL</name>
              <description>0: WS should be 0 when receiving left channel data, and WS is 1in right channel.  1: WS should be 1 when receiving left channel data, and WS is 0in right channel.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_BIT_ORDER</name>
              <description>I2S Rx bit endian. 1:small endian, the LSB is received first. 0:big endian, the MSB is received first.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_EN</name>
              <description>1: Enable I2S TDM Rx mode . 0: Disable.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_PDM_EN</name>
              <description>1: Enable I2S PDM Rx mode . 0: Disable.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_PDM2PCM_EN</name>
              <description>1: Enable PDM2PCM RX mode. 0: DIsable.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_PDM_SINC_DSR_16_EN</name>
              <description>Configure the down sampling rate of PDM RX filter group1 module. 1: The  down sampling rate is 128. 0: down sampling rate is 64.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_CONF</name>
          <description>I2S TX configure register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000B200</resetValue>
          <fields>
            <field>
              <name>TX_RESET</name>
              <description>Set this bit to reset transmitter</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TX_FIFO_RESET</name>
              <description>Set this bit to reset Tx AFIFO</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TX_START</name>
              <description>Set this bit to start transmitting data</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_SLAVE_MOD</name>
              <description>Set this bit to enable slave transmitter mode</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_MONO</name>
              <description>Set this bit to enable transmitter in mono mode</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_CHAN_EQUAL</name>
              <description>1: The value of Left channel data is equal to the value of right channel data in I2S TX mono mode or TDM channel select mode. 0: The invalid channel data is reg_i2s_single_data in I2S TX mono mode or TDM channel select mode.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_BIG_ENDIAN</name>
              <description>I2S Tx byte endian, 1: low addr value to high addr.  0: low addr with low addr value.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_UPDATE</name>
              <description>Set 1 to update I2S TX registers from APB clock domain to I2S TX clock domain. This bit will be cleared by hardware after update register done.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_MONO_FST_VLD</name>
              <description>1: The first channel data value is valid in I2S TX mono mode.   0: The second channel data value is valid in I2S TX mono mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PCM_CONF</name>
              <description>I2S TX compress/decompress configuration bit. &amp; 0 (atol): A-Law decompress, 1 (ltoa) : A-Law compress, 2 (utol) : u-Law decompress, 3 (ltou) : u-Law compress. &amp;</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PCM_BYPASS</name>
              <description>Set this bit to bypass  Compress/Decompress module for transmitted data.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_STOP_EN</name>
              <description>Set this bit to stop disable output BCK signal and WS signal when tx FIFO is emtpy</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_LEFT_ALIGN</name>
              <description>1: I2S TX left alignment mode. 0: I2S TX right alignment mode.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_24_FILL_EN</name>
              <description>1: Sent 32 bits in 24 channel bits mode. 0: Sent 24 bits in 24 channel bits mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_WS_IDLE_POL</name>
              <description>0: WS should be 0 when sending left channel data, and WS is 1in right channel.  1: WS should be 1 when sending left channel data, and WS is 0in right channel.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_BIT_ORDER</name>
              <description>I2S Tx bit endian. 1:small endian, the LSB is sent first. 0:big endian, the MSB is sent first.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_EN</name>
              <description>1: Enable I2S TDM Tx mode . 0: Disable.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PDM_EN</name>
              <description>1: Enable I2S PDM Tx mode . 0: Disable.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_CHAN_MOD</name>
              <description>I2S transmitter channel mode configuration bits.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SIG_LOOPBACK</name>
              <description>Enable signal loop back mode with transmitter module and receiver module sharing the same WS and BCK signals.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_CONF1</name>
          <description>I2S RX configure register 1</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <resetValue>0x2F3DE300</resetValue>
          <fields>
            <field>
              <name>RX_TDM_WS_WIDTH</name>
              <description>The width of rx_ws_out in TDM mode is (I2S_RX_TDM_WS_WIDTH[6:0] +1) * T_bck</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_BCK_DIV_NUM</name>
              <description>Bit clock configuration bits in receiver mode.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_BITS_MOD</name>
              <description>Set the bits to configure the valid data bit length of I2S receiver channel. 7: all the valid channel data is in 8-bit-mode. 15: all the valid channel data is in 16-bit-mode. 23: all the valid channel data is in 24-bit-mode. 31:all the valid channel data is in 32-bit-mode.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_HALF_SAMPLE_BITS</name>
              <description>I2S Rx half sample bits -1.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_CHAN_BITS</name>
              <description>The Rx bit number for each channel minus 1in TDM mode.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MSB_SHIFT</name>
              <description>Set this bit to enable receiver in Phillips standard mode</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_CONF1</name>
          <description>I2S TX configure register 1</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <resetValue>0x6F3DE300</resetValue>
          <fields>
            <field>
              <name>TX_TDM_WS_WIDTH</name>
              <description>The width of tx_ws_out in TDM mode is (I2S_TX_TDM_WS_WIDTH[6:0] +1) * T_bck</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_BCK_DIV_NUM</name>
              <description>Bit clock configuration bits in transmitter mode.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_BITS_MOD</name>
              <description>Set the bits to configure the valid data bit length of I2S transmitter channel. 7: all the valid channel data is in 8-bit-mode. 15: all the valid channel data is in 16-bit-mode. 23: all the valid channel data is in 24-bit-mode. 31:all the valid channel data is in 32-bit-mode.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_HALF_SAMPLE_BITS</name>
              <description>I2S Tx half sample bits -1.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN_BITS</name>
              <description>The Tx bit number for each channel minus 1in TDM mode.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_MSB_SHIFT</name>
              <description>Set this bit to enable transmitter in Phillips standard mode</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_BCK_NO_DLY</name>
              <description>1: BCK is not delayed to generate pos/neg edge in master mode. 0: BCK is delayed to generate pos/neg edge in master mode.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_CLKM_CONF</name>
          <description>I2S RX clock configure register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000002</resetValue>
          <fields>
            <field>
              <name>RX_CLKM_DIV_NUM</name>
              <description>Integral I2S clock divider value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_CLK_ACTIVE</name>
              <description>I2S Rx module clock enable signal.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_CLK_SEL</name>
              <description>Select I2S Rx module source clock. 0: no clock. 1: APLL. 2: CLK160. 3: I2S_MCLK_in.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCLK_SEL</name>
              <description>0: UseI2S Tx module clock as I2S_MCLK_OUT.  1: UseI2S Rx module clock as I2S_MCLK_OUT.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_CLKM_CONF</name>
          <description>I2S TX clock configure register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000002</resetValue>
          <fields>
            <field>
              <name>TX_CLKM_DIV_NUM</name>
              <description>Integral I2S TX clock divider value. f_I2S_CLK = f_I2S_CLK_S/(N+b/a). There will be (a-b) * n-div and b * (n+1)-div.  So the average combination will be:  for b &lt;= a/2, z * [x * n-div + (n+1)-div] + y * n-div. For b > a/2, z * [n-div + x * (n+1)-div] + y * (n+1)-div.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_CLK_ACTIVE</name>
              <description>I2S Tx module clock enable signal.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_CLK_SEL</name>
              <description>Select I2S Tx module source clock. 0: XTAL clock. 1: APLL. 2: CLK160. 3: I2S_MCLK_in.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EN</name>
              <description>Set this bit to enable clk gate</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_CLKM_DIV_CONF</name>
          <description>I2S RX module clock divider configure register</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000200</resetValue>
          <fields>
            <field>
              <name>RX_CLKM_DIV_Z</name>
              <description>For b &lt;= a/2, the value of I2S_RX_CLKM_DIV_Z is b. For b > a/2, the value of I2S_RX_CLKM_DIV_Z is (a-b).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_CLKM_DIV_Y</name>
              <description>For b &lt;= a/2, the value of I2S_RX_CLKM_DIV_Y is (a%b) . For b > a/2, the value of I2S_RX_CLKM_DIV_Y is (a%(a-b)).</description>
              <bitOffset>9</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_CLKM_DIV_X</name>
              <description>For b &lt;= a/2, the value of I2S_RX_CLKM_DIV_X is (a/b) - 1. For b > a/2, the value of I2S_RX_CLKM_DIV_X is (a/(a-b)) - 1.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_CLKM_DIV_YN1</name>
              <description>For b &lt;= a/2, the value of I2S_RX_CLKM_DIV_YN1 is 0 . For b > a/2, the value of I2S_RX_CLKM_DIV_YN1 is 1.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_CLKM_DIV_CONF</name>
          <description>I2S TX module clock divider configure register</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000200</resetValue>
          <fields>
            <field>
              <name>TX_CLKM_DIV_Z</name>
              <description>For b &lt;= a/2, the value of I2S_TX_CLKM_DIV_Z is b. For b > a/2, the value of I2S_TX_CLKM_DIV_Z is (a-b).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_CLKM_DIV_Y</name>
              <description>For b &lt;= a/2, the value of I2S_TX_CLKM_DIV_Y is (a%b) . For b > a/2, the value of I2S_TX_CLKM_DIV_Y is (a%(a-b)).</description>
              <bitOffset>9</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_CLKM_DIV_X</name>
              <description>For b &lt;= a/2, the value of I2S_TX_CLKM_DIV_X is (a/b) - 1. For b > a/2, the value of I2S_TX_CLKM_DIV_X is (a/(a-b)) - 1.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_CLKM_DIV_YN1</name>
              <description>For b &lt;= a/2, the value of I2S_TX_CLKM_DIV_YN1 is 0 . For b > a/2, the value of I2S_TX_CLKM_DIV_YN1 is 1.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_PCM2PDM_CONF</name>
          <description>I2S TX PCM2PDM configuration register</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <resetValue>0x004AA004</resetValue>
          <fields>
            <field>
              <name>TX_PDM_HP_BYPASS</name>
              <description>I2S TX PDM bypass hp filter or not. The option has been removed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PDM_SINC_OSR2</name>
              <description>I2S TX PDM OSR2 value</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PDM_PRESCALE</name>
              <description>I2S TX PDM prescale for sigmadelta</description>
              <bitOffset>5</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PDM_HP_IN_SHIFT</name>
              <description>I2S TX PDM sigmadelta scale shift number: 0:/2 , 1:x1 , 2:x2 , 3: x4</description>
              <bitOffset>13</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PDM_LP_IN_SHIFT</name>
              <description>I2S TX PDM sigmadelta scale shift number: 0:/2 , 1:x1 , 2:x2 , 3: x4</description>
              <bitOffset>15</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PDM_SINC_IN_SHIFT</name>
              <description>I2S TX PDM sigmadelta scale shift number: 0:/2 , 1:x1 , 2:x2 , 3: x4</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PDM_SIGMADELTA_IN_SHIFT</name>
              <description>I2S TX PDM sigmadelta scale shift number: 0:/2 , 1:x1 , 2:x2 , 3: x4</description>
              <bitOffset>19</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PDM_SIGMADELTA_DITHER2</name>
              <description>I2S TX PDM sigmadelta dither2 value</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PDM_SIGMADELTA_DITHER</name>
              <description>I2S TX PDM sigmadelta dither value</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PDM_DAC_2OUT_EN</name>
              <description>I2S TX PDM dac mode enable</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PDM_DAC_MODE_EN</name>
              <description>I2S TX PDM dac 2channel enable</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PCM2PDM_CONV_EN</name>
              <description>I2S TX PDM Converter enable</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_PCM2PDM_CONF1</name>
          <description>I2S TX PCM2PDM configuration register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <resetValue>0x03F783C0</resetValue>
          <fields>
            <field>
              <name>TX_PDM_FP</name>
              <description>I2S TX PDM Fp</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PDM_FS</name>
              <description>I2S TX PDM Fs</description>
              <bitOffset>10</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_IIR_HP_MULT12_5</name>
              <description>The fourth parameter of PDM TX IIR_HP filter stage 2 is (504 + I2S_TX_IIR_HP_MULT12_5[2:0])</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_IIR_HP_MULT12_0</name>
              <description>The fourth parameter of PDM TX IIR_HP filter stage 1 is (504 + I2S_TX_IIR_HP_MULT12_0[2:0])</description>
              <bitOffset>23</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_TDM_CTRL</name>
          <description>I2S TX TDM mode control register</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000FFFF</resetValue>
          <fields>
            <field>
              <name>RX_TDM_PDM_CHAN0_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM or PDM channel 0. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_PDM_CHAN1_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM or PDM channel 1. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_PDM_CHAN2_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM or PDM channel 2. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_PDM_CHAN3_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM or PDM channel 3. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_PDM_CHAN4_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM or PDM channel 4. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_PDM_CHAN5_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM or PDM channel 5. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_PDM_CHAN6_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM or PDM channel 6. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_PDM_CHAN7_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM or PDM channel 7. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_CHAN8_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM channel 8. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_CHAN9_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM channel 9. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_CHAN10_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM channel 10. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_CHAN11_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM channel 11. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_CHAN12_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM channel 12. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_CHAN13_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM channel 13. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_CHAN14_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM channel 14. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_CHAN15_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM channel 15. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TDM_TOT_CHAN_NUM</name>
              <description>The total channel number of I2S TX TDM mode.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_TDM_CTRL</name>
          <description>I2S TX TDM mode control register</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000FFFF</resetValue>
          <fields>
            <field>
              <name>TX_TDM_CHAN0_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 0. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN1_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 1. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN2_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 2. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN3_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 3. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN4_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 4. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN5_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 5. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN6_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 6. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN7_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 7. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN8_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 8. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN9_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 9. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN10_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 10. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN11_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 11. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN12_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 12. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN13_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 13. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN14_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 14. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_CHAN15_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 15. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_TOT_CHAN_NUM</name>
              <description>The total channel number of I2S TX TDM mode.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TDM_SKIP_MSK_EN</name>
              <description>When DMA TX buffer stores the data of (REG_TX_TDM_TOT_CHAN_NUM + 1)  channels, and only the data of the enabled channels is sent, then this bit should be set. Clear it when all the data stored in DMA TX buffer is for enabled channels.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_TIMING</name>
          <description>I2S RX timing control register</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RX_SD_IN_DM</name>
              <description>The delay mode of I2S Rx SD input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_SD1_IN_DM</name>
              <description>The delay mode of I2S Rx SD1 input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_SD2_IN_DM</name>
              <description>The delay mode of I2S Rx SD2 input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_SD3_IN_DM</name>
              <description>The delay mode of I2S Rx SD3 input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_WS_OUT_DM</name>
              <description>The delay mode of I2S Rx WS output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_BCK_OUT_DM</name>
              <description>The delay mode of I2S Rx BCK output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_WS_IN_DM</name>
              <description>The delay mode of I2S Rx WS input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_BCK_IN_DM</name>
              <description>The delay mode of I2S Rx BCK input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_TIMING</name>
          <description>I2S TX timing control register</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TX_SD_OUT_DM</name>
              <description>The delay mode of I2S TX SD output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_SD1_OUT_DM</name>
              <description>The delay mode of I2S TX SD1 output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_WS_OUT_DM</name>
              <description>The delay mode of I2S TX WS output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_BCK_OUT_DM</name>
              <description>The delay mode of I2S TX BCK output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_WS_IN_DM</name>
              <description>The delay mode of I2S TX WS input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_BCK_IN_DM</name>
              <description>The delay mode of I2S TX BCK input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LC_HUNG_CONF</name>
          <description>I2S HUNG configure register.</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000810</resetValue>
          <fields>
            <field>
              <name>LC_FIFO_TIMEOUT</name>
              <description>the i2s_tx_hung_int interrupt or the i2s_rx_hung_int interrupt will be triggered when fifo hung counter is equal to this value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LC_FIFO_TIMEOUT_SHIFT</name>
              <description>The bits are used to scale tick counter threshold. The tick counter is reset when counter value >= 88000/2^i2s_lc_fifo_timeout_shift</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LC_FIFO_TIMEOUT_ENA</name>
              <description>The enable bit for FIFO timeout</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXEOF_NUM</name>
          <description>I2S RX data number control register.</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000040</resetValue>
          <fields>
            <field>
              <name>RX_EOF_NUM</name>
              <description>The receive data bit length is (I2S_RX_BITS_MOD[4:0] + 1) * (REG_RX_EOF_NUM[11:0] + 1) . It will trigger in_suc_eof interrupt in the configured DMA RX channel.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONF_SIGLE_DATA</name>
          <description>I2S signal data register</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SINGLE_DATA</name>
              <description>The configured constant channel data to be sent out.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATE</name>
          <description>I2S TX status register</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>TX_IDLE</name>
              <description>1: i2s_tx is idle state. 0: i2s_tx is working.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>Version control register</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <resetValue>0x02009070</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>I2S version control register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>I2S1</name>
      <description>I2S (Inter-IC Sound) Controller</description>
      <groupName>I2S1</groupName>
      <baseAddress>0x6002D000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x54</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>I2S1</name>
        <value>26</value>
      </interrupt>
      <registers>
        <register>
          <name>I2S_INT_RAW</name>
          <description>I2S interrupt raw register, valid in level.</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>I2S_RX_DONE_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_rx_done_int interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>I2S_TX_DONE_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_tx_done_int interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>I2S_RX_HUNG_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_rx_hung_int interrupt</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>I2S_TX_HUNG_INT_RAW</name>
              <description>The raw interrupt status bit  for the i2s_tx_hung_int interrupt</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_INT_ST</name>
          <description>I2S interrupt status register.</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>I2S_RX_DONE_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_rx_done_int interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>I2S_TX_DONE_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_tx_done_int interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>I2S_RX_HUNG_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_rx_hung_int interrupt</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>I2S_TX_HUNG_INT_ST</name>
              <description>The masked interrupt status bit  for the i2s_tx_hung_int interrupt</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_INT_ENA</name>
          <description>I2S interrupt enable register.</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>I2S_RX_DONE_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_rx_done_int interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_DONE_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_tx_done_int interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_HUNG_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_rx_hung_int interrupt</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_HUNG_INT_ENA</name>
              <description>The interrupt enable bit  for the i2s_tx_hung_int interrupt</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_INT_CLR</name>
          <description>I2S interrupt clear register.</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>I2S_RX_DONE_INT_CLR</name>
              <description>Set this bit to clear the i2s_rx_done_int interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>I2S_TX_DONE_INT_CLR</name>
              <description>Set this bit to clear the i2s_tx_done_int interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>I2S_RX_HUNG_INT_CLR</name>
              <description>Set this bit to clear the i2s_rx_hung_int interrupt</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>I2S_TX_HUNG_INT_CLR</name>
              <description>Set this bit to clear the i2s_tx_hung_int interrupt</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_RX_CONF</name>
          <description>I2S RX configure register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <resetValue>0x00009600</resetValue>
          <fields>
            <field>
              <name>I2S_RX_RESET</name>
              <description>Set this bit to reset receiver</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>I2S_RX_FIFO_RESET</name>
              <description>Set this bit to reset Rx AFIFO</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>I2S_RX_START</name>
              <description>Set this bit to start receiving data</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_SLAVE_MOD</name>
              <description>Set this bit to enable slave receiver mode</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_MONO</name>
              <description>Set this bit to enable receiver  in mono mode</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_BIG_ENDIAN</name>
              <description>I2S Rx byte endian, 1: low addr value to high addr. 0: low addr with low addr value.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_UPDATE</name>
              <description>Set 1 to update I2S RX registers from APB clock domain to I2S RX clock domain. This bit will be cleared by hardware after update register done.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_MONO_FST_VLD</name>
              <description>1: The first channel data value is valid in I2S RX mono mode.   0: The second channel data value is valid in I2S RX mono mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_PCM_CONF</name>
              <description>I2S RX compress/decompress configuration bit. &amp; 0 (atol): A-Law decompress, 1 (ltoa) : A-Law compress, 2 (utol) : u-Law decompress, 3 (ltou) : u-Law compress. &amp;</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_PCM_BYPASS</name>
              <description>Set this bit to bypass Compress/Decompress module for received data.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_STOP_MODE</name>
              <description>0  : I2S Rx only stop when reg_rx_start is cleared.   1: Stop when reg_rx_start is 0 or in_suc_eof is 1.   2:  Stop I2S RX when reg_rx_start is 0 or RX FIFO is full.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_LEFT_ALIGN</name>
              <description>1: I2S RX left alignment mode. 0: I2S RX right alignment mode.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_24_FILL_EN</name>
              <description>1: store 24 channel bits to 32 bits. 0:store 24 channel bits to 24 bits.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_WS_IDLE_POL</name>
              <description>0: WS should be 0 when receiving left channel data, and WS is 1in right channel.  1: WS should be 1 when receiving left channel data, and WS is 0in right channel.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_BIT_ORDER</name>
              <description>I2S Rx bit endian. 1:small endian, the LSB is received first. 0:big endian, the MSB is received first.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_TDM_EN</name>
              <description>1: Enable I2S TDM Rx mode . 0: Disable.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_PDM_EN</name>
              <description>1: Enable I2S PDM Rx mode . 0: Disable.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_TX_CONF</name>
          <description>I2S TX configure register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000B200</resetValue>
          <fields>
            <field>
              <name>I2S_TX_RESET</name>
              <description>Set this bit to reset transmitter</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>I2S_TX_FIFO_RESET</name>
              <description>Set this bit to reset Tx AFIFO</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>I2S_TX_START</name>
              <description>Set this bit to start transmitting data</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_SLAVE_MOD</name>
              <description>Set this bit to enable slave transmitter mode</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_MONO</name>
              <description>Set this bit to enable transmitter in mono mode</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_CHAN_EQUAL</name>
              <description>1: The value of Left channel data is equal to the value of right channel data in I2S TX mono mode or TDM channel select mode. 0: The invalid channel data is reg_i2s_single_data in I2S TX mono mode or TDM channel select mode.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_BIG_ENDIAN</name>
              <description>I2S Tx byte endian, 1: low addr value to high addr.  0: low addr with low addr value.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_UPDATE</name>
              <description>Set 1 to update I2S TX registers from APB clock domain to I2S TX clock domain. This bit will be cleared by hardware after update register done.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_MONO_FST_VLD</name>
              <description>1: The first channel data value is valid in I2S TX mono mode.   0: The second channel data value is valid in I2S TX mono mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_PCM_CONF</name>
              <description>I2S TX compress/decompress configuration bit. &amp; 0 (atol): A-Law decompress, 1 (ltoa) : A-Law compress, 2 (utol) : u-Law decompress, 3 (ltou) : u-Law compress. &amp;</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_PCM_BYPASS</name>
              <description>Set this bit to bypass  Compress/Decompress module for transmitted data.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_STOP_EN</name>
              <description>Set this bit to stop disable output BCK signal and WS signal when tx FIFO is emtpy</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_LEFT_ALIGN</name>
              <description>1: I2S TX left alignment mode. 0: I2S TX right alignment mode.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_24_FILL_EN</name>
              <description>1: Sent 32 bits in 24 channel bits mode. 0: Sent 24 bits in 24 channel bits mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_WS_IDLE_POL</name>
              <description>0: WS should be 0 when sending left channel data, and WS is 1in right channel.  1: WS should be 1 when sending left channel data, and WS is 0in right channel.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_BIT_ORDER</name>
              <description>I2S Tx bit endian. 1:small endian, the LSB is sent first. 0:big endian, the MSB is sent first.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_TDM_EN</name>
              <description>1: Enable I2S TDM Tx mode . 0: Disable.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_PDM_EN</name>
              <description>1: Enable I2S PDM Tx mode . 0: Disable.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_CHAN_MOD</name>
              <description>I2S transmitter channel mode configuration bits.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_SIG_LOOPBACK</name>
              <description>Enable signal loop back mode with transmitter module and receiver module sharing the same WS and BCK signals.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_RX_CONF1</name>
          <description>I2S RX configure register 1</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <resetValue>0x2F3DE300</resetValue>
          <fields>
            <field>
              <name>I2S_RX_TDM_WS_WIDTH</name>
              <description>The width of rx_ws_out in TDM mode is (I2S_RX_TDM_WS_WIDTH[6:0] +1) * T_bck</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_BCK_DIV_NUM</name>
              <description>Bit clock configuration bits in receiver mode.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_BITS_MOD</name>
              <description>Set the bits to configure the valid data bit length of I2S receiver channel. 7: all the valid channel data is in 8-bit-mode. 15: all the valid channel data is in 16-bit-mode. 23: all the valid channel data is in 24-bit-mode. 31:all the valid channel data is in 32-bit-mode.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_HALF_SAMPLE_BITS</name>
              <description>I2S Rx half sample bits -1.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_TDM_CHAN_BITS</name>
              <description>The Rx bit number for each channel minus 1in TDM mode.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_MSB_SHIFT</name>
              <description>Set this bit to enable receiver in Phillips standard mode</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_TX_CONF1</name>
          <description>I2S TX configure register 1</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <resetValue>0x6F3DE300</resetValue>
          <fields>
            <field>
              <name>I2S_TX_TDM_WS_WIDTH</name>
              <description>The width of tx_ws_out in TDM mode is (I2S_TX_TDM_WS_WIDTH[6:0] +1) * T_bck</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_BCK_DIV_NUM</name>
              <description>Bit clock configuration bits in transmitter mode.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_BITS_MOD</name>
              <description>Set the bits to configure the valid data bit length of I2S transmitter channel. 7: all the valid channel data is in 8-bit-mode. 15: all the valid channel data is in 16-bit-mode. 23: all the valid channel data is in 24-bit-mode. 31:all the valid channel data is in 32-bit-mode.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_HALF_SAMPLE_BITS</name>
              <description>I2S Tx half sample bits -1.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_TDM_CHAN_BITS</name>
              <description>The Tx bit number for each channel minus 1in TDM mode.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_MSB_SHIFT</name>
              <description>Set this bit to enable transmitter in Phillips standard mode</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_BCK_NO_DLY</name>
              <description>1: BCK is not delayed to generate pos/neg edge in master mode. 0: BCK is delayed to generate pos/neg edge in master mode.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_RX_CLKM_CONF</name>
          <description>I2S RX clock configure register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000002</resetValue>
          <fields>
            <field>
              <name>I2S_RX_CLKM_DIV_NUM</name>
              <description>Integral I2S clock divider value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_CLK_ACTIVE</name>
              <description>I2S Rx module clock enable signal.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_CLK_SEL</name>
              <description>Select I2S Rx module source clock. 0: no clock. 1: APLL. 2: CLK160. 3: I2S_MCLK_in.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_MCLK_SEL</name>
              <description>0: UseI2S Tx module clock as I2S_MCLK_OUT.  1: UseI2S Rx module clock as I2S_MCLK_OUT.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_TX_CLKM_CONF</name>
          <description>I2S TX clock configure register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000002</resetValue>
          <fields>
            <field>
              <name>I2S_TX_CLKM_DIV_NUM</name>
              <description>Integral I2S TX clock divider value. f_I2S_CLK = f_I2S_CLK_S/(N+b/a). There will be (a-b) * n-div and b * (n+1)-div.  So the average combination will be:  for b &lt;= a/2, z * [x * n-div + (n+1)-div] + y * n-div. For b > a/2, z * [n-div + x * (n+1)-div] + y * (n+1)-div.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_CLK_ACTIVE</name>
              <description>I2S Tx module clock enable signal.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_CLK_SEL</name>
              <description>Select I2S Tx module source clock. 0: XTAL clock. 1: APLL. 2: CLK160. 3: I2S_MCLK_in.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_CLK_EN</name>
              <description>Set this bit to enable clk gate</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_RX_CLKM_DIV_CONF</name>
          <description>I2S RX module clock divider configure register</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000200</resetValue>
          <fields>
            <field>
              <name>I2S_RX_CLKM_DIV_Z</name>
              <description>For b &lt;= a/2, the value of I2S_RX_CLKM_DIV_Z is b. For b > a/2, the value of I2S_RX_CLKM_DIV_Z is (a-b).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_CLKM_DIV_Y</name>
              <description>For b &lt;= a/2, the value of I2S_RX_CLKM_DIV_Y is (a%b) . For b > a/2, the value of I2S_RX_CLKM_DIV_Y is (a%(a-b)).</description>
              <bitOffset>9</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_CLKM_DIV_X</name>
              <description>For b &lt;= a/2, the value of I2S_RX_CLKM_DIV_X is (a/b) - 1. For b > a/2, the value of I2S_RX_CLKM_DIV_X is (a/(a-b)) - 1.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_CLKM_DIV_YN1</name>
              <description>For b &lt;= a/2, the value of I2S_RX_CLKM_DIV_YN1 is 0 . For b > a/2, the value of I2S_RX_CLKM_DIV_YN1 is 1.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_TX_CLKM_DIV_CONF</name>
          <description>I2S TX module clock divider configure register</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000200</resetValue>
          <fields>
            <field>
              <name>I2S_TX_CLKM_DIV_Z</name>
              <description>For b &lt;= a/2, the value of I2S_TX_CLKM_DIV_Z is b. For b > a/2, the value of I2S_TX_CLKM_DIV_Z is (a-b).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_CLKM_DIV_Y</name>
              <description>For b &lt;= a/2, the value of I2S_TX_CLKM_DIV_Y is (a%b) . For b > a/2, the value of I2S_TX_CLKM_DIV_Y is (a%(a-b)).</description>
              <bitOffset>9</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_CLKM_DIV_X</name>
              <description>For b &lt;= a/2, the value of I2S_TX_CLKM_DIV_X is (a/b) - 1. For b > a/2, the value of I2S_TX_CLKM_DIV_X is (a/(a-b)) - 1.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_CLKM_DIV_YN1</name>
              <description>For b &lt;= a/2, the value of I2S_TX_CLKM_DIV_YN1 is 0 . For b > a/2, the value of I2S_TX_CLKM_DIV_YN1 is 1.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_RX_TDM_CTRL</name>
          <description>I2S TX TDM mode control register</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000FFFF</resetValue>
          <fields>
            <field>
              <name>I2S_RX_TDM_PDM_CHAN0_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM or PDM channel 0. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_TDM_PDM_CHAN1_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM or PDM channel 1. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_TDM_PDM_CHAN2_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM or PDM channel 2. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_TDM_PDM_CHAN3_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM or PDM channel 3. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_TDM_PDM_CHAN4_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM or PDM channel 4. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_TDM_PDM_CHAN5_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM or PDM channel 5. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_TDM_PDM_CHAN6_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM or PDM channel 6. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_TDM_PDM_CHAN7_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM or PDM channel 7. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_TDM_CHAN8_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM channel 8. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_TDM_CHAN9_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM channel 9. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_TDM_CHAN10_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM channel 10. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_TDM_CHAN11_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM channel 11. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_TDM_CHAN12_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM channel 12. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_TDM_CHAN13_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM channel 13. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_TDM_CHAN14_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM channel 14. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_TDM_CHAN15_EN</name>
              <description>1: Enable the valid data input of I2S RX TDM channel 15. 0:  Disable, just input 0 in this channel.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_TDM_TOT_CHAN_NUM</name>
              <description>The total channel number of I2S TX TDM mode.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_TX_TDM_CTRL</name>
          <description>I2S TX TDM mode control register</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000FFFF</resetValue>
          <fields>
            <field>
              <name>I2S_TX_TDM_CHAN0_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 0. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_TDM_CHAN1_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 1. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_TDM_CHAN2_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 2. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_TDM_CHAN3_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 3. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_TDM_CHAN4_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 4. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_TDM_CHAN5_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 5. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_TDM_CHAN6_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 6. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_TDM_CHAN7_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 7. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_TDM_CHAN8_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 8. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_TDM_CHAN9_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 9. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_TDM_CHAN10_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 10. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_TDM_CHAN11_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 11. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_TDM_CHAN12_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 12. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_TDM_CHAN13_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 13. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_TDM_CHAN14_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 14. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_TDM_CHAN15_EN</name>
              <description>1: Enable the valid data output of I2S TX TDM channel 15. 0:  Disable, just output 0 in this channel.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_TDM_TOT_CHAN_NUM</name>
              <description>The total channel number of I2S TX TDM mode.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_TDM_SKIP_MSK_EN</name>
              <description>When DMA TX buffer stores the data of (REG_TX_TDM_TOT_CHAN_NUM + 1)  channels, and only the data of the enabled channels is sent, then this bit should be set. Clear it when all the data stored in DMA TX buffer is for enabled channels.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_RX_TIMING</name>
          <description>I2S RX timing control register</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>I2S_RX_SD_IN_DM</name>
              <description>The delay mode of I2S Rx SD input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_WS_OUT_DM</name>
              <description>The delay mode of I2S Rx WS output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_BCK_OUT_DM</name>
              <description>The delay mode of I2S Rx BCK output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_WS_IN_DM</name>
              <description>The delay mode of I2S Rx WS input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_RX_BCK_IN_DM</name>
              <description>The delay mode of I2S Rx BCK input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_TX_TIMING</name>
          <description>I2S TX timing control register</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>I2S_TX_SD_OUT_DM</name>
              <description>The delay mode of I2S TX SD output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_SD1_OUT_DM</name>
              <description>The delay mode of I2S TX SD1 output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_WS_OUT_DM</name>
              <description>The delay mode of I2S TX WS output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_BCK_OUT_DM</name>
              <description>The delay mode of I2S TX BCK output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_WS_IN_DM</name>
              <description>The delay mode of I2S TX WS input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_TX_BCK_IN_DM</name>
              <description>The delay mode of I2S TX BCK input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_LC_HUNG_CONF</name>
          <description>I2S HUNG configure register.</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000810</resetValue>
          <fields>
            <field>
              <name>I2S_LC_FIFO_TIMEOUT</name>
              <description>the i2s_tx_hung_int interrupt or the i2s_rx_hung_int interrupt will be triggered when fifo hung counter is equal to this value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_LC_FIFO_TIMEOUT_SHIFT</name>
              <description>The bits are used to scale tick counter threshold. The tick counter is reset when counter value >= 88000/2^i2s_lc_fifo_timeout_shift</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S_LC_FIFO_TIMEOUT_ENA</name>
              <description>The enable bit for FIFO timeout</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_RXEOF_NUM</name>
          <description>I2S RX data number control register.</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000040</resetValue>
          <fields>
            <field>
              <name>I2S_RX_EOF_NUM</name>
              <description>The receive data bit length is (I2S_RX_BITS_MOD[4:0] + 1) * (REG_RX_EOF_NUM[11:0] + 1) . It will trigger in_suc_eof interrupt in the configured DMA RX channel.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_CONF_SIGLE_DATA</name>
          <description>I2S signal data register</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>I2S_SINGLE_DATA</name>
              <description>The configured constant channel data to be sent out.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_STATE</name>
          <description>I2S TX status register</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>I2S_TX_IDLE</name>
              <description>1: i2s_tx is idle state. 0: i2s_tx is working.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_DATE</name>
          <description>Version control register</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <resetValue>0x02009070</resetValue>
          <fields>
            <field>
              <name>I2S_DATE</name>
              <description>I2S version control register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>INTERRUPT_CORE0</name>
      <description>Interrupt Core</description>
      <groupName>INTERRUPT_CORE0</groupName>
      <baseAddress>0x600C2000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x1A4</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>WIFI_MAC</name>
        <value>0</value>
      </interrupt>
      <interrupt>
        <name>WIFI_NMI</name>
        <value>1</value>
      </interrupt>
      <interrupt>
        <name>WIFI_BB</name>
        <value>2</value>
      </interrupt>
      <interrupt>
        <name>BT_MAC</name>
        <value>3</value>
      </interrupt>
      <interrupt>
        <name>BT_BB</name>
        <value>4</value>
      </interrupt>
      <interrupt>
        <name>BT_BB_NMI</name>
        <value>5</value>
      </interrupt>
      <interrupt>
        <name>RWBT</name>
        <value>6</value>
      </interrupt>
      <interrupt>
        <name>RWBLE</name>
        <value>7</value>
      </interrupt>
      <interrupt>
        <name>RWBT_NMI</name>
        <value>8</value>
      </interrupt>
      <interrupt>
        <name>RWBLE_NMI</name>
        <value>9</value>
      </interrupt>
      <interrupt>
        <name>CORE_0_IRAM0_PMS_MONITOR_VIOLATE</name>
        <value>85</value>
      </interrupt>
      <interrupt>
        <name>CORE_0_DRAM0_PMS_MONITOR_VIOLATE</name>
        <value>86</value>
      </interrupt>
      <interrupt>
        <name>CORE_0_PIF_PMS_MONITOR_VIOLATE</name>
        <value>87</value>
      </interrupt>
      <interrupt>
        <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_SIZE</name>
        <value>88</value>
      </interrupt>
      <interrupt>
        <name>CACHE_CORE0_ACS</name>
        <value>94</value>
      </interrupt>
      <registers>
        <register>
          <name>PRO_MAC_INTR_MAP</name>
          <description>mac interrupt configuration register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>MAC_INTR_MAP</name>
              <description>this register used to map mac interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MAC_NMI_MAP</name>
          <description>mac_nmi interrupt configuration register</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>MAC_NMI_MAP</name>
              <description>this register used to map_nmi interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWR_INTR_MAP</name>
          <description>pwr interrupt configuration register</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>PWR_INTR_MAP</name>
              <description>this register used to map pwr interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BB_INT_MAP</name>
          <description>bb interrupt configuration register</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>BB_INT_MAP</name>
              <description>this register used to map bb interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BT_MAC_INT_MAP</name>
          <description>bb_mac interrupt configuration register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>BT_MAC_INT_MAP</name>
              <description>this register used to map bb_mac interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BT_BB_INT_MAP</name>
          <description>bt_bb interrupt configuration register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>BT_BB_INT_MAP</name>
              <description>this register used to map bt_bb interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BT_BB_NMI_MAP</name>
          <description>bt_bb_nmi interrupt configuration register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>BT_BB_NMI_MAP</name>
              <description>this register used to map bb_bt_nmi interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RWBT_IRQ_MAP</name>
          <description>rwbt_irq interrupt configuration register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>RWBT_IRQ_MAP</name>
              <description>this register used to map rwbt_irq interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RWBLE_IRQ_MAP</name>
          <description>rwble_irq interrupt configuration register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>RWBLE_IRQ_MAP</name>
              <description>this register used to map rwble_irq interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RWBT_NMI_MAP</name>
          <description>rwbt_nmi interrupt configuration register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>RWBT_NMI_MAP</name>
              <description>this register used to map mac rwbt_nmi to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RWBLE_NMI_MAP</name>
          <description>rwble_nmi interrupt configuration register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>RWBLE_NMI_MAP</name>
              <description>this register used to map rwble_nmi interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_MST_INT_MAP</name>
          <description>i2c_mst interrupt configuration register</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>I2C_MST_INT_MAP</name>
              <description>this register used to map i2c_mst interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLC0_INTR_MAP</name>
          <description>slc0 interrupt configuration register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SLC0_INTR_MAP</name>
              <description>this register used to map slc0 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLC1_INTR_MAP</name>
          <description>slc1 interrupt configuration register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SLC1_INTR_MAP</name>
              <description>this register used to map slc1 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UHCI0_INTR_MAP</name>
          <description>uhci0 interrupt configuration register</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>UHCI0_INTR_MAP</name>
              <description>this register used to map uhci0 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UHCI1_INTR_MAP</name>
          <description>uhci1 interrupt configuration register</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>UHCI1_INTR_MAP</name>
              <description>this register used to map uhci1 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_INTERRUPT_PRO_MAP</name>
          <description>gpio_interrupt_pro interrupt configuration register</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>GPIO_INTERRUPT_PRO_MAP</name>
              <description>this register used to map gpio_interrupt_pro interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_INTERRUPT_PRO_NMI_MAP</name>
          <description>gpio_interrupt_pro_nmi interrupt configuration register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>GPIO_INTERRUPT_PRO_NMI_MAP</name>
              <description>this register used to map gpio_interrupt_pro_nmi interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_INTERRUPT_APP_MAP</name>
          <description>gpio_interrupt_app interrupt configuration register</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>GPIO_INTERRUPT_APP_MAP</name>
              <description>this register used to map gpio_interrupt_app interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_INTERRUPT_APP_NMI_MAP</name>
          <description>gpio_interrupt_app_nmi interrupt configuration register</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>GPIO_INTERRUPT_APP_NMI_MAP</name>
              <description>this register used to map gpio_interrupt_app_nmi interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_INTR_1_MAP</name>
          <description>spi_intr_1 interrupt configuration register</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SPI_INTR_1_MAP</name>
              <description>this register used to map spi_intr_1 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_INTR_2_MAP</name>
          <description>spi_intr_2 interrupt configuration register</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SPI_INTR_2_MAP</name>
              <description>this register used to map spi_intr_2 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_INTR_3_MAP</name>
          <description>spi_intr_3 interrupt configuration register</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SPI_INTR_3_MAP</name>
              <description>this register used to map spi_intr_3 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_INTR_4_MAP</name>
          <description>spi_intr_4 interrupt configuration register</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SPI_INTR_4_MAP</name>
              <description>this register used to map spi_intr_4 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_CAM_INT_MAP</name>
          <description>lcd_cam interrupt configuration register</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>LCD_CAM_INT_MAP</name>
              <description>this register used to map lcd_cam interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S0_INT_MAP</name>
          <description>i2s0 interrupt configuration register</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>I2S0_INT_MAP</name>
              <description>this register used to map i2s0 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S1_INT_MAP</name>
          <description>i2s1 interrupt configuration register</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>I2S1_INT_MAP</name>
              <description>this register used to map i2s1 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_INTR_MAP</name>
          <description>uart interrupt configuration register</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>UART_INTR_MAP</name>
              <description>this register used to map uart interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART1_INTR_MAP</name>
          <description>uart1 interrupt configuration register</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>UART1_INTR_MAP</name>
              <description>this register used to map uart1 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART2_INTR_MAP</name>
          <description>uart2 interrupt configuration register</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>UART2_INTR_MAP</name>
              <description>this register used to map uart2 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDIO_HOST_INTERRUPT_MAP</name>
          <description>sdio_host interrupt configuration register</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SDIO_HOST_INTERRUPT_MAP</name>
              <description>this register used to map sdio_host interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM0_INTR_MAP</name>
          <description>pwm0 interrupt configuration register</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>PWM0_INTR_MAP</name>
              <description>this register used to map pwm0 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM1_INTR_MAP</name>
          <description>pwm1 interrupt configuration register</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>PWM1_INTR_MAP</name>
              <description>this register used to map pwm1 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM2_INTR_MAP</name>
          <description>pwm2 interrupt configuration register</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>PWM2_INTR_MAP</name>
              <description>this register used to map pwm2 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM3_INTR_MAP</name>
          <description>pwm3 interrupt configuration register</description>
          <addressOffset>0x88</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>PWM3_INTR_MAP</name>
              <description>this register used to map pwm3 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LEDC_INT_MAP</name>
          <description>ledc interrupt configuration register</description>
          <addressOffset>0x8C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>LEDC_INT_MAP</name>
              <description>this register used to map ledc interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EFUSE_INT_MAP</name>
          <description>efuse interrupt configuration register</description>
          <addressOffset>0x90</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>EFUSE_INT_MAP</name>
              <description>this register used to map efuse interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN_INT_MAP</name>
          <description>can interrupt configuration register</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CAN_INT_MAP</name>
              <description>this register used to map can interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USB_INTR_MAP</name>
          <description>usb interrupt configuration register</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>USB_INTR_MAP</name>
              <description>this register used to map usb interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_CORE_INTR_MAP</name>
          <description>rtc_core interrupt configuration register</description>
          <addressOffset>0x9C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>RTC_CORE_INTR_MAP</name>
              <description>this register used to map rtc_core interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RMT_INTR_MAP</name>
          <description>rmt interrupt configuration register</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>RMT_INTR_MAP</name>
              <description>this register used to map rmt interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PCNT_INTR_MAP</name>
          <description>pcnt interrupt configuration register</description>
          <addressOffset>0xA4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>PCNT_INTR_MAP</name>
              <description>this register used to map pcnt interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_EXT0_INTR_MAP</name>
          <description>i2c_ext0 interrupt configuration register</description>
          <addressOffset>0xA8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>I2C_EXT0_INTR_MAP</name>
              <description>this register used to map i2c_ext0 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_EXT1_INTR_MAP</name>
          <description>i2c_ext1 interrupt configuration register</description>
          <addressOffset>0xAC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>I2C_EXT1_INTR_MAP</name>
              <description>this register used to map i2c_ext1 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI2_DMA_INT_MAP</name>
          <description>spi2_dma interrupt configuration register</description>
          <addressOffset>0xB0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SPI2_DMA_INT_MAP</name>
              <description>this register used to map spi2_dma interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI3_DMA_INT_MAP</name>
          <description>spi3_dma interrupt configuration register</description>
          <addressOffset>0xB4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SPI3_DMA_INT_MAP</name>
              <description>this register used to map spi3_dma interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI4_DMA_INT_MAP</name>
          <description>spi4_dma interrupt configuration register</description>
          <addressOffset>0xB8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SPI4_DMA_INT_MAP</name>
              <description>this register used to map spi4_dma interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDG_INT_MAP</name>
          <description>wdg interrupt configuration register</description>
          <addressOffset>0xBC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>WDG_INT_MAP</name>
              <description>this register used to map wdg interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER_INT1_MAP</name>
          <description>timer_int1 interrupt configuration register</description>
          <addressOffset>0xC0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>TIMER_INT1_MAP</name>
              <description>this register used to map timer_int1 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER_INT2_MAP</name>
          <description>timer_int2 interrupt configuration register</description>
          <addressOffset>0xC4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>TIMER_INT2_MAP</name>
              <description>this register used to map timer_int2 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TG_T0_INT_MAP</name>
          <description>tg_t0 interrupt configuration register</description>
          <addressOffset>0xC8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>TG_T0_INT_MAP</name>
              <description>this register used to map tg_t0 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TG_T1_INT_MAP</name>
          <description>tg_t1 interrupt configuration register</description>
          <addressOffset>0xCC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>TG_T1_INT_MAP</name>
              <description>this register used to map tg_t1 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TG_WDT_INT_MAP</name>
          <description>tg_wdt interrupt configuration register</description>
          <addressOffset>0xD0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>TG_WDT_INT_MAP</name>
              <description>this register used to map rg_wdt interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TG1_T0_INT_MAP</name>
          <description>tg1_t0 interrupt configuration register</description>
          <addressOffset>0xD4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>TG1_T0_INT_MAP</name>
              <description>this register used to map tg1_t0 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TG1_T1_INT_MAP</name>
          <description>tg1_t1 interrupt configuration register</description>
          <addressOffset>0xD8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>TG1_T1_INT_MAP</name>
              <description>this register used to map tg1_t1 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TG1_WDT_INT_MAP</name>
          <description>tg1_wdt interrupt configuration register</description>
          <addressOffset>0xDC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>TG1_WDT_INT_MAP</name>
              <description>this register used to map tg1_wdt interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_IA_INT_MAP</name>
          <description>cache_ia interrupt configuration register</description>
          <addressOffset>0xE0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CACHE_IA_INT_MAP</name>
              <description>this register used to map cache_ia interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYSTIMER_TARGET0_INT_MAP</name>
          <description>systimer_target0 interrupt configuration register</description>
          <addressOffset>0xE4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SYSTIMER_TARGET0_INT_MAP</name>
              <description>this register used to map systimer_target0 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYSTIMER_TARGET1_INT_MAP</name>
          <description>systimer_target1 interrupt configuration register</description>
          <addressOffset>0xE8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SYSTIMER_TARGET1_INT_MAP</name>
              <description>this register used to map systimer_target1 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYSTIMER_TARGET2_INT_MAP</name>
          <description>systimer_target2 interrupt configuration register</description>
          <addressOffset>0xEC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SYSTIMER_TARGET2_INT_MAP</name>
              <description>this register used to map systimer_target2 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_MEM_REJECT_INTR_MAP</name>
          <description>spi_mem_reject interrupt configuration register</description>
          <addressOffset>0xF0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SPI_MEM_REJECT_INTR_MAP</name>
              <description>this register used to map spi_mem_reject interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_PRELOAD_INT_MAP</name>
          <description>dcache_prelaod interrupt configuration register</description>
          <addressOffset>0xF4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DCACHE_PRELOAD_INT_MAP</name>
              <description>this register used to map dcache_prelaod interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_PRELOAD_INT_MAP</name>
          <description>icache_preload interrupt configuration register</description>
          <addressOffset>0xF8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>ICACHE_PRELOAD_INT_MAP</name>
              <description>this register used to map icache_preload interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_SYNC_INT_MAP</name>
          <description>dcache_sync interrupt configuration register</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DCACHE_SYNC_INT_MAP</name>
              <description>this register used to map dcache_sync interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_SYNC_INT_MAP</name>
          <description>icache_sync interrupt configuration register</description>
          <addressOffset>0x100</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>ICACHE_SYNC_INT_MAP</name>
              <description>this register used to map icache_sync interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APB_ADC_INT_MAP</name>
          <description>apb_adc interrupt configuration register</description>
          <addressOffset>0x104</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>APB_ADC_INT_MAP</name>
              <description>this register used to map apb_adc interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_IN_CH0_INT_MAP</name>
          <description>dma_in_ch0 interrupt configuration register</description>
          <addressOffset>0x108</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DMA_IN_CH0_INT_MAP</name>
              <description>this register used to map dma_in_ch0 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_IN_CH1_INT_MAP</name>
          <description>dma_in_ch1 interrupt configuration register</description>
          <addressOffset>0x10C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DMA_IN_CH1_INT_MAP</name>
              <description>this register used to map dma_in_ch1 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_IN_CH2_INT_MAP</name>
          <description>dma_in_ch2 interrupt configuration register</description>
          <addressOffset>0x110</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DMA_IN_CH2_INT_MAP</name>
              <description>this register used to map dma_in_ch2 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_IN_CH3_INT_MAP</name>
          <description>dma_in_ch3 interrupt configuration register</description>
          <addressOffset>0x114</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DMA_IN_CH3_INT_MAP</name>
              <description>this register used to map dma_in_ch3 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_IN_CH4_INT_MAP</name>
          <description>dma_in_ch4 interrupt configuration register</description>
          <addressOffset>0x118</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DMA_IN_CH4_INT_MAP</name>
              <description>this register used to map dma_in_ch4 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_OUT_CH0_INT_MAP</name>
          <description>dma_out_ch0 interrupt configuration register</description>
          <addressOffset>0x11C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DMA_OUT_CH0_INT_MAP</name>
              <description>this register used to map dma_out_ch0 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_OUT_CH1_INT_MAP</name>
          <description>dma_out_ch1 interrupt configuration register</description>
          <addressOffset>0x120</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DMA_OUT_CH1_INT_MAP</name>
              <description>this register used to map dma_out_ch1 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_OUT_CH2_INT_MAP</name>
          <description>dma_out_ch2 interrupt configuration register</description>
          <addressOffset>0x124</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DMA_OUT_CH2_INT_MAP</name>
              <description>this register used to map dma_out_ch2 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_OUT_CH3_INT_MAP</name>
          <description>dma_out_ch3 interrupt configuration register</description>
          <addressOffset>0x128</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DMA_OUT_CH3_INT_MAP</name>
              <description>this register used to map dma_out_ch3 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_OUT_CH4_INT_MAP</name>
          <description>dma_out_ch4 interrupt configuration register</description>
          <addressOffset>0x12C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DMA_OUT_CH4_INT_MAP</name>
              <description>this register used to map dma_out_ch4 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RSA_INT_MAP</name>
          <description>rsa interrupt configuration register</description>
          <addressOffset>0x130</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>RSA_INT_MAP</name>
              <description>this register used to map rsa interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AES_INT_MAP</name>
          <description>aes interrupt configuration register</description>
          <addressOffset>0x134</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>AES_INT_MAP</name>
              <description>this register used to map aes interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SHA_INT_MAP</name>
          <description>sha interrupt configuration register</description>
          <addressOffset>0x138</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SHA_INT_MAP</name>
              <description>this register used to map sha interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INTR_FROM_CPU_0_MAP</name>
          <description>cpu_intr_from_cpu_0 interrupt configuration register</description>
          <addressOffset>0x13C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CPU_INTR_FROM_CPU_0_MAP</name>
              <description>this register used to map cpu_intr_from_cpu_0 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INTR_FROM_CPU_1_MAP</name>
          <description>cpu_intr_from_cpu_1 interrupt configuration register</description>
          <addressOffset>0x140</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CPU_INTR_FROM_CPU_1_MAP</name>
              <description>this register used to map cpu_intr_from_cpu_1 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INTR_FROM_CPU_2_MAP</name>
          <description>cpu_intr_from_cpu_2 interrupt configuration register</description>
          <addressOffset>0x144</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CPU_INTR_FROM_CPU_2_MAP</name>
              <description>this register used to map cpu_intr_from_cpu_2 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INTR_FROM_CPU_3_MAP</name>
          <description>cpu_intr_from_cpu_3 interrupt configuration register</description>
          <addressOffset>0x148</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CPU_INTR_FROM_CPU_3_MAP</name>
              <description>this register used to map cpu_intr_from_cpu_3 interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ASSIST_DEBUG_INTR_MAP</name>
          <description>assist_debug interrupt configuration register</description>
          <addressOffset>0x14C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>ASSIST_DEBUG_INTR_MAP</name>
              <description>this register used to map assist_debug interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR_MAP</name>
          <description>dma_pms_monitor_violatile interrupt configuration register</description>
          <addressOffset>0x150</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR_MAP</name>
              <description>this register used to map dma_pms_monitor_violatile interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR_MAP</name>
          <description>core0_IRam0_pms_monitor_violatile interrupt configuration register</description>
          <addressOffset>0x154</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR_MAP</name>
              <description>this register used to map core0_IRam0_pms_monitor_violatile interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR_MAP</name>
          <description>core0_DRam0_pms_monitor_violatile interrupt configuration register</description>
          <addressOffset>0x158</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR_MAP</name>
              <description>this register used to map core0_DRam0_pms_monitor_violatile interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR_MAP</name>
          <description>core0_PIF_pms_monitor_violatile interrupt configuration register</description>
          <addressOffset>0x15C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR_MAP</name>
              <description>this register used to map core0_PIF_pms_monitor_violatile interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_SIZE_INTR_MAP</name>
          <description>core0_PIF_pms_monitor_violatile_size interrupt configuration register</description>
          <addressOffset>0x160</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_SIZE_INTR_MAP</name>
              <description>this register used to map core0_PIF_pms_monitor_violatile_size interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_IRAM0_PMS_MONITOR_VIOLATE_INTR_MAP</name>
          <description>core1_IRam0_pms_monitor_violatile interrupt configuration register</description>
          <addressOffset>0x164</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CORE_1_IRAM0_PMS_MONITOR_VIOLATE_INTR_MAP</name>
              <description>this register used to map core1_IRam0_pms_monitor_violatile interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_DRAM0_PMS_MONITOR_VIOLATE_INTR_MAP</name>
          <description>core1_DRam0_pms_monitor_violatile interrupt configuration register</description>
          <addressOffset>0x168</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CORE_1_DRAM0_PMS_MONITOR_VIOLATE_INTR_MAP</name>
              <description>this register used to map core1_DRam0_pms_monitor_violatile interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_PIF_PMS_MONITOR_VIOLATE_INTR_MAP</name>
          <description>core1_PIF_pms_monitor_violatile interrupt configuration register</description>
          <addressOffset>0x16C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CORE_1_PIF_PMS_MONITOR_VIOLATE_INTR_MAP</name>
              <description>this register used to map core1_PIF_pms_monitor_violatile interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_PIF_PMS_MONITOR_VIOLATE_SIZE_INTR_MAP</name>
          <description>core1_PIF_pms_monitor_violatile_size interrupt configuration register</description>
          <addressOffset>0x170</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CORE_1_PIF_PMS_MONITOR_VIOLATE_SIZE_INTR_MAP</name>
              <description>this register used to map core1_PIF_pms_monitor_violatile_size interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BACKUP_PMS_VIOLATE_INTR_MAP</name>
          <description>backup_pms_monitor_violatile interrupt configuration register</description>
          <addressOffset>0x174</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>BACKUP_PMS_VIOLATE_INTR_MAP</name>
              <description>this register used to map backup_pms_monitor_violatile interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_CORE0_ACS_INT_MAP</name>
          <description>cache_core0_acs interrupt configuration register</description>
          <addressOffset>0x178</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CACHE_CORE0_ACS_INT_MAP</name>
              <description>this register used to map cache_core0_acs interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_CORE1_ACS_INT_MAP</name>
          <description>cache_core1_acs interrupt configuration register</description>
          <addressOffset>0x17C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CACHE_CORE1_ACS_INT_MAP</name>
              <description>this register used to map cache_core1_acs interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USB_DEVICE_INT_MAP</name>
          <description>usb_device interrupt configuration register</description>
          <addressOffset>0x180</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>USB_DEVICE_INT_MAP</name>
              <description>this register used to map usb_device interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_BACKUP_INT_MAP</name>
          <description>peri_backup interrupt configuration register</description>
          <addressOffset>0x184</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>PERI_BACKUP_INT_MAP</name>
              <description>this register used to map peri_backup interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_EXTMEM_REJECT_INT_MAP</name>
          <description>dma_extmem_reject interrupt configuration register</description>
          <addressOffset>0x188</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DMA_EXTMEM_REJECT_INT_MAP</name>
              <description>this register used to map dma_extmem_reject interrupt to one of core0's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_INTR_STATUS_0</name>
          <description>interrupt status register</description>
          <addressOffset>0x18C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INTR_STATUS_0</name>
              <description>this register store the status of the first 32 interrupt source</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_INTR_STATUS_1</name>
          <description>interrupt status register</description>
          <addressOffset>0x190</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INTR_STATUS_1</name>
              <description>this register store the status of the first 32 interrupt source</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_INTR_STATUS_2</name>
          <description>interrupt status register</description>
          <addressOffset>0x194</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INTR_STATUS_2</name>
              <description>this register store the status of the first 32 interrupt source</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_INTR_STATUS_3</name>
          <description>interrupt status register</description>
          <addressOffset>0x198</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INTR_STATUS_3</name>
              <description>this register store the status of the first 32 interrupt source</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLOCK_GATE</name>
          <description>clock gate register</description>
          <addressOffset>0x19C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>REG_CLK_EN</name>
              <description>this register uesd to control clock-gating interupt martrix</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>version register</description>
          <addressOffset>0x7FC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02012300</resetValue>
          <fields>
            <field>
              <name>INTERRUPT_REG_DATE</name>
              <description>version register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>INTERRUPT_CORE1</name>
      <description>Interrupt Core</description>
      <groupName>INTERRUPT_CORE1</groupName>
      <baseAddress>0x600C2800</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x1A4</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>CORE_1_IRAM0_PMS_MONITOR_VIOLATE</name>
        <value>89</value>
      </interrupt>
      <interrupt>
        <name>CORE_1_DRAM0_PMS_MONITOR_VIOLATE</name>
        <value>90</value>
      </interrupt>
      <interrupt>
        <name>CORE_1_PIF_PMS_MONITOR_VIOLATE</name>
        <value>91</value>
      </interrupt>
      <interrupt>
        <name>CORE_1_PIF_PMS_MONITOR_VIOLATE_SIZE</name>
        <value>92</value>
      </interrupt>
      <interrupt>
        <name>CACHE_CORE1_ACS</name>
        <value>95</value>
      </interrupt>
      <registers>
        <register>
          <name>APP_MAC_INTR_MAP</name>
          <description>mac interrupt configuration register</description>
          <addressOffset>0x800</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>MAC_INTR_MAP</name>
              <description>this register used to map mac interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MAC_NMI_MAP</name>
          <description>mac_nmi interrupt configuration register</description>
          <addressOffset>0x804</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>MAC_NMI_MAP</name>
              <description>this register used to map_nmi interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWR_INTR_MAP</name>
          <description>pwr interrupt configuration register</description>
          <addressOffset>0x808</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>PWR_INTR_MAP</name>
              <description>this register used to map pwr interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BB_INT_MAP</name>
          <description>bb interrupt configuration register</description>
          <addressOffset>0x80C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>BB_INT_MAP</name>
              <description>this register used to map bb interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BT_MAC_INT_MAP</name>
          <description>bb_mac interrupt configuration register</description>
          <addressOffset>0x810</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>BT_MAC_INT_MAP</name>
              <description>this register used to map bb_mac interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BT_BB_INT_MAP</name>
          <description>bt_bb interrupt configuration register</description>
          <addressOffset>0x814</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>BT_BB_INT_MAP</name>
              <description>this register used to map bt_bb interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BT_BB_NMI_MAP</name>
          <description>bt_bb_nmi interrupt configuration register</description>
          <addressOffset>0x818</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>BT_BB_NMI_MAP</name>
              <description>this register used to map bb_bt_nmi interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RWBT_IRQ_MAP</name>
          <description>rwbt_irq interrupt configuration register</description>
          <addressOffset>0x81C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>RWBT_IRQ_MAP</name>
              <description>this register used to map rwbt_irq interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RWBLE_IRQ_MAP</name>
          <description>rwble_irq interrupt configuration register</description>
          <addressOffset>0x820</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>RWBLE_IRQ_MAP</name>
              <description>this register used to map rwble_irq interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RWBT_NMI_MAP</name>
          <description>rwbt_nmi interrupt configuration register</description>
          <addressOffset>0x824</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>RWBT_NMI_MAP</name>
              <description>this register used to map rwbt_nmi interupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RWBLE_NMI_MAP</name>
          <description>rwble_nmi interrupt configuration register</description>
          <addressOffset>0x828</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>RWBLE_NMI_MAP</name>
              <description>this register used to map rwble_nmi interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_MST_INT_MAP</name>
          <description>i2c_mst interrupt configuration register</description>
          <addressOffset>0x82C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>I2C_MST_INT_MAP</name>
              <description>this register used to map i2c_mst interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLC0_INTR_MAP</name>
          <description>slc0 interrupt configuration register</description>
          <addressOffset>0x830</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SLC0_INTR_MAP</name>
              <description>this register used to map slc0 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLC1_INTR_MAP</name>
          <description>slc1 interrupt configuration register</description>
          <addressOffset>0x834</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SLC1_INTR_MAP</name>
              <description>this register used to map slc1 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UHCI0_INTR_MAP</name>
          <description>uhci0 interrupt configuration register</description>
          <addressOffset>0x838</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>UHCI0_INTR_MAP</name>
              <description>this register used to map uhci0 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UHCI1_INTR_MAP</name>
          <description>uhci1 interrupt configuration register</description>
          <addressOffset>0x83C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>UHCI1_INTR_MAP</name>
              <description>this register used to map uhci1 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_INTERRUPT_PRO_MAP</name>
          <description>gpio_interrupt_pro interrupt configuration register</description>
          <addressOffset>0x840</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>GPIO_INTERRUPT_PRO_MAP</name>
              <description>this register used to map gpio_interrupt_pro interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_INTERRUPT_PRO_NMI_MAP</name>
          <description>gpio_interrupt_pro_nmi interrupt configuration register</description>
          <addressOffset>0x844</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>GPIO_INTERRUPT_PRO_NMI_MAP</name>
              <description>this register used to map gpio_interrupt_pro_nmi interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_INTERRUPT_APP_MAP</name>
          <description>gpio_interrupt_app interrupt configuration register</description>
          <addressOffset>0x848</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>GPIO_INTERRUPT_APP_MAP</name>
              <description>this register used to map gpio_interrupt_app interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_INTERRUPT_APP_NMI_MAP</name>
          <description>gpio_interrupt_app_nmi interrupt configuration register</description>
          <addressOffset>0x84C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>GPIO_INTERRUPT_APP_NMI_MAP</name>
              <description>this register used to map gpio_interrupt_app_nmi interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_INTR_1_MAP</name>
          <description>spi_intr_1 interrupt configuration register</description>
          <addressOffset>0x850</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SPI_INTR_1_MAP</name>
              <description>this register used to map spi_intr_1 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_INTR_2_MAP</name>
          <description>spi_intr_2 interrupt configuration register</description>
          <addressOffset>0x854</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SPI_INTR_2_MAP</name>
              <description>this register used to map spi_intr_2 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_INTR_3_MAP</name>
          <description>spi_intr_3 interrupt configuration register</description>
          <addressOffset>0x858</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SPI_INTR_3_MAP</name>
              <description>this register used to map spi_intr_3 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_INTR_4_MAP</name>
          <description>spi_intr_4 interrupt configuration register</description>
          <addressOffset>0x85C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SPI_INTR_4_MAP</name>
              <description>this register used to map spi_intr_4 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_CAM_INT_MAP</name>
          <description>lcd_cam interrupt configuration register</description>
          <addressOffset>0x860</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>LCD_CAM_INT_MAP</name>
              <description>this register used to map lcd_cam interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S0_INT_MAP</name>
          <description>i2s0 interrupt configuration register</description>
          <addressOffset>0x864</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>I2S0_INT_MAP</name>
              <description>this register used to map i2s0 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S1_INT_MAP</name>
          <description>i2s1 interrupt configuration register</description>
          <addressOffset>0x868</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>I2S1_INT_MAP</name>
              <description>this register used to map i2s1 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_INTR_MAP</name>
          <description>uart interrupt configuration register</description>
          <addressOffset>0x86C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>UART_INTR_MAP</name>
              <description>this register used to map uart interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART1_INTR_MAP</name>
          <description>uart1 interrupt configuration register</description>
          <addressOffset>0x870</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>UART1_INTR_MAP</name>
              <description>this register used to map uart1 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART2_INTR_MAP</name>
          <description>uart2 interrupt configuration register</description>
          <addressOffset>0x874</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>UART2_INTR_MAP</name>
              <description>this register used to map uart2 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDIO_HOST_INTERRUPT_MAP</name>
          <description>sdio_host interrupt configuration register</description>
          <addressOffset>0x878</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SDIO_HOST_INTERRUPT_MAP</name>
              <description>this register used to map sdio_host interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM0_INTR_MAP</name>
          <description>pwm0 interrupt configuration register</description>
          <addressOffset>0x87C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>PWM0_INTR_MAP</name>
              <description>this register used to map pwm0 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM1_INTR_MAP</name>
          <description>pwm1 interrupt configuration register</description>
          <addressOffset>0x880</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>PWM1_INTR_MAP</name>
              <description>this register used to map pwm1 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM2_INTR_MAP</name>
          <description>pwm2 interrupt configuration register</description>
          <addressOffset>0x884</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>PWM2_INTR_MAP</name>
              <description>this register used to map pwm2 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM3_INTR_MAP</name>
          <description>pwm3 interrupt configuration register</description>
          <addressOffset>0x888</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>PWM3_INTR_MAP</name>
              <description>this register used to map pwm3 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LEDC_INT_MAP</name>
          <description>ledc interrupt configuration register</description>
          <addressOffset>0x88C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>LEDC_INT_MAP</name>
              <description>this register used to map ledc interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EFUSE_INT_MAP</name>
          <description>efuse interrupt configuration register</description>
          <addressOffset>0x890</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>EFUSE_INT_MAP</name>
              <description>this register used to map efuse interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAN_INT_MAP</name>
          <description>can interrupt configuration register</description>
          <addressOffset>0x894</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CAN_INT_MAP</name>
              <description>this register used to map can interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USB_INTR_MAP</name>
          <description>usb interrupt configuration register</description>
          <addressOffset>0x898</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>USB_INTR_MAP</name>
              <description>this register used to map usb interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_CORE_INTR_MAP</name>
          <description>rtc_core interrupt configuration register</description>
          <addressOffset>0x89C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>RTC_CORE_INTR_MAP</name>
              <description>this register used to map rtc_core interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RMT_INTR_MAP</name>
          <description>rmt interrupt configuration register</description>
          <addressOffset>0x8A0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>RMT_INTR_MAP</name>
              <description>this register used to map rmt interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PCNT_INTR_MAP</name>
          <description>pcnt interrupt configuration register</description>
          <addressOffset>0x8A4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>PCNT_INTR_MAP</name>
              <description>this register used to map pcnt interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_EXT0_INTR_MAP</name>
          <description>i2c_ext0 interrupt configuration register</description>
          <addressOffset>0x8A8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>I2C_EXT0_INTR_MAP</name>
              <description>this register used to map i2c_ext0 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_EXT1_INTR_MAP</name>
          <description>i2c_ext1 interrupt configuration register</description>
          <addressOffset>0x8AC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>I2C_EXT1_INTR_MAP</name>
              <description>this register used to map i2c_ext1 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI2_DMA_INT_MAP</name>
          <description>spi2_dma interrupt configuration register</description>
          <addressOffset>0x8B0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SPI2_DMA_INT_MAP</name>
              <description>this register used to map spi2_dma interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI3_DMA_INT_MAP</name>
          <description>spi3_dma interrupt configuration register</description>
          <addressOffset>0x8B4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SPI3_DMA_INT_MAP</name>
              <description>this register used to map spi3_dma interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI4_DMA_INT_MAP</name>
          <description>spi4_dma interrupt configuration register</description>
          <addressOffset>0x8B8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SPI4_DMA_INT_MAP</name>
              <description>this register used to map spi4_dma interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDG_INT_MAP</name>
          <description>wdg interrupt configuration register</description>
          <addressOffset>0x8BC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>WDG_INT_MAP</name>
              <description>this register used to map wdg interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER_INT1_MAP</name>
          <description>timer_int1 interrupt configuration register</description>
          <addressOffset>0x8C0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>TIMER_INT1_MAP</name>
              <description>this register used to map timer_int1 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER_INT2_MAP</name>
          <description>timer_int2 interrupt configuration register</description>
          <addressOffset>0x8C4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>TIMER_INT2_MAP</name>
              <description>this register used to map timer_int2 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TG_T0_INT_MAP</name>
          <description>tg_t0 interrupt configuration register</description>
          <addressOffset>0x8C8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>TG_T0_INT_MAP</name>
              <description>this register used to map tg_t0 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TG_T1_INT_MAP</name>
          <description>tg_t1 interrupt configuration register</description>
          <addressOffset>0x8CC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>TG_T1_INT_MAP</name>
              <description>this register used to map tg_t1 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TG_WDT_INT_MAP</name>
          <description>tg_wdt interrupt configuration register</description>
          <addressOffset>0x8D0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>TG_WDT_INT_MAP</name>
              <description>this register used to map rg_wdt interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TG1_T0_INT_MAP</name>
          <description>tg1_t0 interrupt configuration register</description>
          <addressOffset>0x8D4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>TG1_T0_INT_MAP</name>
              <description>this register used to map tg1_t0 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TG1_T1_INT_MAP</name>
          <description>tg1_t1 interrupt configuration register</description>
          <addressOffset>0x8D8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>TG1_T1_INT_MAP</name>
              <description>this register used to map tg1_t1 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TG1_WDT_INT_MAP</name>
          <description>tg1_wdt interrupt configuration register</description>
          <addressOffset>0x8DC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>TG1_WDT_INT_MAP</name>
              <description>this register used to map tg1_wdt interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_IA_INT_MAP</name>
          <description>cache_ia interrupt configuration register</description>
          <addressOffset>0x8E0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CACHE_IA_INT_MAP</name>
              <description>this register used to map cache_ia interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYSTIMER_TARGET0_INT_MAP</name>
          <description>systimer_target0 interrupt configuration register</description>
          <addressOffset>0x8E4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SYSTIMER_TARGET0_INT_MAP</name>
              <description>this register used to map systimer_target0 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYSTIMER_TARGET1_INT_MAP</name>
          <description>systimer_target1 interrupt configuration register</description>
          <addressOffset>0x8E8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SYSTIMER_TARGET1_INT_MAP</name>
              <description>this register used to map systimer_target1 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYSTIMER_TARGET2_INT_MAP</name>
          <description>systimer_target2 interrupt configuration register</description>
          <addressOffset>0x8EC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SYSTIMER_TARGET2_INT_MAP</name>
              <description>this register used to map systimer_target2 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_MEM_REJECT_INTR_MAP</name>
          <description>spi_mem_reject interrupt configuration register</description>
          <addressOffset>0x8F0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SPI_MEM_REJECT_INTR_MAP</name>
              <description>this register used to map spi_mem_reject interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_PRELOAD_INT_MAP</name>
          <description>dcache_prelaod interrupt configuration register</description>
          <addressOffset>0x8F4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DCACHE_PRELOAD_INT_MAP</name>
              <description>this register used to map dcache_prelaod interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_PRELOAD_INT_MAP</name>
          <description>icache_preload interrupt configuration register</description>
          <addressOffset>0x8F8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>ICACHE_PRELOAD_INT_MAP</name>
              <description>this register used to map icache_preload interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCACHE_SYNC_INT_MAP</name>
          <description>dcache_sync interrupt configuration register</description>
          <addressOffset>0x8FC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DCACHE_SYNC_INT_MAP</name>
              <description>this register used to map dcache_sync interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICACHE_SYNC_INT_MAP</name>
          <description>icache_sync interrupt configuration register</description>
          <addressOffset>0x900</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>ICACHE_SYNC_INT_MAP</name>
              <description>this register used to map icache_sync interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APB_ADC_INT_MAP</name>
          <description>apb_adc interrupt configuration register</description>
          <addressOffset>0x904</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>APB_ADC_INT_MAP</name>
              <description>this register used to map apb_adc interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_IN_CH0_INT_MAP</name>
          <description>dma_in_ch0 interrupt configuration register</description>
          <addressOffset>0x908</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DMA_IN_CH0_INT_MAP</name>
              <description>this register used to map dma_in_ch0 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_IN_CH1_INT_MAP</name>
          <description>dma_in_ch1 interrupt configuration register</description>
          <addressOffset>0x90C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DMA_IN_CH1_INT_MAP</name>
              <description>this register used to map dma_in_ch1 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_IN_CH2_INT_MAP</name>
          <description>dma_in_ch2 interrupt configuration register</description>
          <addressOffset>0x910</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DMA_IN_CH2_INT_MAP</name>
              <description>this register used to map dma_in_ch2 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_IN_CH3_INT_MAP</name>
          <description>dma_in_ch3 interrupt configuration register</description>
          <addressOffset>0x914</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DMA_IN_CH3_INT_MAP</name>
              <description>this register used to map dma_in_ch3 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_IN_CH4_INT_MAP</name>
          <description>dma_in_ch4 interrupt configuration register</description>
          <addressOffset>0x918</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DMA_IN_CH4_INT_MAP</name>
              <description>this register used to map dma_in_ch4 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_OUT_CH0_INT_MAP</name>
          <description>dma_out_ch0 interrupt configuration register</description>
          <addressOffset>0x91C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DMA_OUT_CH0_INT_MAP</name>
              <description>this register used to map dma_out_ch0 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_OUT_CH1_INT_MAP</name>
          <description>dma_out_ch1 interrupt configuration register</description>
          <addressOffset>0x920</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DMA_OUT_CH1_INT_MAP</name>
              <description>this register used to map dma_out_ch1 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_OUT_CH2_INT_MAP</name>
          <description>dma_out_ch2 interrupt configuration register</description>
          <addressOffset>0x924</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DMA_OUT_CH2_INT_MAP</name>
              <description>this register used to map dma_out_ch2 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_OUT_CH3_INT_MAP</name>
          <description>dma_out_ch3 interrupt configuration register</description>
          <addressOffset>0x928</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DMA_OUT_CH3_INT_MAP</name>
              <description>this register used to map dma_out_ch3 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_OUT_CH4_INT_MAP</name>
          <description>dma_out_ch4 interrupt configuration register</description>
          <addressOffset>0x92C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DMA_OUT_CH4_INT_MAP</name>
              <description>this register used to map dma_out_ch4 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RSA_INT_MAP</name>
          <description>rsa interrupt configuration register</description>
          <addressOffset>0x930</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>RSA_INT_MAP</name>
              <description>this register used to map rsa interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AES_INT_MAP</name>
          <description>aes interrupt configuration register</description>
          <addressOffset>0x934</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>AES_INT_MAP</name>
              <description>this register used to map aes interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SHA_INT_MAP</name>
          <description>sha interrupt configuration register</description>
          <addressOffset>0x938</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>SHA_INT_MAP</name>
              <description>this register used to map sha interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INTR_FROM_CPU_0_MAP</name>
          <description>cpu_intr_from_cpu_0 interrupt configuration register</description>
          <addressOffset>0x93C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CPU_INTR_FROM_CPU_0_MAP</name>
              <description>this register used to map cpu_intr_from_cpu_0 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INTR_FROM_CPU_1_MAP</name>
          <description>cpu_intr_from_cpu_1 interrupt configuration register</description>
          <addressOffset>0x940</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CPU_INTR_FROM_CPU_1_MAP</name>
              <description>this register used to map cpu_intr_from_cpu_1 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INTR_FROM_CPU_2_MAP</name>
          <description>cpu_intr_from_cpu_2 interrupt configuration register</description>
          <addressOffset>0x944</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CPU_INTR_FROM_CPU_2_MAP</name>
              <description>this register used to map cpu_intr_from_cpu_2 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INTR_FROM_CPU_3_MAP</name>
          <description>cpu_intr_from_cpu_3 interrupt configuration register</description>
          <addressOffset>0x948</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CPU_INTR_FROM_CPU_3_MAP</name>
              <description>this register used to map cpu_intr_from_cpu_3 interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ASSIST_DEBUG_INTR_MAP</name>
          <description>assist_debug interrupt configuration register</description>
          <addressOffset>0x94C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>ASSIST_DEBUG_INTR_MAP</name>
              <description>this register used to map assist_debug interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR_MAP</name>
          <description>dma_pms_monitor_violatile interrupt configuration register</description>
          <addressOffset>0x950</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR_MAP</name>
              <description>this register used to map dma_pms_monitor_violatile interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR_MAP</name>
          <description>core0_IRam0_pms_monitor_violatile interrupt configuration register</description>
          <addressOffset>0x954</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR_MAP</name>
              <description>this register used to map core0_IRam0_pms_monitor_violatile interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR_MAP</name>
          <description>core0_DRam0_pms_monitor_violatile interrupt configuration register</description>
          <addressOffset>0x958</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR_MAP</name>
              <description>this register used to map core0_DRam0_pms_monitor_violatile interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR_MAP</name>
          <description>core0_PIF_pms_monitor_violatile interrupt configuration register</description>
          <addressOffset>0x95C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR_MAP</name>
              <description>this register used to map core0_PIF_pms_monitor_violatile interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_SIZE_INTR_MAP</name>
          <description>core0_PIF_pms_monitor_violatile_size interrupt configuration register</description>
          <addressOffset>0x960</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_SIZE_INTR_MAP</name>
              <description>this register used to map core0_PIF_pms_monitor_violatile_size interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_IRAM0_PMS_MONITOR_VIOLATE_INTR_MAP</name>
          <description>core1_IRam0_pms_monitor_violatile interrupt configuration register</description>
          <addressOffset>0x964</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CORE_1_IRAM0_PMS_MONITOR_VIOLATE_INTR_MAP</name>
              <description>this register used to map core1_IRam0_pms_monitor_violatile interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_DRAM0_PMS_MONITOR_VIOLATE_INTR_MAP</name>
          <description>core1_DRam0_pms_monitor_violatile interrupt configuration register</description>
          <addressOffset>0x968</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CORE_1_DRAM0_PMS_MONITOR_VIOLATE_INTR_MAP</name>
              <description>this register used to map core1_DRam0_pms_monitor_violatile interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_PIF_PMS_MONITOR_VIOLATE_INTR_MAP</name>
          <description>core1_PIF_pms_monitor_violatile interrupt configuration register</description>
          <addressOffset>0x96C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CORE_1_PIF_PMS_MONITOR_VIOLATE_INTR_MAP</name>
              <description>this register used to map core1_PIF_pms_monitor_violatile interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_PIF_PMS_MONITOR_VIOLATE_SIZE_INTR_MAP</name>
          <description>core1_PIF_pms_monitor_violatile_size interrupt configuration register</description>
          <addressOffset>0x970</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CORE_1_PIF_PMS_MONITOR_VIOLATE_SIZE_INTR_MAP</name>
              <description>this register used to map core1_PIF_pms_monitor_violatile_size interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BACKUP_PMS_VIOLATE_INTR_MAP</name>
          <description>backup_pms_monitor_violatile interrupt configuration register</description>
          <addressOffset>0x974</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>BACKUP_PMS_VIOLATE_INTR_MAP</name>
              <description>this register used to map backup_pms_monitor_violatile interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_CORE0_ACS_INT_MAP</name>
          <description>cache_core0_acs interrupt configuration register</description>
          <addressOffset>0x978</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CACHE_CORE0_ACS_INT_MAP</name>
              <description>this register used to map cache_core0_acs interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_CORE1_ACS_INT_MAP</name>
          <description>cache_core1_acs interrupt configuration register</description>
          <addressOffset>0x97C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>CACHE_CORE1_ACS_INT_MAP</name>
              <description>this register used to map cache_core1_acs interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USB_DEVICE_INT_MAP</name>
          <description>usb_device interrupt configuration register</description>
          <addressOffset>0x980</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>USB_DEVICE_INT_MAP</name>
              <description>this register used to map usb_device interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PERI_BACKUP_INT_MAP</name>
          <description>peri_backup interrupt configuration register</description>
          <addressOffset>0x984</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>PERI_BACKUP_INT_MAP</name>
              <description>this register used to map peri_backup interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_EXTMEM_REJECT_INT_MAP</name>
          <description>dma_extmem_reject interrupt configuration register</description>
          <addressOffset>0x988</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>DMA_EXTMEM_REJECT_INT_MAP</name>
              <description>this register used to map dma_extmem_reject interrupt to one of core1's external interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APP_INTR_STATUS_0</name>
          <description>interrupt status register</description>
          <addressOffset>0x98C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INTR_STATUS_0</name>
              <description>this register store the status of the first 32 interrupt source</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APP_INTR_STATUS_1</name>
          <description>interrupt status register</description>
          <addressOffset>0x990</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INTR_STATUS_1</name>
              <description>this register store the status of the first 32 interrupt source</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APP_INTR_STATUS_2</name>
          <description>interrupt status register</description>
          <addressOffset>0x994</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INTR_STATUS_2</name>
              <description>this register store the status of the first 32 interrupt source</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APP_INTR_STATUS_3</name>
          <description>interrupt status register</description>
          <addressOffset>0x998</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INTR_STATUS_3</name>
              <description>this register store the status of the first 32 interrupt source</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLOCK_GATE</name>
          <description>clock gate register</description>
          <addressOffset>0x99C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>REG_CLK_EN</name>
              <description>this register uesd to control clock-gating interupt martrix</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>version register</description>
          <addressOffset>0xFFC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02012300</resetValue>
          <fields>
            <field>
              <name>INTERRUPT_DATE</name>
              <description>version register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>IO_MUX</name>
      <description>Input/Output Multiplexer</description>
      <groupName>IO_MUX</groupName>
      <baseAddress>0x60009000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xCC</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>PIN_CTRL</name>
          <description>Clock Output Configuration Register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x000007FF</resetValue>
          <fields>
            <field>
              <name>CLK_OUT1</name>
              <description>If you want to output clock for I2S to CLK_OUT_out1, set this register to 0x0. CLK_OUT_out1 can be found in peripheral output signals.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_OUT2</name>
              <description>If you want to output clock for I2S to CLK_OUT_out2, set this register to 0x0. CLK_OUT_out2 can be found in peripheral output signals.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_OUT3</name>
              <description>If you want to output clock for I2S to CLK_OUT_out3, set this register to 0x0. CLK_OUT_out3 can be found in peripheral output signals.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>49</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>GPIO%s</name>
          <description>IO MUX Configure Register for pad GPIO0</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000B00</resetValue>
          <fields>
            <field>
              <name>MCU_OE</name>
              <description>Output enable of the pad in sleep mode. 1: output enabled; 0: output disabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>Sleep mode selection of this pad. Set to 1 to put the pad in pad mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPD</name>
              <description>Pull-down enable of the pad in sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_WPU</name>
              <description>Pull-up enable of the pad during sleep mode. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_IE</name>
              <description>Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPD</name>
              <description>Pull-down enable of the pad. 1: internal pull-down enabled; 0: internal pull-down disabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_WPU</name>
              <description>Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_IE</name>
              <description>Input enable of the pad. 1: input enabled; 0: input disabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA; 1: ~10mA; 2: ~20mA; 3: ~40mA.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCU_SEL</name>
              <description>Select IO MUX function for this signal. 0: Select Function 1; 1: Select Function 2; etc.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN</name>
              <description>Enable filter for pin input signals. 1: Filter enabled; 2: Filter disabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>IO MUX Version Control Register</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <resetValue>0x01907160</resetValue>
          <fields>
            <field>
              <name>REG_DATE</name>
              <description>Version control register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>LCD_CAM</name>
      <description>Peripheral LCD_CAM</description>
      <groupName>LCD_CAM</groupName>
      <baseAddress>0x60041000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x48</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>LCD_CLOCK</name>
          <description>LCD clock register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000843</resetValue>
          <fields>
            <field>
              <name>LCD_CLKCNT_N</name>
              <description>f_LCD_PCLK = f_LCD_CLK / (reg_clkcnt_N + 1) when reg_clk_equ_sysclk is 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_CLK_EQU_SYSCLK</name>
              <description>1: f_LCD_PCLK = f_LCD_CLK. 0: f_LCD_PCLK = f_LCD_CLK / (reg_clkcnt_N + 1).</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_CK_IDLE_EDGE</name>
              <description>1: LCD_PCLK line is high when idle     0: LCD_PCLK line is low when idle.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_CK_OUT_EDGE</name>
              <description>1: LCD_PCLK high in first half clock cycle. 0: LCD_PCLK low in first half clock cycle.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_CLKM_DIV_NUM</name>
              <description>Integral LCD clock divider value</description>
              <bitOffset>9</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_CLKM_DIV_B</name>
              <description>Fractional clock divider numerator value</description>
              <bitOffset>17</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_CLKM_DIV_A</name>
              <description>Fractional clock divider denominator value</description>
              <bitOffset>23</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_CLK_SEL</name>
              <description>Select LCD module source clock. 0: no clock. 1: APLL. 2: CLK160. 3: no clock.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EN</name>
              <description>Set this bit to enable clk gate</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAM_CTRL</name>
          <description>Camera configuration register</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000800</resetValue>
          <fields>
            <field>
              <name>CAM_STOP_EN</name>
              <description>Camera stop enable signal, 1: camera stops when DMA Rx FIFO is full. 0: Not stop.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_VSYNC_FILTER_THRES</name>
              <description>Filter threshold value for CAM_VSYNC signal.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_UPDATE</name>
              <description>1: Update Camera registers, will be cleared by hardware. 0 : Not care.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_BYTE_ORDER</name>
              <description>1: Change data bit order, change CAM_DATA_in[7:0] to CAM_DATA_in[0:7] in one byte mode, and bits[15:0] to bits[0:15] in two byte mode.  0: Not change.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_BIT_ORDER</name>
              <description>1: invert data byte order, only valid in 2 byte mode. 0: Not change.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_LINE_INT_EN</name>
              <description>1: Enable to generate CAM_HS_INT. 0: Disable.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_VS_EOF_EN</name>
              <description>1: CAM_VSYNC to generate in_suc_eof. 0: in_suc_eof is controlled by reg_cam_rec_data_cyclelen.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_CLKM_DIV_NUM</name>
              <description>Integral Camera clock divider value</description>
              <bitOffset>9</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_CLKM_DIV_B</name>
              <description>Fractional clock divider numerator value</description>
              <bitOffset>17</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_CLKM_DIV_A</name>
              <description>Fractional clock divider denominator value</description>
              <bitOffset>23</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_CLK_SEL</name>
              <description>Select Camera module source clock. 0: no clock. 1: APLL. 2: CLK160. 3: no clock.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAM_CTRL1</name>
          <description>Camera configuration register</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CAM_REC_DATA_BYTELEN</name>
              <description>Camera receive data byte length minus 1 to set DMA in_suc_eof_int.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_LINE_INT_NUM</name>
              <description>The line number minus 1 to generate cam_hs_int.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_CLK_INV</name>
              <description>1: Invert  the input signal CAM_PCLK. 0: Not invert.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_VSYNC_FILTER_EN</name>
              <description>1: Enable CAM_VSYNC filter function. 0: bypass.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_2BYTE_EN</name>
              <description>1: The bit number of input data is 9~16.  0: The bit number of input data is 0~8.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_DE_INV</name>
              <description>CAM_DE invert enable signal, valid in high level.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_HSYNC_INV</name>
              <description>CAM_HSYNC invert enable signal, valid in high level.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_VSYNC_INV</name>
              <description>CAM_VSYNC invert enable signal, valid in high level.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_VH_DE_MODE_EN</name>
              <description>1: Input control signals are CAM_DE CAM_HSYNC and CAM_VSYNC is 1. 0: Input control signals are CAM_DE and CAM_VSYNC. CAM_HSYNC and CAM_DE are all 1 the the same time.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_START</name>
              <description>Camera module start signal.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_RESET</name>
              <description>Camera module reset signal.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CAM_AFIFO_RESET</name>
              <description>Camera AFIFO reset signal.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAM_RGB_YUV</name>
          <description>Camera configuration register</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00C00000</resetValue>
          <fields>
            <field>
              <name>CAM_CONV_8BITS_DATA_INV</name>
              <description>1:invert every two 8bits input data. 2. disabled.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_CONV_YUV2YUV_MODE</name>
              <description>0: to yuv422. 1: to yuv420. 2: to yuv411. 3: disabled.  To enable yuv2yuv mode, trans_mode must be set to 1.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_CONV_YUV_MODE</name>
              <description>0: yuv422. 1: yuv420. 2: yuv411. When in yuv2yuv mode, yuv_mode decides the yuv mode of Data_in</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_CONV_PROTOCOL_MODE</name>
              <description>0:BT601. 1:BT709.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_CONV_DATA_OUT_MODE</name>
              <description>LIMIT or FULL mode of Data out. 0: limit. 1: full</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_CONV_DATA_IN_MODE</name>
              <description>LIMIT or FULL mode of Data in. 0: limit. 1: full</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_CONV_MODE_8BITS_ON</name>
              <description>0: 16bits mode. 1: 8bits mode.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_CONV_TRANS_MODE</name>
              <description>0: YUV to RGB. 1: RGB to YUV.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_CONV_BYPASS</name>
              <description>0: Bypass converter. 1: Enable converter.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_RGB_YUV</name>
          <description>LCD configuration register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <resetValue>0x00C00000</resetValue>
          <fields>
            <field>
              <name>LCD_CONV_8BITS_DATA_INV</name>
              <description>1:invert every two 8bits input data. 2. disabled.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_CONV_TXTORX</name>
              <description>0: txtorx mode off. 1: txtorx mode on.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_CONV_YUV2YUV_MODE</name>
              <description>0: to yuv422. 1: to yuv420. 2: to yuv411. 3: disabled.  To enable yuv2yuv mode, trans_mode must be set to 1.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_CONV_YUV_MODE</name>
              <description>0: yuv422. 1: yuv420. 2: yuv411. When in yuv2yuv mode, yuv_mode decides the yuv mode of Data_in</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_CONV_PROTOCOL_MODE</name>
              <description>0:BT601. 1:BT709.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_CONV_DATA_OUT_MODE</name>
              <description>LIMIT or FULL mode of Data out. 0: limit. 1: full</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_CONV_DATA_IN_MODE</name>
              <description>LIMIT or FULL mode of Data in. 0: limit. 1: full</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_CONV_MODE_8BITS_ON</name>
              <description>0: 16bits mode. 1: 8bits mode.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_CONV_TRANS_MODE</name>
              <description>0: YUV to RGB. 1: RGB to YUV.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_CONV_BYPASS</name>
              <description>0: Bypass converter. 1: Enable converter.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_USER</name>
          <description>LCD configuration register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>LCD_DOUT_CYCLELEN</name>
              <description>The output data cycles minus 1 of LCD module.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_ALWAYS_OUT_EN</name>
              <description>LCD always output when LCD is in LCD_DOUT state, unless reg_lcd_start is cleared or reg_lcd_reset is set.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_8BITS_ORDER</name>
              <description>1: invert every two data byte, valid in 1 byte mode. 0: Not change.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_UPDATE</name>
              <description>1: Update LCD registers, will be cleared by hardware. 0 : Not care.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_BIT_ORDER</name>
              <description>1: Change data bit order, change LCD_DATA_out[7:0] to LCD_DATA_out[0:7] in one byte mode, and bits[15:0] to bits[0:15] in two byte mode.  0: Not change.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_BYTE_ORDER</name>
              <description>1: invert data byte order, only valid in 2 byte mode. 0: Not change.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_2BYTE_EN</name>
              <description>1: The bit number of output LCD data is 9~16.  0: The bit number of output LCD data is 0~8.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_DOUT</name>
              <description>1: Be able to send data out in LCD sequence when LCD starts. 0: Disable.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_DUMMY</name>
              <description>1: Enable DUMMY phase in LCD sequence when LCD starts. 0: Disable.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_CMD</name>
              <description>1: Be able to send command in LCD sequence when LCD starts. 0: Disable.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_START</name>
              <description>LCD start sending data enable signal, valid in high level.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_RESET</name>
              <description>The value of  command.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>LCD_DUMMY_CYCLELEN</name>
              <description>The dummy cycle length minus 1.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_CMD_2_CYCLE_EN</name>
              <description>The cycle length of command phase.  1: 2 cycles. 0: 1 cycle.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_MISC</name>
          <description>LCD configuration register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <resetValue>0x000000D6</resetValue>
          <fields>
            <field>
              <name>LCD_AFIFO_THRESHOLD_NUM</name>
              <description>The awfull threshold number of lcd_afifo.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_VFK_CYCLELEN</name>
              <description>The setup cycle length minus 1 in LCD non-RGB mode.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_VBK_CYCLELEN</name>
              <description>The vertical back blank region cycle length minus 1 in LCD RGB mode, or the hold time cycle length in LCD non-RGB mode.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_NEXT_FRAME_EN</name>
              <description>1: Send the next frame data when the current frame is sent out. 0: LCD stops when the current frame is sent out.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_BK_EN</name>
              <description>1: Enable blank region when LCD sends data out. 0: No blank region.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_AFIFO_RESET</name>
              <description>LCD AFIFO reset signal.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>LCD_CD_DATA_SET</name>
              <description>1: LCD_CD = !reg_cd_idle_edge when lcd_st[2:0] is in LCD_DOUT state.  0: LCD_CD = reg_cd_idle_edge.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_CD_DUMMY_SET</name>
              <description>1: LCD_CD = !reg_cd_idle_edge when lcd_st[2:0] is in LCD_DUMMY state.  0: LCD_CD = reg_cd_idle_edge.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_CD_CMD_SET</name>
              <description>1: LCD_CD = !reg_cd_idle_edge when lcd_st[2:0] is in LCD_CMD state.  0: LCD_CD = reg_cd_idle_edge.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_CD_IDLE_EDGE</name>
              <description>The default value of LCD_CD.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_CTRL</name>
          <description>LCD configuration register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LCD_HB_FRONT</name>
              <description>It is the horizontal blank front porch of a frame.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_VA_HEIGHT</name>
              <description>It is the vertical active height of a frame.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_VT_HEIGHT</name>
              <description>It is the vertical total height of a frame.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_RGB_MODE_EN</name>
              <description>1: Enable reg mode input vsync, hsync, de. 0: Disable.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_CTRL1</name>
          <description>LCD configuration register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LCD_VB_FRONT</name>
              <description>It is the vertical blank front porch of a frame.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_HA_WIDTH</name>
              <description>It is the horizontal active width of a frame.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_HT_WIDTH</name>
              <description>It is the horizontal total width of a frame.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_CTRL2</name>
          <description>LCD configuration register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <resetValue>0x00010001</resetValue>
          <fields>
            <field>
              <name>LCD_VSYNC_WIDTH</name>
              <description>It is the position of LCD_VSYNC active pulse in a line.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_VSYNC_IDLE_POL</name>
              <description>It is the idle value of LCD_VSYNC.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_DE_IDLE_POL</name>
              <description>It is the idle value of LCD_DE.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_HS_BLANK_EN</name>
              <description>1: The pulse of LCD_HSYNC is out in vertical blanking lines RGB mode. 0: LCD_HSYNC pulse is valid only in active region lines in RGB mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_HSYNC_WIDTH</name>
              <description>It is the position of LCD_HSYNC active pulse in a line.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_HSYNC_IDLE_POL</name>
              <description>It is the idle value of LCD_HSYNC.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_HSYNC_POSITION</name>
              <description>It is the position of LCD_HSYNC active pulse in a line.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_CMD_VAL</name>
          <description>LCD configuration register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LCD_CMD_VALUE</name>
              <description>The LCD write command value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_DLY_MODE</name>
          <description>LCD configuration register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LCD_CD_MODE</name>
              <description>The output LCD_CD is delayed by module clock LCD_CLK. 0: output without delayed. 1: delay by the positive edge of LCD_CLK. 2: delay by the negative edge of LCD_CLK.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_DE_MODE</name>
              <description>The output LCD_DE is delayed by module clock LCD_CLK. 0: output without delayed. 1: delay by the positive edge of LCD_CLK. 2: delay by the negative edge of LCD_CLK.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_HSYNC_MODE</name>
              <description>The output LCD_HSYNC is delayed by module clock LCD_CLK. 0: output without delayed. 1: delay by the positive edge of LCD_CLK. 2: delay by the negative edge of LCD_CLK.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_VSYNC_MODE</name>
              <description>The output LCD_VSYNC is delayed by module clock LCD_CLK. 0: output without delayed. 1: delay by the positive edge of LCD_CLK. 2: delay by the negative edge of LCD_CLK.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_DATA_DOUT_MODE</name>
          <description>LCD configuration register</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DOUT0_MODE</name>
              <description>The output data bit 0 is delayed by module clock LCD_CLK. 0: output without delayed. 1: delay by the positive edge of LCD_CLK. 2: delay by the negative edge of LCD_CLK.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT1_MODE</name>
              <description>The output data bit 2 is delayed by module clock LCD_CLK. 0: output without delayed. 1: delay by the positive edge of LCD_CLK. 2: delay by the negative edge of LCD_CLK.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT2_MODE</name>
              <description>The output data bit 4 is delayed by module clock LCD_CLK. 0: output without delayed. 1: delay by the positive edge of LCD_CLK. 2: delay by the negative edge of LCD_CLK.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT3_MODE</name>
              <description>The output data bit 6 is delayed by module clock LCD_CLK. 0: output without delayed. 1: delay by the positive edge of LCD_CLK. 2: delay by the negative edge of LCD_CLK.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT4_MODE</name>
              <description>The output data bit 8 is delayed by module clock LCD_CLK. 0: output without delayed. 1: delay by the positive edge of LCD_CLK. 2: delay by the negative edge of LCD_CLK.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT5_MODE</name>
              <description>The output data bit 10 is delayed by module clock LCD_CLK. 0: output without delayed. 1: delay by the positive edge of LCD_CLK. 2: delay by the negative edge of LCD_CLK.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT6_MODE</name>
              <description>The output data bit 12 is delayed by module clock LCD_CLK. 0: output without delayed. 1: delay by the positive edge of LCD_CLK. 2: delay by the negative edge of LCD_CLK.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT7_MODE</name>
              <description>The output data bit 14 is delayed by module clock LCD_CLK. 0: output without delayed. 1: delay by the positive edge of LCD_CLK. 2: delay by the negative edge of LCD_CLK.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT8_MODE</name>
              <description>The output data bit 16 is delayed by module clock LCD_CLK. 0: output without delayed. 1: delay by the positive edge of LCD_CLK. 2: delay by the negative edge of LCD_CLK.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT9_MODE</name>
              <description>The output data bit 18 is delayed by module clock LCD_CLK. 0: output without delayed. 1: delay by the positive edge of LCD_CLK. 2: delay by the negative edge of LCD_CLK.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT10_MODE</name>
              <description>The output data bit 20 is delayed by module clock LCD_CLK. 0: output without delayed. 1: delay by the positive edge of LCD_CLK. 2: delay by the negative edge of LCD_CLK.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT11_MODE</name>
              <description>The output data bit 22 is delayed by module clock LCD_CLK. 0: output without delayed. 1: delay by the positive edge of LCD_CLK. 2: delay by the negative edge of LCD_CLK.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT12_MODE</name>
              <description>The output data bit 24 is delayed by module clock LCD_CLK. 0: output without delayed. 1: delay by the positive edge of LCD_CLK. 2: delay by the negative edge of LCD_CLK.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT13_MODE</name>
              <description>The output data bit 26 is delayed by module clock LCD_CLK. 0: output without delayed. 1: delay by the positive edge of LCD_CLK. 2: delay by the negative edge of LCD_CLK.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT14_MODE</name>
              <description>The output data bit 28 is delayed by module clock LCD_CLK. 0: output without delayed. 1: delay by the positive edge of LCD_CLK. 2: delay by the negative edge of LCD_CLK.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT15_MODE</name>
              <description>The output data bit 30 is delayed by module clock LCD_CLK. 0: output without delayed. 1: delay by the positive edge of LCD_CLK. 2: delay by the negative edge of LCD_CLK.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LC_DMA_INT_ENA</name>
          <description>LCD_camera DMA inturrupt enable register</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LCD_VSYNC_INT_ENA</name>
              <description>The enable bit for LCD frame end interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_TRANS_DONE_INT_ENA</name>
              <description>The enable bit for lcd transfer end interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_VSYNC_INT_ENA</name>
              <description>The enable bit for Camera frame end interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAM_HS_INT_ENA</name>
              <description>The enable bit for Camera line interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LC_DMA_INT_RAW</name>
          <description>LCD_camera DMA raw inturrupt status register</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LCD_VSYNC_INT_RAW</name>
              <description>The raw bit for LCD frame end interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>LCD_TRANS_DONE_INT_RAW</name>
              <description>The raw bit for lcd transfer end interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CAM_VSYNC_INT_RAW</name>
              <description>The raw bit for Camera frame end interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CAM_HS_INT_RAW</name>
              <description>The raw bit for Camera line interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LC_DMA_INT_ST</name>
          <description>LCD_camera DMA masked inturrupt status register</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LCD_VSYNC_INT_ST</name>
              <description>The status bit for LCD frame end interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>LCD_TRANS_DONE_INT_ST</name>
              <description>The status bit for lcd transfer end interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CAM_VSYNC_INT_ST</name>
              <description>The status bit for Camera frame end interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CAM_HS_INT_ST</name>
              <description>The status bit for Camera transfer end interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LC_DMA_INT_CLR</name>
          <description>LCD_camera DMA inturrupt clear register</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LCD_VSYNC_INT_CLR</name>
              <description>The clear bit for LCD frame end interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>LCD_TRANS_DONE_INT_CLR</name>
              <description>The clear bit for lcd transfer end interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CAM_VSYNC_INT_CLR</name>
              <description>The clear bit for Camera frame end interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CAM_HS_INT_CLR</name>
              <description>The clear bit for Camera line interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LC_REG_DATE</name>
          <description>Version register</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02003020</resetValue>
          <fields>
            <field>
              <name>LC_DATE</name>
              <description>LCD_CAM version control register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>LEDC</name>
      <description>LED PWM (Pulse Width Modulation) Controller</description>
      <groupName>LEDC</groupName>
      <baseAddress>0x60019000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xD8</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>LEDC</name>
        <value>35</value>
      </interrupt>
      <registers>
        <register>
          <dim>8</dim>
          <dimIncrement>0x14</dimIncrement>
          <name>CH%s_CONF0</name>
          <description>Configuration register 0 for channel %s</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_SEL</name>
              <description>This field is used to select one of timers for channel %s.

0: select timer0

1: select timer1

2: select timer2

3: select timer3</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SIG_OUT_EN</name>
              <description>Set this bit to enable signal output on channel %s.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IDLE_LV</name>
              <description>This bit is used to control the output value when channel %s is inactive (when LEDC_SIG_OUT_EN_CH%s is 0).</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PARA_UP</name>
              <description>This bit is used to update LEDC_HPOINT_CH%s, LEDC_DUTY_START_CH%s, LEDC_SIG_OUT_EN_CH%s, LEDC_TIMER_SEL_CH%s, LEDC_DUTY_NUM_CH%s, LEDC_DUTY_CYCLE_CH%s, LEDC_DUTY_SCALE_CH%s, LEDC_DUTY_INC_CH%s, and LEDC_OVF_CNT_EN_CH%s fields for channel %s, and will be automatically cleared by hardware.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OVF_NUM</name>
              <description>This register is used to configure the maximum times of overflow minus 1.

The LEDC_OVF_CNT_CH%s_INT interrupt will be triggered when channel %s overflows for (LEDC_OVF_NUM_CH%s + 1) times.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OVF_CNT_EN</name>
              <description>This bit is used to enable the ovf_cnt of channel %s.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OVF_CNT_RESET</name>
              <description>Set this bit to reset the ovf_cnt of channel %s.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OVF_CNT_RESET_ST</name>
              <description>This is the status bit of LEDC_OVF_CNT_RESET_CH%s.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x14</dimIncrement>
          <name>CH%s_HPOINT</name>
          <description>High point register for channel %s</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>HPOINT</name>
              <description>The output value changes to high when the selected timers has reached the value specified by this register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x14</dimIncrement>
          <name>CH%s_DUTY</name>
          <description>Initial duty cycle for channel %s</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DUTY</name>
              <description>This register is used to change the output duty by controlling the Lpoint.

The output value turns to low when the selected timers has reached the Lpoint.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>19</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x14</dimIncrement>
          <name>CH%s_CONF1</name>
          <description>Configuration register 1 for channel %s</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <resetValue>0x40000000</resetValue>
          <fields>
            <field>
              <name>DUTY_SCALE</name>
              <description>This register is used to configure the changing step scale of duty on channel %s.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DUTY_CYCLE</name>
              <description>The duty will change every LEDC_DUTY_CYCLE_CH%s on channel %s.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DUTY_NUM</name>
              <description>This register is used to control the number of times the duty cycle will be changed.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DUTY_INC</name>
              <description>This register is used to increase or decrease the duty of output signal on channel %s. 1: Increase; 0: Decrease.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DUTY_START</name>
              <description>Other configured fields in LEDC_CH%s_CONF1_REG will start to take effect when this bit is set to 1.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>0x14</dimIncrement>
          <name>CH%s_DUTY_R</name>
          <description>Current duty cycle for channel %s</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DUTY_R</name>
              <description>This register stores the current duty of output signal on channel %s.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>19</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x8</dimIncrement>
          <name>TIMER%s_CONF</name>
          <description>Timer %s configuration</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00800000</resetValue>
          <fields>
            <field>
              <name>DUTY_RES</name>
              <description>This register is used to control the range of the counter in timer %s.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_DIV</name>
              <description>This register is used to configure the divisor for the divider in timer %s.

The least significant eight bits represent the fractional part.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PAUSE</name>
              <description>This bit is used to suspend the counter in timer %s.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RST</name>
              <description>This bit is used to reset timer %s. The counter will show 0 after reset.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TICK_SEL</name>
              <description>This bit is used to select clock for timer %s. When this bit is set to 1 LEDC_APB_CLK_SEL[1:0] should be 1, otherwise the timer clock may be not accurate.

1'h0: SLOW_CLK 1'h1: REF_TICK</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PARA_UP</name>
              <description>Set this bit to update LEDC_CLK_DIV_TIMER%s and LEDC_TIMER%s_DUTY_RES.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x8</dimIncrement>
          <name>TIMER%s_VALUE</name>
          <description>Timer %s current counter value</description>
          <addressOffset>0xA4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CNT</name>
              <description>This register stores the current counter value of timer %s.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW</name>
          <description>Raw interrupt status</description>
          <addressOffset>0xC0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER0_OVF_INT_RAW</name>
              <description>Triggered when the timer0 has reached its maximum counter value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER1_OVF_INT_RAW</name>
              <description>Triggered when the timer1 has reached its maximum counter value.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER2_OVF_INT_RAW</name>
              <description>Triggered when the timer2 has reached its maximum counter value.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER3_OVF_INT_RAW</name>
              <description>Triggered when the timer3 has reached its maximum counter value.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH0_INT_RAW</name>
              <description>Interrupt raw bit for channel 0. Triggered when the gradual change of duty has finished.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH1_INT_RAW</name>
              <description>Interrupt raw bit for channel 1. Triggered when the gradual change of duty has finished.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH2_INT_RAW</name>
              <description>Interrupt raw bit for channel 2. Triggered when the gradual change of duty has finished.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH3_INT_RAW</name>
              <description>Interrupt raw bit for channel 3. Triggered when the gradual change of duty has finished.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH4_INT_RAW</name>
              <description>Interrupt raw bit for channel 4. Triggered when the gradual change of duty has finished.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH5_INT_RAW</name>
              <description>Interrupt raw bit for channel 5. Triggered when the gradual change of duty has finished.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH6_INT_RAW</name>
              <description>Interrupt raw bit for channel 6. Triggered when the gradual change of duty has finished.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH7_INT_RAW</name>
              <description>Interrupt raw bit for channel 7. Triggered when the gradual change of duty has finished.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_CH0_INT_RAW</name>
              <description>Interrupt raw bit for channel 0. Triggered when the ovf_cnt has reached the value specified by LEDC_OVF_NUM_CH0.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_CH1_INT_RAW</name>
              <description>Interrupt raw bit for channel 1. Triggered when the ovf_cnt has reached the value specified by LEDC_OVF_NUM_CH1.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_CH2_INT_RAW</name>
              <description>Interrupt raw bit for channel 2. Triggered when the ovf_cnt has reached the value specified by LEDC_OVF_NUM_CH2.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_CH3_INT_RAW</name>
              <description>Interrupt raw bit for channel 3. Triggered when the ovf_cnt has reached the value specified by LEDC_OVF_NUM_CH3.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_CH4_INT_RAW</name>
              <description>Interrupt raw bit for channel 4. Triggered when the ovf_cnt has reached the value specified by LEDC_OVF_NUM_CH4.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_CH5_INT_RAW</name>
              <description>Interrupt raw bit for channel 5. Triggered when the ovf_cnt has reached the value specified by LEDC_OVF_NUM_CH5.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_CH6_INT_RAW</name>
              <description>Interrupt raw bit for channel 6. Triggered when the ovf_cnt has reached the value specified by LEDC_OVF_NUM_CH6.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_CH7_INT_RAW</name>
              <description>Interrupt raw bit for channel 7. Triggered when the ovf_cnt has reached the value specified by LEDC_OVF_NUM_CH7.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST</name>
          <description>Masked interrupt status</description>
          <addressOffset>0xC4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER0_OVF_INT_ST</name>
              <description>This is the masked interrupt status bit for the LEDC_TIMER0_OVF_INT interrupt when LEDC_TIMER0_OVF_INT_ENA is set to 1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER1_OVF_INT_ST</name>
              <description>This is the masked interrupt status bit for the LEDC_TIMER1_OVF_INT interrupt when LEDC_TIMER1_OVF_INT_ENA is set to 1.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER2_OVF_INT_ST</name>
              <description>This is the masked interrupt status bit for the LEDC_TIMER2_OVF_INT interrupt when LEDC_TIMER2_OVF_INT_ENA is set to 1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER3_OVF_INT_ST</name>
              <description>This is the masked interrupt status bit for the LEDC_TIMER3_OVF_INT interrupt when LEDC_TIMER3_OVF_INT_ENA is set to 1.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH0_INT_ST</name>
              <description>This is the masked interrupt status bit for the LEDC_DUTY_CHNG_END_CH0_INT interrupt when LEDC_DUTY_CHNG_END_CH0_INT_ENAIS set to 1.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH1_INT_ST</name>
              <description>This is the masked interrupt status bit for the LEDC_DUTY_CHNG_END_CH1_INT interrupt when LEDC_DUTY_CHNG_END_CH1_INT_ENAIS set to 1.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH2_INT_ST</name>
              <description>This is the masked interrupt status bit for the LEDC_DUTY_CHNG_END_CH2_INT interrupt when LEDC_DUTY_CHNG_END_CH2_INT_ENAIS set to 1.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH3_INT_ST</name>
              <description>This is the masked interrupt status bit for the LEDC_DUTY_CHNG_END_CH3_INT interrupt when LEDC_DUTY_CHNG_END_CH3_INT_ENAIS set to 1.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH4_INT_ST</name>
              <description>This is the masked interrupt status bit for the LEDC_DUTY_CHNG_END_CH4_INT interrupt when LEDC_DUTY_CHNG_END_CH4_INT_ENAIS set to 1.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH5_INT_ST</name>
              <description>This is the masked interrupt status bit for the LEDC_DUTY_CHNG_END_CH5_INT interrupt when LEDC_DUTY_CHNG_END_CH5_INT_ENAIS set to 1.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH6_INT_ST</name>
              <description>This is the masked interrupt status bit for the LEDC_DUTY_CHNG_END_CH6_INT interrupt when LEDC_DUTY_CHNG_END_CH6_INT_ENAIS set to 1.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH7_INT_ST</name>
              <description>This is the masked interrupt status bit for the LEDC_DUTY_CHNG_END_CH7_INT interrupt when LEDC_DUTY_CHNG_END_CH7_INT_ENAIS set to 1.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_CH0_INT_ST</name>
              <description>This is the masked interrupt status bit for the LEDC_OVF_CNT_CH0_INT interrupt when LEDC_OVF_CNT_CH0_INT_ENA is set to 1.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_CH1_INT_ST</name>
              <description>This is the masked interrupt status bit for the LEDC_OVF_CNT_CH1_INT interrupt when LEDC_OVF_CNT_CH1_INT_ENA is set to 1.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_CH2_INT_ST</name>
              <description>This is the masked interrupt status bit for the LEDC_OVF_CNT_CH2_INT interrupt when LEDC_OVF_CNT_CH2_INT_ENA is set to 1.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_CH3_INT_ST</name>
              <description>This is the masked interrupt status bit for the LEDC_OVF_CNT_CH3_INT interrupt when LEDC_OVF_CNT_CH3_INT_ENA is set to 1.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_CH4_INT_ST</name>
              <description>This is the masked interrupt status bit for the LEDC_OVF_CNT_CH4_INT interrupt when LEDC_OVF_CNT_CH4_INT_ENA is set to 1.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_CH5_INT_ST</name>
              <description>This is the masked interrupt status bit for the LEDC_OVF_CNT_CH5_INT interrupt when LEDC_OVF_CNT_CH5_INT_ENA is set to 1.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_CH6_INT_ST</name>
              <description>This is the masked interrupt status bit for the LEDC_OVF_CNT_CH6_INT interrupt when LEDC_OVF_CNT_CH6_INT_ENA is set to 1.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVF_CNT_CH7_INT_ST</name>
              <description>This is the masked interrupt status bit for the LEDC_OVF_CNT_CH7_INT interrupt when LEDC_OVF_CNT_CH7_INT_ENA is set to 1.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>Interrupt enable bits</description>
          <addressOffset>0xC8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER0_OVF_INT_ENA</name>
              <description>The interrupt enable bit for the LEDC_TIMER0_OVF_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER1_OVF_INT_ENA</name>
              <description>The interrupt enable bit for the LEDC_TIMER1_OVF_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER2_OVF_INT_ENA</name>
              <description>The interrupt enable bit for the LEDC_TIMER2_OVF_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER3_OVF_INT_ENA</name>
              <description>The interrupt enable bit for the LEDC_TIMER3_OVF_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH0_INT_ENA</name>
              <description>The interrupt enable bit for the LEDC_DUTY_CHNG_END_CH0_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH1_INT_ENA</name>
              <description>The interrupt enable bit for the LEDC_DUTY_CHNG_END_CH1_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH2_INT_ENA</name>
              <description>The interrupt enable bit for the LEDC_DUTY_CHNG_END_CH2_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH3_INT_ENA</name>
              <description>The interrupt enable bit for the LEDC_DUTY_CHNG_END_CH3_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH4_INT_ENA</name>
              <description>The interrupt enable bit for the LEDC_DUTY_CHNG_END_CH4_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH5_INT_ENA</name>
              <description>The interrupt enable bit for the LEDC_DUTY_CHNG_END_CH5_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH6_INT_ENA</name>
              <description>The interrupt enable bit for the LEDC_DUTY_CHNG_END_CH6_INT interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH7_INT_ENA</name>
              <description>The interrupt enable bit for the LEDC_DUTY_CHNG_END_CH7_INT interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OVF_CNT_CH0_INT_ENA</name>
              <description>The interrupt enable bit for the LEDC_OVF_CNT_CH0_INT interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OVF_CNT_CH1_INT_ENA</name>
              <description>The interrupt enable bit for the LEDC_OVF_CNT_CH1_INT interrupt.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OVF_CNT_CH2_INT_ENA</name>
              <description>The interrupt enable bit for the LEDC_OVF_CNT_CH2_INT interrupt.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OVF_CNT_CH3_INT_ENA</name>
              <description>The interrupt enable bit for the LEDC_OVF_CNT_CH3_INT interrupt.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OVF_CNT_CH4_INT_ENA</name>
              <description>The interrupt enable bit for the LEDC_OVF_CNT_CH4_INT interrupt.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OVF_CNT_CH5_INT_ENA</name>
              <description>The interrupt enable bit for the LEDC_OVF_CNT_CH5_INT interrupt.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OVF_CNT_CH6_INT_ENA</name>
              <description>The interrupt enable bit for the LEDC_OVF_CNT_CH6_INT interrupt.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OVF_CNT_CH7_INT_ENA</name>
              <description>The interrupt enable bit for the LEDC_OVF_CNT_CH7_INT interrupt.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>Interrupt clear bits</description>
          <addressOffset>0xCC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER0_OVF_INT_CLR</name>
              <description>Set this bit to clear the LEDC_TIMER0_OVF_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TIMER1_OVF_INT_CLR</name>
              <description>Set this bit to clear the LEDC_TIMER1_OVF_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TIMER2_OVF_INT_CLR</name>
              <description>Set this bit to clear the LEDC_TIMER2_OVF_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TIMER3_OVF_INT_CLR</name>
              <description>Set this bit to clear the LEDC_TIMER3_OVF_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH0_INT_CLR</name>
              <description>Set this bit to clear the LEDC_DUTY_CHNG_END_CH0_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH1_INT_CLR</name>
              <description>Set this bit to clear the LEDC_DUTY_CHNG_END_CH1_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH2_INT_CLR</name>
              <description>Set this bit to clear the LEDC_DUTY_CHNG_END_CH2_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH3_INT_CLR</name>
              <description>Set this bit to clear the LEDC_DUTY_CHNG_END_CH3_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH4_INT_CLR</name>
              <description>Set this bit to clear the LEDC_DUTY_CHNG_END_CH4_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH5_INT_CLR</name>
              <description>Set this bit to clear the LEDC_DUTY_CHNG_END_CH5_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH6_INT_CLR</name>
              <description>Set this bit to clear the LEDC_DUTY_CHNG_END_CH6_INT interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DUTY_CHNG_END_CH7_INT_CLR</name>
              <description>Set this bit to clear the LEDC_DUTY_CHNG_END_CH7_INT interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OVF_CNT_CH0_INT_CLR</name>
              <description>Set this bit to clear the LEDC_OVF_CNT_CH0_INT interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OVF_CNT_CH1_INT_CLR</name>
              <description>Set this bit to clear the LEDC_OVF_CNT_CH1_INT interrupt.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OVF_CNT_CH2_INT_CLR</name>
              <description>Set this bit to clear the LEDC_OVF_CNT_CH2_INT interrupt.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OVF_CNT_CH3_INT_CLR</name>
              <description>Set this bit to clear the LEDC_OVF_CNT_CH3_INT interrupt.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OVF_CNT_CH4_INT_CLR</name>
              <description>Set this bit to clear the LEDC_OVF_CNT_CH4_INT interrupt.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OVF_CNT_CH5_INT_CLR</name>
              <description>Set this bit to clear the LEDC_OVF_CNT_CH5_INT interrupt.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OVF_CNT_CH6_INT_CLR</name>
              <description>Set this bit to clear the LEDC_OVF_CNT_CH6_INT interrupt.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OVF_CNT_CH7_INT_CLR</name>
              <description>Set this bit to clear the LEDC_OVF_CNT_CH7_INT interrupt.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONF</name>
          <description>Global ledc configuration register</description>
          <addressOffset>0xD0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>APB_CLK_SEL</name>
              <description>This bit is used to select clock source for the 4 timers .

2'd1: APB_CLK 2'd2: RTC8M_CLK 2'd3: XTAL_CLK</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EN</name>
              <description>This bit is used to control clock.

1'b1: Force clock on for register. 1'h0: Support clock only when application writes registers.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>Version control register</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <resetValue>0x19040200</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>This is the version control register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PCNT</name>
      <description>Pulse Count Controller</description>
      <groupName>PCNT</groupName>
      <baseAddress>0x60017000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x68</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>PCNT</name>
        <value>41</value>
      </interrupt>
      <registers>
        <register>
          <dim>4</dim>
          <dimIncrement>0xC</dimIncrement>
          <name>U%s_CONF0</name>
          <description>Configuration register 0 for unit %s</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00003C10</resetValue>
          <fields>
            <field>
              <name>FILTER_THRES_U</name>
              <description>This sets the maximum threshold, in APB_CLK cycles, for the filter.

Any pulses with width less than this will be ignored when the filter is enabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTER_EN_U</name>
              <description>This is the enable bit for unit %s's input filter.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>THR_ZERO_EN_U</name>
              <description>This is the enable bit for unit %s's zero comparator.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>THR_H_LIM_EN_U</name>
              <description>This is the enable bit for unit %s's thr_h_lim comparator.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>THR_L_LIM_EN_U</name>
              <description>This is the enable bit for unit %s's thr_l_lim comparator.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>THR_THRES0_EN_U</name>
              <description>This is the enable bit for unit %s's thres0 comparator.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>THR_THRES1_EN_U</name>
              <description>This is the enable bit for unit %s's thres1 comparator.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CH0_NEG_MODE_U</name>
              <description>This register sets the behavior when the signal input of channel 0 detects a negative edge.

1: Increase the counter;2: Decrease the counter;0, 3: No effect on counter</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CH0_POS_MODE_U</name>
              <description>This register sets the behavior when the signal input of channel 0 detects a positive edge.

1: Increase the counter;2: Decrease the counter;0, 3: No effect on counter</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CH0_HCTRL_MODE_U</name>
              <description>This register configures how the CH%s_POS_MODE/CH%s_NEG_MODE settings will be modified when the control signal is high.

0: No modification;1: Invert behavior (increase -> decrease, decrease -> increase);2, 3: Inhibit counter modification</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CH0_LCTRL_MODE_U</name>
              <description>This register configures how the CH%s_POS_MODE/CH%s_NEG_MODE settings will be modified when the control signal is low.

0: No modification;1: Invert behavior (increase -> decrease, decrease -> increase);2, 3: Inhibit counter modification</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CH1_NEG_MODE_U</name>
              <description>This register sets the behavior when the signal input of channel 1 detects a negative edge.

1: Increment the counter;2: Decrement the counter;0, 3: No effect on counter</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CH1_POS_MODE_U</name>
              <description>This register sets the behavior when the signal input of channel 1 detects a positive edge.

1: Increment the counter;2: Decrement the counter;0, 3: No effect on counter</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CH1_HCTRL_MODE_U</name>
              <description>This register configures how the CH%s_POS_MODE/CH%s_NEG_MODE settings will be modified when the control signal is high.

0: No modification;1: Invert behavior (increase -> decrease, decrease -> increase);2, 3: Inhibit counter modification</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CH1_LCTRL_MODE_U</name>
              <description>This register configures how the CH%s_POS_MODE/CH%s_NEG_MODE settings will be modified when the control signal is low.

0: No modification;1: Invert behavior (increase -> decrease, decrease -> increase);2, 3: Inhibit counter modification</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0xC</dimIncrement>
          <name>U%s_CONF1</name>
          <description>Configuration register 1 for unit %s</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CNT_THRES0_U</name>
              <description>This register is used to configure the thres0 value for unit %s.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CNT_THRES1_U</name>
              <description>This register is used to configure the thres1 value for unit %s.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0xC</dimIncrement>
          <name>U%s_CONF2</name>
          <description>Configuration register 2 for unit %s</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CNT_H_LIM_U</name>
              <description>This register is used to configure the thr_h_lim value for unit %s.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CNT_L_LIM_U</name>
              <description>This register is used to configure the thr_l_lim value for unit %s.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>U%s_CNT</name>
          <description>Counter value for unit %s</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PULSE_CNT_U</name>
              <description>This register stores the current pulse count value for unit %s.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW</name>
          <description>Interrupt raw status register</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CNT_THR_EVENT_U0_INT_RAW</name>
              <description>The raw interrupt status bit for the PCNT_CNT_THR_EVENT_U0_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CNT_THR_EVENT_U1_INT_RAW</name>
              <description>The raw interrupt status bit for the PCNT_CNT_THR_EVENT_U1_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CNT_THR_EVENT_U2_INT_RAW</name>
              <description>The raw interrupt status bit for the PCNT_CNT_THR_EVENT_U2_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CNT_THR_EVENT_U3_INT_RAW</name>
              <description>The raw interrupt status bit for the PCNT_CNT_THR_EVENT_U3_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST</name>
          <description>Interrupt status register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CNT_THR_EVENT_U0_INT_ST</name>
              <description>The masked interrupt status bit for the PCNT_CNT_THR_EVENT_U0_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CNT_THR_EVENT_U1_INT_ST</name>
              <description>The masked interrupt status bit for the PCNT_CNT_THR_EVENT_U1_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CNT_THR_EVENT_U2_INT_ST</name>
              <description>The masked interrupt status bit for the PCNT_CNT_THR_EVENT_U2_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CNT_THR_EVENT_U3_INT_ST</name>
              <description>The masked interrupt status bit for the PCNT_CNT_THR_EVENT_U3_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>Interrupt enable register</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CNT_THR_EVENT_U0_INT_ENA</name>
              <description>The interrupt enable bit for the PCNT_CNT_THR_EVENT_U0_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CNT_THR_EVENT_U1_INT_ENA</name>
              <description>The interrupt enable bit for the PCNT_CNT_THR_EVENT_U1_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CNT_THR_EVENT_U2_INT_ENA</name>
              <description>The interrupt enable bit for the PCNT_CNT_THR_EVENT_U2_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CNT_THR_EVENT_U3_INT_ENA</name>
              <description>The interrupt enable bit for the PCNT_CNT_THR_EVENT_U3_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>Interrupt clear register</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CNT_THR_EVENT_U0_INT_CLR</name>
              <description>Set this bit to clear the PCNT_CNT_THR_EVENT_U0_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CNT_THR_EVENT_U1_INT_CLR</name>
              <description>Set this bit to clear the PCNT_CNT_THR_EVENT_U1_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CNT_THR_EVENT_U2_INT_CLR</name>
              <description>Set this bit to clear the PCNT_CNT_THR_EVENT_U2_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CNT_THR_EVENT_U3_INT_CLR</name>
              <description>Set this bit to clear the PCNT_CNT_THR_EVENT_U3_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>U%s_STATUS</name>
          <description>PNCT UNIT%s status register</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CNT_THR_ZERO_MODE_U</name>
              <description>The pulse counter status of PCNT_U%s corresponding to 0. 0: pulse counter decreases from positive to 0. 1: pulse counter increases from negative to 0. 2: pulse counter is negative. 3: pulse counter is positive.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CNT_THR_THRES1_LAT_U</name>
              <description>The latched value of thres1 event of PCNT_U%s when threshold event interrupt is valid. 1: the current pulse counter equals to thres1 and thres1 event is valid. 0: others</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CNT_THR_THRES0_LAT_U</name>
              <description>The latched value of thres0 event of PCNT_U%s when threshold event interrupt is valid. 1: the current pulse counter equals to thres0 and thres0 event is valid. 0: others</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CNT_THR_L_LIM_LAT_U</name>
              <description>The latched value of low limit event of PCNT_U%s when threshold event interrupt is valid. 1: the current pulse counter equals to thr_l_lim and low limit event is valid. 0: others</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CNT_THR_H_LIM_LAT_U</name>
              <description>The latched value of high limit event of PCNT_U%s when threshold event interrupt is valid. 1: the current pulse counter equals to thr_h_lim and high limit event is valid. 0: others</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CNT_THR_ZERO_LAT_U</name>
              <description>The latched value of zero threshold event of PCNT_U%s when threshold event interrupt is valid. 1: the current pulse counter equals to 0 and zero threshold event is valid. 0: others</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTRL</name>
          <description>Control register for all counters</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>PULSE_CNT_RST_U0</name>
              <description>Set this bit to clear unit 0's counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CNT_PAUSE_U0</name>
              <description>Set this bit to freeze unit 0's counter.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PULSE_CNT_RST_U1</name>
              <description>Set this bit to clear unit 1's counter.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CNT_PAUSE_U1</name>
              <description>Set this bit to freeze unit 1's counter.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PULSE_CNT_RST_U2</name>
              <description>Set this bit to clear unit 2's counter.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CNT_PAUSE_U2</name>
              <description>Set this bit to freeze unit 2's counter.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PULSE_CNT_RST_U3</name>
              <description>Set this bit to clear unit 3's counter.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CNT_PAUSE_U3</name>
              <description>Set this bit to freeze unit 3's counter.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EN</name>
              <description>The registers clock gate enable signal of PCNT module. 1: the registers can be read and written by application. 0: the registers can not be read or written by application</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>PCNT version control register</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <resetValue>0x19072601</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>This is the PCNT version control register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PERI_BACKUP</name>
      <description>Peripheral PERI_BACKUP</description>
      <groupName>PERI_BACKUP</groupName>
      <baseAddress>0x6002A000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x30</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>PERI_BACKUP</name>
        <value>97</value>
      </interrupt>
      <registers>
        <register>
          <name>CONFIG</name>
          <description>x</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00006480</resetValue>
          <fields>
            <field>
              <name>FLOW_ERR</name>
              <description>x</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ADDR_MAP_MODE</name>
              <description>x</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BURST_LIMIT</name>
              <description>x</description>
              <bitOffset>4</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUT_THRES</name>
              <description>x</description>
              <bitOffset>9</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SIZE</name>
              <description>x</description>
              <bitOffset>19</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>START</name>
              <description>x</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TO_MEM</name>
              <description>x</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENA</name>
              <description>x</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APB_ADDR</name>
          <description>x</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>APB_START_ADDR</name>
              <description>x</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MEM_ADDR</name>
          <description>x</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MEM_START_ADDR</name>
              <description>x</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MAP0</name>
          <description>x</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MAP0</name>
              <description>x</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MAP1</name>
          <description>x</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MAP1</name>
              <description>x</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MAP2</name>
          <description>x</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MAP2</name>
              <description>x</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MAP3</name>
          <description>x</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MAP3</name>
              <description>x</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW</name>
          <description>x</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DONE_INT_RAW</name>
              <description>x</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ERR_INT_RAW</name>
              <description>x</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST</name>
          <description>x</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DONE_INT_ST</name>
              <description>x</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ERR_INT_ST</name>
              <description>x</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>x</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DONE_INT_ENA</name>
              <description>x</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ERR_INT_ENA</name>
              <description>x</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>x</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DONE_INT_CLR</name>
              <description>x</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ERR_INT_CLR</name>
              <description>x</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>x</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02012300</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>x</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EN</name>
              <description>register file clk gating</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PWM0</name>
      <description>Peripheral PWM0</description>
      <groupName>PWM</groupName>
      <baseAddress>0x6001E000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x128</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>PWM0</name>
        <value>31</value>
      </interrupt>
      <registers>
        <register>
          <name>CLK_CFG</name>
          <description>PWM clock prescaler register.</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CLK_PRESCALE</name>
              <description>Period of PWM_clk = 6.25ns * (PWM_CLK_PRESCALE + 1)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER0_CFG0</name>
          <description>PWM timer0 period and update method configuration register.</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000FF00</resetValue>
          <fields>
            <field>
              <name>TIMER0_PRESCALE</name>
              <description>period of PT0_clk = Period of PWM_clk * (PWM_TIMER0_PRESCALE + 1)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER0_PERIOD</name>
              <description>period shadow register of PWM timer0</description>
              <bitOffset>8</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER0_PERIOD_UPMETHOD</name>
              <description>Update method for active register of PWM timer0 period, 0: immediate, 1: TEZ, 2: sync, 3: TEZ | sync. TEZ here and below means timer equal zero event</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER0_CFG1</name>
          <description>PWM timer0 working mode and start/stop control configuration register.</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER0_START</name>
              <description>PWM timer0 start and stop control. 0: if PWM timer0 starts, then stops at TEZ, 1: if timer0 starts, then stops at TEP, 2: PWM timer0 starts and runs on, 3: timer0 starts and stops at the next TEZ, 4: timer0 starts and stops at the next TEP. TEP here and below means the event that happens when the timer equals to period</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER0_MOD</name>
              <description>PWM timer0 working mode, 0: freeze, 1: increase mode, 2: decrease mode, 3: up-down mode</description>
              <bitOffset>3</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER0_SYNC</name>
          <description>PWM timer0 sync function configuration register.</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER0_SYNCI_EN</name>
              <description>When set, timer reloading with phase on sync input event is enabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SW</name>
              <description>Toggling this bit will trigger a software sync.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER0_SYNCO_SEL</name>
              <description>PWM timer0 sync_out selection, 0: synci, 1: TEZ, 2: TEP, otherwise:sync out is software sync</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER0_PHASE</name>
              <description>phase for timer reload on sync event</description>
              <bitOffset>4</bitOffset>
              <bitWidth>17</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER0_STATUS</name>
          <description>PWM timer0 status register.</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER0_VALUE</name>
              <description>current PWM timer0 counter value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER0_DIRECTION</name>
              <description>current PWM timer0 counter direction, 0: increment 1: decrement</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER1_CFG0</name>
          <description>PWM timer1 period and update method configuration register.</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000FF00</resetValue>
          <fields>
            <field>
              <name>TIMER1_PRESCALE</name>
              <description>period of PT0_clk = Period of PWM_clk * (PWM_timer1_PRESCALE + 1)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER1_PERIOD</name>
              <description>period shadow register of PWM timer1</description>
              <bitOffset>8</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER1_PERIOD_UPMETHOD</name>
              <description>Update method for active register of PWM timer1 period, 0: immediate, 1: TEZ, 2: sync, 3: TEZ | sync. TEZ here and below means timer equal zero event</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER1_CFG1</name>
          <description>PWM timer1 working mode and start/stop control configuration register.</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER1_START</name>
              <description>PWM timer1 start and stop control. 0: if PWM timer1 starts, then stops at TEZ, 1: if timer1 starts, then stops at TEP, 2: PWM timer1 starts and runs on, 3: timer1 starts and stops at the next TEZ, 4: timer1 starts and stops at the next TEP. TEP here and below means the event that happens when the timer equals to period</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER1_MOD</name>
              <description>PWM timer1 working mode, 0: freeze, 1: increase mode, 2: decrease mode, 3: up-down mode</description>
              <bitOffset>3</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER1_SYNC</name>
          <description>PWM timer1 sync function configuration register.</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER1_SYNCI_EN</name>
              <description>When set, timer reloading with phase on sync input event is enabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SW</name>
              <description>Toggling this bit will trigger a software sync.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER1_SYNCO_SEL</name>
              <description>PWM timer1 sync_out selection, 0: synci, 1: TEZ, 2: TEP, otherwise:sync out is software sync</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER1_PHASE</name>
              <description>phase for timer reload on sync event</description>
              <bitOffset>4</bitOffset>
              <bitWidth>17</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER1_STATUS</name>
          <description>PWM timer1 status register.</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER1_VALUE</name>
              <description>current PWM timer1 counter value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER1_DIRECTION</name>
              <description>current PWM timer1 counter direction, 0: increment 1: decrement</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER2_CFG0</name>
          <description>PWM timer2 period and update method configuration register.</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000FF00</resetValue>
          <fields>
            <field>
              <name>TIMER2_PRESCALE</name>
              <description>period of PT0_clk = Period of PWM_clk * (PWM_timer2_PRESCALE + 1)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER2_PERIOD</name>
              <description>period shadow register of PWM timer2</description>
              <bitOffset>8</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER2_PERIOD_UPMETHOD</name>
              <description>Update method for active register of PWM timer2 period, 0: immediate, 1: TEZ, 2: sync, 3: TEZ | sync. TEZ here and below means timer equal zero event</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER2_CFG1</name>
          <description>PWM timer2 working mode and start/stop control configuration register.</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER2_START</name>
              <description>PWM timer2 start and stop control. 0: if PWM timer2 starts, then stops at TEZ, 1: if timer2 starts, then stops at TEP, 2: PWM timer2 starts and runs on, 3: timer2 starts and stops at the next TEZ, 4: timer2 starts and stops at the next TEP. TEP here and below means the event that happens when the timer equals to period</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER2_MOD</name>
              <description>PWM timer2 working mode, 0: freeze, 1: increase mode, 2: decrease mode, 3: up-down mode</description>
              <bitOffset>3</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER2_SYNC</name>
          <description>PWM timer2 sync function configuration register.</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER2_SYNCI_EN</name>
              <description>When set, timer reloading with phase on sync input event is enabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SW</name>
              <description>Toggling this bit will trigger a software sync.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER2_SYNCO_SEL</name>
              <description>PWM timer2 sync_out selection, 0: synci, 1: TEZ, 2: TEP, otherwise:sync out is software sync</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER2_PHASE</name>
              <description>phase for timer reload on sync event</description>
              <bitOffset>4</bitOffset>
              <bitWidth>17</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER2_STATUS</name>
          <description>PWM timer2 status register.</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER2_VALUE</name>
              <description>current PWM timer2 counter value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER2_DIRECTION</name>
              <description>current PWM timer2 counter direction, 0: increment 1: decrement</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER_SYNCI_CFG</name>
          <description>Synchronization input selection for three PWM timers.</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER0_SYNCISEL</name>
              <description>select sync input for PWM timer0, 1: PWM timer0 sync_out, 2: PWM timer1 sync_out, 3: PWM timer2 sync_out, 4: SYNC0 from GPIO matrix, 5: SYNC1 from GPIO matrix, 6: SYNC2 from GPIO matrix, other values: no sync input selected</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER1_SYNCISEL</name>
              <description>select sync input for PWM timer1, 1: PWM timer0 sync_out, 2: PWM timer1 sync_out, 3: PWM timer2 sync_out, 4: SYNC0 from GPIO matrix, 5: SYNC1 from GPIO matrix, 6: SYNC2 from GPIO matrix, other values: no sync input selected</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER2_SYNCISEL</name>
              <description>select sync input for PWM timer2, 1: PWM timer0 sync_out, 2: PWM timer1 sync_out, 3: PWM timer2 sync_out, 4: SYNC0 from GPIO matrix, 5: SYNC1 from GPIO matrix, 6: SYNC2 from GPIO matrix, other values: no sync input selected</description>
              <bitOffset>6</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EXTERNAL_SYNCI0_INVERT</name>
              <description>invert SYNC0 from GPIO matrix</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EXTERNAL_SYNCI1_INVERT</name>
              <description>invert SYNC1 from GPIO matrix</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EXTERNAL_SYNCI2_INVERT</name>
              <description>invert SYNC2 from GPIO matrix</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OPERATOR_TIMERSEL</name>
          <description>Select specific timer for PWM operators.</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OPERATOR0_TIMERSEL</name>
              <description>Select which PWM timer's is the timing reference for PWM operator0, 0: timer0, 1: timer1, 2: timer2</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OPERATOR1_TIMERSEL</name>
              <description>Select which PWM timer's is the timing reference for PWM operator1, 0: timer0, 1: timer1, 2: timer2</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OPERATOR2_TIMERSEL</name>
              <description>Select which PWM timer's is the timing reference for PWM operator2, 0: timer0, 1: timer1, 2: timer2</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMPR0_CFG</name>
          <description>Transfer status and update method for time stamp registers A and B</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CMPR0_A_UPMETHOD</name>
              <description>Update method for PWM generator 0 time stamp A's active register. When all bits are set to 0: immediately, when bit0 is set to 1: TEZ, when bit1 is set to 1: TEP,when bit2 is set to 1: sync, when bit3 is set to 1: disable the update.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMPR0_B_UPMETHOD</name>
              <description>Update method for PWM generator 0 time stamp B's active register. When all bits are set to 0: immediately, when bit0 is set to 1: TEZ, when bit1 is set to 1: TEP,when bit2 is set to 1: sync, when bit3 is set to 1: disable the update.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMPR0_A_SHDW_FULL</name>
              <description>Set and reset by hardware. If set, PWM generator 0 time stamp A's shadow reg is filled and waiting to be transferred to A's active reg. If cleared, A's active reg has been updated with shadow register latest value</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CMPR0_B_SHDW_FULL</name>
              <description>Set and reset by hardware. If set, PWM generator 0 time stamp B's shadow reg is filled and waiting to be transferred to B's active reg. If cleared, B's active reg has been updated with shadow register latest value</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMPR0_VALUE0</name>
          <description>Shadow register for register A.</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CMPR0_A</name>
              <description>PWM generator 0 time stamp A's shadow register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMPR0_VALUE1</name>
          <description>Shadow register for register B.</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CMPR0_B</name>
              <description>PWM generator 0 time stamp B's shadow register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GEN0_CFG0</name>
          <description>Fault event T0 and T1 handling</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>GEN0_CFG_UPMETHOD</name>
              <description>Update method for PWM generator 0's active register of configuration. When all bits are set to 0: immediately, when bit0 is set to 1: TEZ, when bit1 is set to 1:</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GEN0_T0_SEL</name>
              <description>Source selection for PWM generator 0 event_t0, take effect immediately, 0: fault_event0, 1: fault_event1, 2: fault_event2, 3: sync_taken, 4: none</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GEN0_T1_SEL</name>
              <description>Source selection for PWM generator 0 event_t1, take effect immediately, 0: fault_event0, 1: fault_event1, 2: fault_event2, 3: sync_taken, 4: none</description>
              <bitOffset>7</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GEN0_FORCE</name>
          <description>Permissives to force PWM0A and PWM0B outputs by software</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000020</resetValue>
          <fields>
            <field>
              <name>GEN0_CNTUFORCE_UPMETHOD</name>
              <description>Updating method for continuous software force of PWM generator0. When all bits are set to 0: immediately, when bit0 is set to 1: TEZ,,when bit1 is set to 1: TEP, when bit2 is set to 1: TEA, when bit3 is set to 1: TEB, when bit4 is set to 1: sync, when bit5 is set to 1: disable update. (TEA/B here and below means an event generated when the timer's value equals to that of register A/B.)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GEN0_A_CNTUFORCE_MODE</name>
              <description>Continuous software force mode for PWM0A. 0: disabled, 1: low, 2: high, 3: disabled</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GEN0_B_CNTUFORCE_MODE</name>
              <description>Continuous software force mode for PWM0B. 0: disabled, 1: low, 2: high, 3: disabled</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GEN0_A_NCIFORCE</name>
              <description>Trigger of non-continuous immediate software-force event for PWM0A, a toggle will trigger a force event.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GEN0_A_NCIFORCE_MODE</name>
              <description>non-continuous immediate software force mode for PWM0A, 0: disabled, 1: low, 2: high, 3: disabled</description>
              <bitOffset>11</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GEN0_B_NCIFORCE</name>
              <description>Trigger of non-continuous immediate software-force event for PWM0B, a toggle will trigger a force event.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GEN0_B_NCIFORCE_MODE</name>
              <description>non-continuous immediate software force mode for PWM0B, 0: disabled, 1: low, 2: high, 3: disabled</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GEN0_A</name>
          <description>Actions triggered by events on PWM0A</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>UTEZ</name>
              <description>Action on PWM0A triggered by event TEZ when timer increasing</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UTEP</name>
              <description>Action on PWM0A triggered by event TEP when timer increasing</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UTEA</name>
              <description>Action on PWM0A triggered by event TEA when timer increasing</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UTEB</name>
              <description>Action on PWM0A triggered by event TEB when timer increasing</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UT0</name>
              <description>Action on PWM0A triggered by event_t0 when timer increasing</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UT1</name>
              <description>Action on PWM0A triggered by event_t1 when timer increasing</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTEZ</name>
              <description>Action on PWM0A triggered by event TEZ when timer decreasing</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTEP</name>
              <description>Action on PWM0A triggered by event TEP when timer decreasing</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTEA</name>
              <description>Action on PWM0A triggered by event TEA when timer decreasing</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTEB</name>
              <description>Action on PWM0A triggered by event TEB when timer decreasing</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DT0</name>
              <description>Action on PWM0A triggered by event_t0 when timer decreasing</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DT1</name>
              <description>Action on PWM0A triggered by event_t1 when timer decreasing. 0: no change, 1: low, 2: high, 3: toggle</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GEN0_B</name>
          <description>Actions triggered by events on PWM0B</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>UTEZ</name>
              <description>Action on PWM0B triggered by event TEZ when timer increasing</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UTEP</name>
              <description>Action on PWM0B triggered by event TEP when timer increasing</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UTEA</name>
              <description>Action on PWM0B triggered by event TEA when timer increasing</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UTEB</name>
              <description>Action on PWM0B triggered by event TEB when timer increasing</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UT0</name>
              <description>Action on PWM0B triggered by event_t0 when timer increasing</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UT1</name>
              <description>Action on PWM0B triggered by event_t1 when timer increasing</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTEZ</name>
              <description>Action on PWM0B triggered by event TEZ when timer decreasing</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTEP</name>
              <description>Action on PWM0B triggered by event TEP when timer decreasing</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTEA</name>
              <description>Action on PWM0B triggered by event TEA when timer decreasing</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTEB</name>
              <description>Action on PWM0B triggered by event TEB when timer decreasing</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DT0</name>
              <description>Action on PWM0B triggered by event_t0 when timer decreasing</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DT1</name>
              <description>Action on PWM0B triggered by event_t1 when timer decreasing. 0: no change, 1: low, 2: high, 3: toggle</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DB0_CFG</name>
          <description>dead time type selection and configuration</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <resetValue>0x00018000</resetValue>
          <fields>
            <field>
              <name>DB0_FED_UPMETHOD</name>
              <description>Update method for FED (falling edge delay) active register. 0: immediate, bit0: tez, bit1: tep, bit2: sync, bit3: freeze</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB0_RED_UPMETHOD</name>
              <description>Update method for RED (rising edge delay) active register. 0: immediate, bit0: tez, bit1: tep, bit2: sync, bit3: freeze</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB0_DEB_MODE</name>
              <description>S8 in documentation, dual-edge B mode, 0: fed/red take effect on different path separately, 1: fed/red take effect on B path, A out is in bypass or dulpB mode</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB0_A_OUTSWAP</name>
              <description>S6 in documentation</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB0_B_OUTSWAP</name>
              <description>S7 in documentation</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB0_RED_INSEL</name>
              <description>S4 in documentation</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB0_FED_INSEL</name>
              <description>S5 in documentation</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB0_RED_OUTINVERT</name>
              <description>S2 in documentation</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB0_FED_OUTINVERT</name>
              <description>S3 in documentation</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB0_A_OUTBYPASS</name>
              <description>S1 in documentation</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB0_B_OUTBYPASS</name>
              <description>S0 in documentation</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB0_CLK_SEL</name>
              <description>Dead time generator 0 clock selection. 0: PWM_clk, 1: PT_clk</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DB0_FED_CFG</name>
          <description>Shadow register for falling edge delay (FED).</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DB0_FED</name>
              <description>Shadow register for FED</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DB0_RED_CFG</name>
          <description>Shadow register for rising edge delay (RED).</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DB0_RED</name>
              <description>Shadow register for RED</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CHOPPER0_CFG</name>
          <description>Carrier enable and configuratoin</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CHOPPER0_EN</name>
              <description>When set, carrier0 function is enabled. When cleared, carrier0 is bypassed</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CHOPPER0_PRESCALE</name>
              <description>PWM carrier0 clock (PC_clk) prescale value. Period of PC_clk = period of PWM_clk * (PWM_CARRIER0_PRESCALE + 1)</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CHOPPER0_DUTY</name>
              <description>carrier duty selection. Duty = PWM_CARRIER0_DUTY / 8</description>
              <bitOffset>5</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CHOPPER0_OSHTWTH</name>
              <description>width of the fist pulse in number of periods of the carrier</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CHOPPER0_OUT_INVERT</name>
              <description>when set, invert the output of PWM0A and PWM0B for this submodule</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CHOPPER0_IN_INVERT</name>
              <description>when set, invert the input of PWM0A and PWM0B for this submodule</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TZ0_CFG0</name>
          <description>Actions on PWM0A and PWM0B trip events</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TZ0_SW_CBC</name>
              <description>Enable register for software force cycle-by-cycle mode action. 0: disable, 1: enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ0_F2_CBC</name>
              <description>event_f2 will trigger cycle-by-cycle mode action. 0: disable, 1: enable</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ0_F1_CBC</name>
              <description>event_f1 will trigger cycle-by-cycle mode action. 0: disable, 1: enable</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ0_F0_CBC</name>
              <description>event_f0 will trigger cycle-by-cycle mode action. 0: disable, 1: enable</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ0_SW_OST</name>
              <description>Enable register for software force one-shot mode action. 0: disable, 1: enable</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ0_F2_OST</name>
              <description>event_f2 will trigger one-shot mode action. 0: disable, 1: enable</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ0_F1_OST</name>
              <description>event_f1 will trigger one-shot mode action. 0: disable, 1: enable</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ0_F0_OST</name>
              <description>event_f0 will trigger one-shot mode action. 0: disable, 1: enable</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ0_A_CBC_D</name>
              <description>Cycle-by-cycle mode action on PWM0A when fault event occurs and timer is decreasing. 0: do nothing, 1: force lo, 2: force hi, 3: toggle</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ0_A_CBC_U</name>
              <description>Cycle-by-cycle mode action on PWM0A when fault event occurs and timer is increasing. 0: do nothing, 1: force lo, 2: force hi, 3: toggle</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ0_A_OST_D</name>
              <description>One-shot mode action on PWM0A when fault event occurs and timer is decreasing. 0: do nothing, 1: force lo, 2: force hi, 3: toggle</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ0_A_OST_U</name>
              <description>One-shot mode action on PWM0A when fault event occurs and timer is increasing. 0: do nothing, 1: force lo, 2: force hi, 3: toggle</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ0_B_CBC_D</name>
              <description>Cycle-by-cycle mode action on PWM0B when fault event occurs and timer is decreasing. 0: do nothing, 1: force lo, 2: force hi, 3: toggle</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ0_B_CBC_U</name>
              <description>Cycle-by-cycle mode action on PWM0B when fault event occurs and timer is increasing. 0: do nothing, 1: force lo, 2: force hi, 3: toggle</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ0_B_OST_D</name>
              <description>One-shot mode action on PWM0B when fault event occurs and timer is decreasing. 0: do nothing, 1: force lo, 2: force hi, 3: toggle</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ0_B_OST_U</name>
              <description>One-shot mode action on PWM0B when fault event occurs and timer is increasing. 0: do nothing, 1: force lo, 2: force hi, 3: toggle</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TZ0_CFG1</name>
          <description>Software triggers for fault handler actions</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TZ0_CLR_OST</name>
              <description>a rising edge will clear on going one-shot mode action</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ0_CBCPULSE</name>
              <description>cycle-by-cycle mode action refresh moment selection. Bit0: TEZ, bit1:TEP</description>
              <bitOffset>1</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ0_FORCE_CBC</name>
              <description>a toggle trigger a cycle-by-cycle mode action</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ0_FORCE_OST</name>
              <description>a toggle (software negate its value) triggers a one-shot mode action</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TZ0_STATUS</name>
          <description>Status of fault events.</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TZ0_CBC_ON</name>
              <description>Set and reset by hardware. If set, a cycle-by-cycle mode action is on going</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TZ0_OST_ON</name>
              <description>Set and reset by hardware. If set, an one-shot mode action is on going</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMPR1_CFG</name>
          <description>Transfer status and update method for time stamp registers A and B</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CMPR1_A_UPMETHOD</name>
              <description>Update method for PWM generator 1 time stamp A's active register. When all bits are set to 0: immediately, when bit0 is set to 1: TEZ, when bit1 is set to 1: TEP,when bit2 is set to 1: sync, when bit3 is set to 1: disable the update.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMPR1_B_UPMETHOD</name>
              <description>Update method for PWM generator 1 time stamp B's active register. When all bits are set to 0: immediately, when bit0 is set to 1: TEZ, when bit1 is set to 1: TEP,when bit2 is set to 1: sync, when bit3 is set to 1: disable the update.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMPR1_A_SHDW_FULL</name>
              <description>Set and reset by hardware. If set, PWM generator 1 time stamp A's shadow reg is filled and waiting to be transferred to A's active reg. If cleared, A's active reg has been updated with shadow register latest value</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CMPR1_B_SHDW_FULL</name>
              <description>Set and reset by hardware. If set, PWM generator 1 time stamp B's shadow reg is filled and waiting to be transferred to B's active reg. If cleared, B's active reg has been updated with shadow register latest value</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMPR1_VALUE0</name>
          <description>Shadow register for register A.</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CMPR1_A</name>
              <description>PWM generator 1 time stamp A's shadow register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMPR1_VALUE1</name>
          <description>Shadow register for register B.</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CMPR1_B</name>
              <description>PWM generator 1 time stamp B's shadow register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GEN1_CFG0</name>
          <description>Fault event T0 and T1 handling</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>GEN1_CFG_UPMETHOD</name>
              <description>Update method for PWM generator 1's active register of configuration. When all bits are set to 0: immediately, when bit0 is set to 1: TEZ, when bit1 is set to 1:</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GEN1_T0_SEL</name>
              <description>Source selection for PWM generator 1 event_t0, take effect immediately, 0: fault_event0, 1: fault_event1, 2: fault_event2, 3: sync_taken, 4: none</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GEN1_T1_SEL</name>
              <description>Source selection for PWM generator 1 event_t1, take effect immediately, 0: fault_event0, 1: fault_event1, 2: fault_event2, 3: sync_taken, 4: none</description>
              <bitOffset>7</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GEN1_FORCE</name>
          <description>Permissives to force PWM1A and PWM1B outputs by software</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000020</resetValue>
          <fields>
            <field>
              <name>GEN1_CNTUFORCE_UPMETHOD</name>
              <description>Updating method for continuous software force of PWM generator 1. When all bits are set to 0: immediately, when bit0 is set to 1: TEZ,,when bit1 is set to 1: TEP, when bit2 is set to 1: TEA, when bit3 is set to 1: TEB, when bit4 is set to 1: sync, when bit5 is set to 1: disable update. (TEA/B here and below means an event generated when the timer's value equals to that of register A/B.)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GEN1_A_CNTUFORCE_MODE</name>
              <description>Continuous software force mode for PWM1A. 0: disabled, 1: low, 2: high, 3: disabled</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GEN1_B_CNTUFORCE_MODE</name>
              <description>Continuous software force mode for PWM1B. 0: disabled, 1: low, 2: high, 3: disabled</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GEN1_A_NCIFORCE</name>
              <description>Trigger of non-continuous immediate software-force event for PWM1A, a toggle will trigger a force event.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GEN1_A_NCIFORCE_MODE</name>
              <description>non-continuous immediate software force mode for PWM1A, 0: disabled, 1: low, 2: high, 3: disabled</description>
              <bitOffset>11</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GEN1_B_NCIFORCE</name>
              <description>Trigger of non-continuous immediate software-force event for PWM1B, a toggle will trigger a force event.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GEN1_B_NCIFORCE_MODE</name>
              <description>non-continuous immediate software force mode for PWM1B, 0: disabled, 1: low, 2: high, 3: disabled</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GEN1_A</name>
          <description>Actions triggered by events on PWM1A</description>
          <addressOffset>0x88</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>UTEZ</name>
              <description>Action on PWM1A triggered by event TEZ when timer increasing</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UTEP</name>
              <description>Action on PWM1A triggered by event TEP when timer increasing</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UTEA</name>
              <description>Action on PWM1A triggered by event TEA when timer increasing</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UTEB</name>
              <description>Action on PWM1A triggered by event TEB when timer increasing</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UT0</name>
              <description>Action on PWM1A triggered by event_t0 when timer increasing</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UT1</name>
              <description>Action on PWM1A triggered by event_t1 when timer increasing</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTEZ</name>
              <description>Action on PWM1A triggered by event TEZ when timer decreasing</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTEP</name>
              <description>Action on PWM1A triggered by event TEP when timer decreasing</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTEA</name>
              <description>Action on PWM1A triggered by event TEA when timer decreasing</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTEB</name>
              <description>Action on PWM1A triggered by event TEB when timer decreasing</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DT0</name>
              <description>Action on PWM1A triggered by event_t0 when timer decreasing</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DT1</name>
              <description>Action on PWM1A triggered by event_t1 when timer decreasing. 0: no change, 1: low, 2: high, 3: toggle</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GEN1_B</name>
          <description>Actions triggered by events on PWM1B</description>
          <addressOffset>0x8C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>UTEZ</name>
              <description>Action on PWM1B triggered by event TEZ when timer increasing</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UTEP</name>
              <description>Action on PWM1B triggered by event TEP when timer increasing</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UTEA</name>
              <description>Action on PWM1B triggered by event TEA when timer increasing</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UTEB</name>
              <description>Action on PWM1B triggered by event TEB when timer increasing</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UT0</name>
              <description>Action on PWM1B triggered by event_t0 when timer increasing</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UT1</name>
              <description>Action on PWM1B triggered by event_t1 when timer increasing</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTEZ</name>
              <description>Action on PWM1B triggered by event TEZ when timer decreasing</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTEP</name>
              <description>Action on PWM1B triggered by event TEP when timer decreasing</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTEA</name>
              <description>Action on PWM1B triggered by event TEA when timer decreasing</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTEB</name>
              <description>Action on PWM1B triggered by event TEB when timer decreasing</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DT0</name>
              <description>Action on PWM1B triggered by event_t0 when timer decreasing</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DT1</name>
              <description>Action on PWM1B triggered by event_t1 when timer decreasing. 0: no change, 1: low, 2: high, 3: toggle</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DB1_CFG</name>
          <description>dead time type selection and configuration</description>
          <addressOffset>0x90</addressOffset>
          <size>0x20</size>
          <resetValue>0x00018000</resetValue>
          <fields>
            <field>
              <name>DB1_FED_UPMETHOD</name>
              <description>Update method for FED (falling edge delay) active register. 0: immediate, bit0: tez, bit1: tep, bit2: sync, bit3: freeze</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB1_RED_UPMETHOD</name>
              <description>Update method for RED (rising edge delay) active register. 0: immediate, bit0: tez, bit1: tep, bit2: sync, bit3: freeze</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB1_DEB_MODE</name>
              <description>S8 in documentation, dual-edge B mode, 0: fed/red take effect on different path separately, 1: fed/red take effect on B path, A out is in bypass or dulpB mode</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB1_A_OUTSWAP</name>
              <description>S6 in documentation</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB1_B_OUTSWAP</name>
              <description>S7 in documentation</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB1_RED_INSEL</name>
              <description>S4 in documentation</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB1_FED_INSEL</name>
              <description>S5 in documentation</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB1_RED_OUTINVERT</name>
              <description>S2 in documentation</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB1_FED_OUTINVERT</name>
              <description>S3 in documentation</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB1_A_OUTBYPASS</name>
              <description>S1 in documentation</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB1_B_OUTBYPASS</name>
              <description>S0 in documentation</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB1_CLK_SEL</name>
              <description>Dead time generator 1 clock selection. 0: PWM_clk, 1: PT_clk</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DB1_FED_CFG</name>
          <description>Shadow register for falling edge delay (FED).</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DB1_FED</name>
              <description>Shadow register for FED</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DB1_RED_CFG</name>
          <description>Shadow register for rising edge delay (RED).</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DB1_RED</name>
              <description>Shadow register for RED</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CHOPPER1_CFG</name>
          <description>Carrier enable and configuratoin</description>
          <addressOffset>0x9C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CHOPPER1_EN</name>
              <description>When set, carrier0 function is enabled. When cleared, carrier0 is bypassed</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CHOPPER1_PRESCALE</name>
              <description>PWM carrier0 clock (PC_clk) prescale value. Period of PC_clk = period of PWM_clk * (PWM_CARRIER0_PRESCALE + 1)</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CHOPPER1_DUTY</name>
              <description>carrier duty selection. Duty = PWM_CARRIER0_DUTY / 8</description>
              <bitOffset>5</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CHOPPER1_OSHTWTH</name>
              <description>width of the fist pulse in number of periods of the carrier</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CHOPPER1_OUT_INVERT</name>
              <description>when set, invert the output of PWM1A and PWM1B for this submodule</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CHOPPER1_IN_INVERT</name>
              <description>when set, invert the input of PWM1A and PWM1B for this submodule</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TZ1_CFG0</name>
          <description>Actions on PWM1A and PWM1B trip events</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TZ1_SW_CBC</name>
              <description>Enable register for software force cycle-by-cycle mode action. 0: disable, 1: enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ1_F2_CBC</name>
              <description>event_f2 will trigger cycle-by-cycle mode action. 0: disable, 1: enable</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ1_F1_CBC</name>
              <description>event_f1 will trigger cycle-by-cycle mode action. 0: disable, 1: enable</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ1_F0_CBC</name>
              <description>event_f0 will trigger cycle-by-cycle mode action. 0: disable, 1: enable</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ1_SW_OST</name>
              <description>Enable register for software force one-shot mode action. 0: disable, 1: enable</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ1_F2_OST</name>
              <description>event_f2 will trigger one-shot mode action. 0: disable, 1: enable</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ1_F1_OST</name>
              <description>event_f1 will trigger one-shot mode action. 0: disable, 1: enable</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ1_F0_OST</name>
              <description>event_f0 will trigger one-shot mode action. 0: disable, 1: enable</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ1_A_CBC_D</name>
              <description>Cycle-by-cycle mode action on PWM1A when fault event occurs and timer is decreasing. 0: do nothing, 1: force lo, 2: force hi, 3: toggle</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ1_A_CBC_U</name>
              <description>Cycle-by-cycle mode action on PWM1A when fault event occurs and timer is increasing. 0: do nothing, 1: force lo, 2: force hi, 3: toggle</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ1_A_OST_D</name>
              <description>One-shot mode action on PWM1A when fault event occurs and timer is decreasing. 0: do nothing, 1: force lo, 2: force hi, 3: toggle</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ1_A_OST_U</name>
              <description>One-shot mode action on PWM1A when fault event occurs and timer is increasing. 0: do nothing, 1: force lo, 2: force hi, 3: toggle</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ1_B_CBC_D</name>
              <description>Cycle-by-cycle mode action on PWM1B when fault event occurs and timer is decreasing. 0: do nothing, 1: force lo, 2: force hi, 3: toggle</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ1_B_CBC_U</name>
              <description>Cycle-by-cycle mode action on PWM1B when fault event occurs and timer is increasing. 0: do nothing, 1: force lo, 2: force hi, 3: toggle</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ1_B_OST_D</name>
              <description>One-shot mode action on PWM1B when fault event occurs and timer is decreasing. 0: do nothing, 1: force lo, 2: force hi, 3: toggle</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ1_B_OST_U</name>
              <description>One-shot mode action on PWM1B when fault event occurs and timer is increasing. 0: do nothing, 1: force lo, 2: force hi, 3: toggle</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TZ1_CFG1</name>
          <description>Software triggers for fault handler actions</description>
          <addressOffset>0xA4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TZ1_CLR_OST</name>
              <description>a rising edge will clear on going one-shot mode action</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ1_CBCPULSE</name>
              <description>cycle-by-cycle mode action refresh moment selection. Bit0: TEZ, bit1:TEP</description>
              <bitOffset>1</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ1_FORCE_CBC</name>
              <description>a toggle trigger a cycle-by-cycle mode action</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ1_FORCE_OST</name>
              <description>a toggle (software negate its value) triggers a one-shot mode action</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TZ1_STATUS</name>
          <description>Status of fault events.</description>
          <addressOffset>0xA8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TZ1_CBC_ON</name>
              <description>Set and reset by hardware. If set, a cycle-by-cycle mode action is on going</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TZ1_OST_ON</name>
              <description>Set and reset by hardware. If set, an one-shot mode action is on going</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMPR2_CFG</name>
          <description>Transfer status and update method for time stamp registers A and B</description>
          <addressOffset>0xAC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CMPR2_A_UPMETHOD</name>
              <description>Update method for PWM generator 2 time stamp A's active register. When all bits are set to 0: immediately, when bit0 is set to 1: TEZ, when bit1 is set to 1: TEP,when bit2 is set to 1: sync, when bit3 is set to 1: disable the update.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMPR2_B_UPMETHOD</name>
              <description>Update method for PWM generator 2 time stamp B's active register. When all bits are set to 0: immediately, when bit0 is set to 1: TEZ, when bit1 is set to 1: TEP,when bit2 is set to 1: sync, when bit3 is set to 1: disable the update.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMPR2_A_SHDW_FULL</name>
              <description>Set and reset by hardware. If set, PWM generator 2 time stamp A's shadow reg is filled and waiting to be transferred to A's active reg. If cleared, A's active reg has been updated with shadow register latest value</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CMPR2_B_SHDW_FULL</name>
              <description>Set and reset by hardware. If set, PWM generator 2 time stamp B's shadow reg is filled and waiting to be transferred to B's active reg. If cleared, B's active reg has been updated with shadow register latest value</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMPR2_VALUE0</name>
          <description>Shadow register for register A.</description>
          <addressOffset>0xB0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CMPR2_A</name>
              <description>PWM generator 2 time stamp A's shadow register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMPR2_VALUE1</name>
          <description>Shadow register for register B.</description>
          <addressOffset>0xB4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CMPR2_B</name>
              <description>PWM generator 2 time stamp B's shadow register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GEN2_CFG0</name>
          <description>Fault event T0 and T1 handling</description>
          <addressOffset>0xB8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>GEN2_CFG_UPMETHOD</name>
              <description>Update method for PWM generator 2's active register of configuration. When all bits are set to 0: immediately, when bit0 is set to 1: TEZ, when bit1 is set to 1:</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GEN2_T0_SEL</name>
              <description>Source selection for PWM generator 2 event_t0, take effect immediately, 0: fault_event0, 1: fault_event1, 2: fault_event2, 3: sync_taken, 4: none</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GEN2_T1_SEL</name>
              <description>Source selection for PWM generator 2 event_t1, take effect immediately, 0: fault_event0, 1: fault_event1, 2: fault_event2, 3: sync_taken, 4: none</description>
              <bitOffset>7</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GEN2_FORCE</name>
          <description>Permissives to force PWM2A and PWM2B outputs by software</description>
          <addressOffset>0xBC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000020</resetValue>
          <fields>
            <field>
              <name>GEN2_CNTUFORCE_UPMETHOD</name>
              <description>Updating method for continuous software force of PWM generator 2. When all bits are set to 0: immediately, when bit0 is set to 1: TEZ,,when bit1 is set to 1: TEP, when bit2 is set to 1: TEA, when bit3 is set to 1: TEB, when bit4 is set to 1: sync, when bit5 is set to 1: disable update. (TEA/B here and below means an event generated when the timer's value equals to that of register A/B.)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GEN2_A_CNTUFORCE_MODE</name>
              <description>Continuous software force mode for PWM2A. 0: disabled, 1: low, 2: high, 3: disabled</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GEN2_B_CNTUFORCE_MODE</name>
              <description>Continuous software force mode for PWM2B. 0: disabled, 1: low, 2: high, 3: disabled</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GEN2_A_NCIFORCE</name>
              <description>Trigger of non-continuous immediate software-force event for PWM2A, a toggle will trigger a force event.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GEN2_A_NCIFORCE_MODE</name>
              <description>non-continuous immediate software force mode for PWM2A, 0: disabled, 1: low, 2: high, 3: disabled</description>
              <bitOffset>11</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GEN2_B_NCIFORCE</name>
              <description>Trigger of non-continuous immediate software-force event for PWM2B, a toggle will trigger a force event.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GEN2_B_NCIFORCE_MODE</name>
              <description>non-continuous immediate software force mode for PWM2B, 0: disabled, 1: low, 2: high, 3: disabled</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GEN2_A</name>
          <description>Actions triggered by events on PWM2A</description>
          <addressOffset>0xC0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>UTEZ</name>
              <description>Action on PWM2A triggered by event TEZ when timer increasing</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UTEP</name>
              <description>Action on PWM2A triggered by event TEP when timer increasing</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UTEA</name>
              <description>Action on PWM2A triggered by event TEA when timer increasing</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UTEB</name>
              <description>Action on PWM2A triggered by event TEB when timer increasing</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UT0</name>
              <description>Action on PWM2A triggered by event_t0 when timer increasing</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UT1</name>
              <description>Action on PWM2A triggered by event_t1 when timer increasing</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTEZ</name>
              <description>Action on PWM2A triggered by event TEZ when timer decreasing</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTEP</name>
              <description>Action on PWM2A triggered by event TEP when timer decreasing</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTEA</name>
              <description>Action on PWM2A triggered by event TEA when timer decreasing</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTEB</name>
              <description>Action on PWM2A triggered by event TEB when timer decreasing</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DT0</name>
              <description>Action on PWM2A triggered by event_t0 when timer decreasing</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DT1</name>
              <description>Action on PWM2A triggered by event_t1 when timer decreasing. 0: no change, 1: low, 2: high, 3: toggle</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GEN2_B</name>
          <description>Actions triggered by events on PWM2B</description>
          <addressOffset>0xC4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>UTEZ</name>
              <description>Action on PWM2B triggered by event TEZ when timer increasing</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UTEP</name>
              <description>Action on PWM2B triggered by event TEP when timer increasing</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UTEA</name>
              <description>Action on PWM2B triggered by event TEA when timer increasing</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UTEB</name>
              <description>Action on PWM2B triggered by event TEB when timer increasing</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UT0</name>
              <description>Action on PWM2B triggered by event_t0 when timer increasing</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UT1</name>
              <description>Action on PWM2B triggered by event_t1 when timer increasing</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTEZ</name>
              <description>Action on PWM2B triggered by event TEZ when timer decreasing</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTEP</name>
              <description>Action on PWM2B triggered by event TEP when timer decreasing</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTEA</name>
              <description>Action on PWM2B triggered by event TEA when timer decreasing</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTEB</name>
              <description>Action on PWM2B triggered by event TEB when timer decreasing</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DT0</name>
              <description>Action on PWM2B triggered by event_t0 when timer decreasing</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DT1</name>
              <description>Action on PWM2B triggered by event_t1 when timer decreasing. 0: no change, 1: low, 2: high, 3: toggle</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DB2_CFG</name>
          <description>dead time type selection and configuration</description>
          <addressOffset>0xC8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00018000</resetValue>
          <fields>
            <field>
              <name>DB2_FED_UPMETHOD</name>
              <description>Update method for FED (falling edge delay) active register. 0: immediate, bit0: tez, bit1: tep, bit2: sync, bit3: freeze</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB2_RED_UPMETHOD</name>
              <description>Update method for RED (rising edge delay) active register. 0: immediate, bit0: tez, bit1: tep, bit2: sync, bit3: freeze</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB2_DEB_MODE</name>
              <description>S8 in documentation, dual-edge B mode, 0: fed/red take effect on different path separately, 1: fed/red take effect on B path, A out is in bypass or dulpB mode</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB2_A_OUTSWAP</name>
              <description>S6 in documentation</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB2_B_OUTSWAP</name>
              <description>S7 in documentation</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB2_RED_INSEL</name>
              <description>S4 in documentation</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB2_FED_INSEL</name>
              <description>S5 in documentation</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB2_RED_OUTINVERT</name>
              <description>S2 in documentation</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB2_FED_OUTINVERT</name>
              <description>S3 in documentation</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB2_A_OUTBYPASS</name>
              <description>S1 in documentation</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB2_B_OUTBYPASS</name>
              <description>S0 in documentation</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DB2_CLK_SEL</name>
              <description>Dead time generator 2 clock selection. 0: PWM_clk, 1: PT_clk</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DB2_FED_CFG</name>
          <description>Shadow register for falling edge delay (FED).</description>
          <addressOffset>0xCC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DB2_FED</name>
              <description>Shadow register for FED</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DB2_RED_CFG</name>
          <description>Shadow register for rising edge delay (RED).</description>
          <addressOffset>0xD0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DB2_RED</name>
              <description>Shadow register for RED</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CHOPPER2_CFG</name>
          <description>Carrier enable and configuratoin</description>
          <addressOffset>0xD4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CHOPPER2_EN</name>
              <description>When set, carrier0 function is enabled. When cleared, carrier0 is bypassed</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CHOPPER2_PRESCALE</name>
              <description>PWM carrier0 clock (PC_clk) prescale value. Period of PC_clk = period of PWM_clk * (PWM_CARRIER0_PRESCALE + 1)</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CHOPPER2_DUTY</name>
              <description>carrier duty selection. Duty = PWM_CARRIER0_DUTY / 8</description>
              <bitOffset>5</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CHOPPER2_OSHTWTH</name>
              <description>width of the fist pulse in number of periods of the carrier</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CHOPPER2_OUT_INVERT</name>
              <description>when set, invert the output of PWM2A and PWM2B for this submodule</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CHOPPER2_IN_INVERT</name>
              <description>when set, invert the input of PWM2A and PWM2B for this submodule</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TZ2_CFG0</name>
          <description>Actions on PWM2A and PWM2B trip events</description>
          <addressOffset>0xD8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TZ2_SW_CBC</name>
              <description>Enable register for software force cycle-by-cycle mode action. 0: disable, 1: enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ2_F2_CBC</name>
              <description>event_f2 will trigger cycle-by-cycle mode action. 0: disable, 1: enable</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ2_F1_CBC</name>
              <description>event_f1 will trigger cycle-by-cycle mode action. 0: disable, 1: enable</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ2_F0_CBC</name>
              <description>event_f0 will trigger cycle-by-cycle mode action. 0: disable, 1: enable</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ2_SW_OST</name>
              <description>Enable register for software force one-shot mode action. 0: disable, 1: enable</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ2_F2_OST</name>
              <description>event_f2 will trigger one-shot mode action. 0: disable, 1: enable</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ2_F1_OST</name>
              <description>event_f1 will trigger one-shot mode action. 0: disable, 1: enable</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ2_F0_OST</name>
              <description>event_f0 will trigger one-shot mode action. 0: disable, 1: enable</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ2_A_CBC_D</name>
              <description>Cycle-by-cycle mode action on PWM2A when fault event occurs and timer is decreasing. 0: do nothing, 1: force lo, 2: force hi, 3: toggle</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ2_A_CBC_U</name>
              <description>Cycle-by-cycle mode action on PWM2A when fault event occurs and timer is increasing. 0: do nothing, 1: force lo, 2: force hi, 3: toggle</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ2_A_OST_D</name>
              <description>One-shot mode action on PWM2A when fault event occurs and timer is decreasing. 0: do nothing, 1: force lo, 2: force hi, 3: toggle</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ2_A_OST_U</name>
              <description>One-shot mode action on PWM2A when fault event occurs and timer is increasing. 0: do nothing, 1: force lo, 2: force hi, 3: toggle</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ2_B_CBC_D</name>
              <description>Cycle-by-cycle mode action on PWM2B when fault event occurs and timer is decreasing. 0: do nothing, 1: force lo, 2: force hi, 3: toggle</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ2_B_CBC_U</name>
              <description>Cycle-by-cycle mode action on PWM2B when fault event occurs and timer is increasing. 0: do nothing, 1: force lo, 2: force hi, 3: toggle</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ2_B_OST_D</name>
              <description>One-shot mode action on PWM2B when fault event occurs and timer is decreasing. 0: do nothing, 1: force lo, 2: force hi, 3: toggle</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ2_B_OST_U</name>
              <description>One-shot mode action on PWM2B when fault event occurs and timer is increasing. 0: do nothing, 1: force lo, 2: force hi, 3: toggle</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TZ2_CFG1</name>
          <description>Software triggers for fault handler actions</description>
          <addressOffset>0xDC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TZ2_CLR_OST</name>
              <description>a rising edge will clear on going one-shot mode action</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ2_CBCPULSE</name>
              <description>cycle-by-cycle mode action refresh moment selection. Bit0: TEZ, bit1:TEP</description>
              <bitOffset>1</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ2_FORCE_CBC</name>
              <description>a toggle trigger a cycle-by-cycle mode action</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ2_FORCE_OST</name>
              <description>a toggle (software negate its value) triggers a one-shot mode action</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TZ2_STATUS</name>
          <description>Status of fault events.</description>
          <addressOffset>0xE0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TZ2_CBC_ON</name>
              <description>Set and reset by hardware. If set, a cycle-by-cycle mode action is on going</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TZ2_OST_ON</name>
              <description>Set and reset by hardware. If set, an one-shot mode action is on going</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FAULT_DETECT</name>
          <description>Fault detection configuration and status</description>
          <addressOffset>0xE4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>F0_EN</name>
              <description>When set, event_f0 generation is enabled</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>F1_EN</name>
              <description>When set, event_f1 generation is enabled</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>F2_EN</name>
              <description>When set, event_f2 generation is enabled</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>F0_POLE</name>
              <description>Set event_f0 trigger polarity on FAULT2 source from GPIO matrix. 0: level low, 1: level high</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>F1_POLE</name>
              <description>Set event_f1 trigger polarity on FAULT2 source from GPIO matrix. 0: level low, 1: level high</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>F2_POLE</name>
              <description>Set event_f2 trigger polarity on FAULT2 source from GPIO matrix. 0: level low, 1: level high</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EVENT_F0</name>
              <description>Set and reset by hardware. If set, event_f0 is on going</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EVENT_F1</name>
              <description>Set and reset by hardware. If set, event_f1 is on going</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EVENT_F2</name>
              <description>Set and reset by hardware. If set, event_f2 is on going</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAP_TIMER_CFG</name>
          <description>Configure capture timer</description>
          <addressOffset>0xE8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CAP_TIMER_EN</name>
              <description>When set, capture timer incrementing under APB_clk is enabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP_SYNCI_EN</name>
              <description>When set, capture timer sync is enabled.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP_SYNCI_SEL</name>
              <description>capture module sync input selection. 0: none, 1: timer0 sync_out, 2: timer1 sync_out, 3: timer2 sync_out, 4: SYNC0 from GPIO matrix, 5: SYNC1 from GPIO matrix, 6: SYNC2 from GPIO matrix</description>
              <bitOffset>2</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP_SYNC_SW</name>
              <description>Write 1 will force a capture timer sync, capture timer is loaded with value in phase register.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAP_TIMER_PHASE</name>
          <description>Phase for capture timer sync</description>
          <addressOffset>0xEC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CAP_PHASE</name>
              <description>Phase value for capture timer sync operation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAP_CH0_CFG</name>
          <description>Capture channel 0 configuration and enable</description>
          <addressOffset>0xF0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CAP0_EN</name>
              <description>When set, capture on channel 0 is enabled</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP0_MODE</name>
              <description>Edge of capture on channel 0 after prescaling. When bit0 is set to 1: enable capture on the negative edge, When bit1 is set to 1: enable capture on the positive edge.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP0_PRESCALE</name>
              <description>Value of prescaling on possitive edge of CAP0. Prescale value = PWM_CAP0_PRESCALE + 1</description>
              <bitOffset>3</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP0_IN_INVERT</name>
              <description>when set, CAP0 form GPIO matrix is inverted before prescale</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP0_SW</name>
              <description>Write 1 will trigger a software forced capture on channel 0</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAP_CH1_CFG</name>
          <description>Capture channel 1 configuration and enable</description>
          <addressOffset>0xF4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CAP1_EN</name>
              <description>When set, capture on channel 2 is enabled</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP1_MODE</name>
              <description>Edge of capture on channel 1 after prescaling. When bit0 is set to 1: enable capture on the negative edge, When bit1 is set to 1: enable capture on the positive edge.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP1_PRESCALE</name>
              <description>Value of prescaling on possitive edge of CAP1. Prescale value = PWM_CAP1_PRESCALE + 1</description>
              <bitOffset>3</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP1_IN_INVERT</name>
              <description>when set, CAP1 form GPIO matrix is inverted before prescale</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP1_SW</name>
              <description>Write 1 will trigger a software forced capture on channel 1</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAP_CH2_CFG</name>
          <description>Capture channel 2 configuration and enable</description>
          <addressOffset>0xF8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CAP2_EN</name>
              <description>When set, capture on channel 2 is enabled</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP2_MODE</name>
              <description>Edge of capture on channel 2 after prescaling. When bit0 is set to 1: enable capture on the negative edge, When bit1 is set to 1: enable capture on the positive edge.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP2_PRESCALE</name>
              <description>Value of prescaling on possitive edge of CAP2. Prescale value = PWM_CAP2_PRESCALE + 1</description>
              <bitOffset>3</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP2_IN_INVERT</name>
              <description>when set, CAP2 form GPIO matrix is inverted before prescale</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP2_SW</name>
              <description>Write 1 will trigger a software forced capture on channel 2</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAP_CH0</name>
          <description>Value of last capture on channel 0</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CAP0_VALUE</name>
              <description>Value of last capture on channel 0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAP_CH1</name>
          <description>Value of last capture on channel 1</description>
          <addressOffset>0x100</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CAP1_VALUE</name>
              <description>Value of last capture on channel 1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAP_CH2</name>
          <description>Value of last capture on channel 2</description>
          <addressOffset>0x104</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CAP2_VALUE</name>
              <description>Value of last capture on channel 2</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAP_STATUS</name>
          <description>Edge of last capture trigger</description>
          <addressOffset>0x108</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CAP0_EDGE</name>
              <description>Edge of last capture trigger on channel 0, 0: posedge, 1: negedge</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CAP1_EDGE</name>
              <description>Edge of last capture trigger on channel 1, 0: posedge, 1: negedge</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CAP2_EDGE</name>
              <description>Edge of last capture trigger on channel 2, 0: posedge, 1: negedge</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UPDATE_CFG</name>
          <description>Enable update.</description>
          <addressOffset>0x10C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000055</resetValue>
          <fields>
            <field>
              <name>GLOBAL_UP_EN</name>
              <description>The global enable of update of all active registers in MCPWM module</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GLOBAL_FORCE_UP</name>
              <description>a toggle (software invert its value) will trigger a forced update of all active registers in MCPWM module</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OP0_UP_EN</name>
              <description>When set and PWM_GLOBAL_UP_EN is set, update of active registers in PWM operator 0 are enabled</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OP0_FORCE_UP</name>
              <description>a toggle (software invert its value) will trigger a forced update of active registers in PWM operator 0</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OP1_UP_EN</name>
              <description>When set and PWM_GLOBAL_UP_EN is set, update of active registers in PWM operator 1 are enabled</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OP1_FORCE_UP</name>
              <description>a toggle (software invert its value) will trigger a forced update of active registers in PWM operator 1</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OP2_UP_EN</name>
              <description>When set and PWM_GLOBAL_UP_EN is set, update of active registers in PWM operator 2 are enabled</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OP2_FORCE_UP</name>
              <description>a toggle (software invert its value) will trigger a forced update of active registers in PWM operator 2</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>Interrupt enable bits</description>
          <addressOffset>0x110</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER0_STOP_INT_ENA</name>
              <description>The enable bit for the interrupt triggered when the timer 0 stops.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER1_STOP_INT_ENA</name>
              <description>The enable bit for the interrupt triggered when the timer 1 stops.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER2_STOP_INT_ENA</name>
              <description>The enable bit for the interrupt triggered when the timer 2 stops.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER0_TEZ_INT_ENA</name>
              <description>The enable bit for the interrupt triggered by a PWM timer 0 TEZ event.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER1_TEZ_INT_ENA</name>
              <description>The enable bit for the interrupt triggered by a PWM timer 1 TEZ event.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER2_TEZ_INT_ENA</name>
              <description>The enable bit for the interrupt triggered by a PWM timer 2 TEZ event.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER0_TEP_INT_ENA</name>
              <description>The enable bit for the interrupt triggered by a PWM timer 0 TEP event.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER1_TEP_INT_ENA</name>
              <description>The enable bit for the interrupt triggered by a PWM timer 1 TEP event.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER2_TEP_INT_ENA</name>
              <description>The enable bit for the interrupt triggered by a PWM timer 2 TEP event.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FAULT0_INT_ENA</name>
              <description>The enable bit for the interrupt triggered when event_f0 starts.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FAULT1_INT_ENA</name>
              <description>The enable bit for the interrupt triggered when event_f1 starts.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FAULT2_INT_ENA</name>
              <description>The enable bit for the interrupt triggered when event_f2 starts.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FAULT0_CLR_INT_ENA</name>
              <description>The enable bit for the interrupt triggered when event_f0 ends.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FAULT1_CLR_INT_ENA</name>
              <description>The enable bit for the interrupt triggered when event_f1 ends.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FAULT2_CLR_INT_ENA</name>
              <description>The enable bit for the interrupt triggered when event_f2 ends.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMPR0_TEA_INT_ENA</name>
              <description>The enable bit for the interrupt triggered by a PWM operator 0 TEA event</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMPR1_TEA_INT_ENA</name>
              <description>The enable bit for the interrupt triggered by a PWM operator 1 TEA event</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMPR2_TEA_INT_ENA</name>
              <description>The enable bit for the interrupt triggered by a PWM operator 2 TEA event</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMPR0_TEB_INT_ENA</name>
              <description>The enable bit for the interrupt triggered by a PWM operator 0 TEB event</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMPR1_TEB_INT_ENA</name>
              <description>The enable bit for the interrupt triggered by a PWM operator 1 TEB event</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMPR2_TEB_INT_ENA</name>
              <description>The enable bit for the interrupt triggered by a PWM operator 2 TEB event</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ0_CBC_INT_ENA</name>
              <description>The enable bit for the interrupt triggered by a cycle-by-cycle mode action on PWM0.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ1_CBC_INT_ENA</name>
              <description>The enable bit for the interrupt triggered by a cycle-by-cycle mode action on PWM1.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ2_CBC_INT_ENA</name>
              <description>The enable bit for the interrupt triggered by a cycle-by-cycle mode action on PWM2.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ0_OST_INT_ENA</name>
              <description>The enable bit for the interrupt triggered by a one-shot mode action on PWM0.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ1_OST_INT_ENA</name>
              <description>The enable bit for the interrupt triggered by a one-shot mode action on PWM1.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TZ2_OST_INT_ENA</name>
              <description>The enable bit for the interrupt triggered by a one-shot mode action on PWM2.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP0_INT_ENA</name>
              <description>The enable bit for the interrupt triggered by capture on channel 0.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP1_INT_ENA</name>
              <description>The enable bit for the interrupt triggered by capture on channel 1.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP2_INT_ENA</name>
              <description>The enable bit for the interrupt triggered by capture on channel 2.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW</name>
          <description>Raw interrupt status</description>
          <addressOffset>0x114</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER0_STOP_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered when the timer 0 stops.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER1_STOP_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered when the timer 1 stops.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER2_STOP_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered when the timer 2 stops.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER0_TEZ_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered by a PWM timer 0 TEZ event.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER1_TEZ_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered by a PWM timer 1 TEZ event.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER2_TEZ_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered by a PWM timer 2 TEZ event.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER0_TEP_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered by a PWM timer 0 TEP event.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER1_TEP_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered by a PWM timer 1 TEP event.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER2_TEP_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered by a PWM timer 2 TEP event.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FAULT0_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered when event_f0 starts.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FAULT1_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered when event_f1 starts.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FAULT2_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered when event_f2 starts.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FAULT0_CLR_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered when event_f0 ends.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FAULT1_CLR_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered when event_f1 ends.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FAULT2_CLR_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered when event_f2 ends.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CMPR0_TEA_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered by a PWM operator 0 TEA event</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CMPR1_TEA_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered by a PWM operator 1 TEA event</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CMPR2_TEA_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered by a PWM operator 2 TEA event</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CMPR0_TEB_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered by a PWM operator 0 TEB event</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CMPR1_TEB_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered by a PWM operator 1 TEB event</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CMPR2_TEB_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered by a PWM operator 2 TEB event</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TZ0_CBC_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered by a cycle-by-cycle mode action on PWM0.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TZ1_CBC_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered by a cycle-by-cycle mode action on PWM1.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TZ2_CBC_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered by a cycle-by-cycle mode action on PWM2.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TZ0_OST_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered by a one-shot mode action on PWM0.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TZ1_OST_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered by a one-shot mode action on PWM1.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TZ2_OST_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered by a one-shot mode action on PWM2.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CAP0_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered by capture on channel 0.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CAP1_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered by capture on channel 1.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CAP2_INT_RAW</name>
              <description>The raw status bit for the interrupt triggered by capture on channel 2.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST</name>
          <description>Masked interrupt status</description>
          <addressOffset>0x118</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER0_STOP_INT_ST</name>
              <description>The masked status bit for the interrupt triggered when the timer 0 stops.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER1_STOP_INT_ST</name>
              <description>The masked status bit for the interrupt triggered when the timer 1 stops.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER2_STOP_INT_ST</name>
              <description>The masked status bit for the interrupt triggered when the timer 2 stops.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER0_TEZ_INT_ST</name>
              <description>The masked status bit for the interrupt triggered by a PWM timer 0 TEZ event.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER1_TEZ_INT_ST</name>
              <description>The masked status bit for the interrupt triggered by a PWM timer 1 TEZ event.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER2_TEZ_INT_ST</name>
              <description>The masked status bit for the interrupt triggered by a PWM timer 2 TEZ event.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER0_TEP_INT_ST</name>
              <description>The masked status bit for the interrupt triggered by a PWM timer 0 TEP event.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER1_TEP_INT_ST</name>
              <description>The masked status bit for the interrupt triggered by a PWM timer 1 TEP event.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER2_TEP_INT_ST</name>
              <description>The masked status bit for the interrupt triggered by a PWM timer 2 TEP event.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FAULT0_INT_ST</name>
              <description>The masked status bit for the interrupt triggered when event_f0 starts.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FAULT1_INT_ST</name>
              <description>The masked status bit for the interrupt triggered when event_f1 starts.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FAULT2_INT_ST</name>
              <description>The masked status bit for the interrupt triggered when event_f2 starts.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FAULT0_CLR_INT_ST</name>
              <description>The masked status bit for the interrupt triggered when event_f0 ends.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FAULT1_CLR_INT_ST</name>
              <description>The masked status bit for the interrupt triggered when event_f1 ends.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FAULT2_CLR_INT_ST</name>
              <description>The masked status bit for the interrupt triggered when event_f2 ends.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CMPR0_TEA_INT_ST</name>
              <description>The masked status bit for the interrupt triggered by a PWM operator 0 TEA event</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CMPR1_TEA_INT_ST</name>
              <description>The masked status bit for the interrupt triggered by a PWM operator 1 TEA event</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CMPR2_TEA_INT_ST</name>
              <description>The masked status bit for the interrupt triggered by a PWM operator 2 TEA event</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CMPR0_TEB_INT_ST</name>
              <description>The masked status bit for the interrupt triggered by a PWM operator 0 TEB event</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CMPR1_TEB_INT_ST</name>
              <description>The masked status bit for the interrupt triggered by a PWM operator 1 TEB event</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CMPR2_TEB_INT_ST</name>
              <description>The masked status bit for the interrupt triggered by a PWM operator 2 TEB event</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TZ0_CBC_INT_ST</name>
              <description>The masked status bit for the interrupt triggered by a cycle-by-cycle mode action on PWM0.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TZ1_CBC_INT_ST</name>
              <description>The masked status bit for the interrupt triggered by a cycle-by-cycle mode action on PWM1.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TZ2_CBC_INT_ST</name>
              <description>The masked status bit for the interrupt triggered by a cycle-by-cycle mode action on PWM2.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TZ0_OST_INT_ST</name>
              <description>The masked status bit for the interrupt triggered by a one-shot mode action on PWM0.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TZ1_OST_INT_ST</name>
              <description>The masked status bit for the interrupt triggered by a one-shot mode action on PWM1.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TZ2_OST_INT_ST</name>
              <description>The masked status bit for the interrupt triggered by a one-shot mode action on PWM2.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CAP0_INT_ST</name>
              <description>The masked status bit for the interrupt triggered by capture on channel 0.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CAP1_INT_ST</name>
              <description>The masked status bit for the interrupt triggered by capture on channel 1.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CAP2_INT_ST</name>
              <description>The masked status bit for the interrupt triggered by capture on channel 2.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>Interrupt clear bits</description>
          <addressOffset>0x11C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER0_STOP_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered when the timer 0 stops.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TIMER1_STOP_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered when the timer 1 stops.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TIMER2_STOP_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered when the timer 2 stops.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TIMER0_TEZ_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered by a PWM timer 0 TEZ event.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TIMER1_TEZ_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered by a PWM timer 1 TEZ event.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TIMER2_TEZ_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered by a PWM timer 2 TEZ event.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TIMER0_TEP_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered by a PWM timer 0 TEP event.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TIMER1_TEP_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered by a PWM timer 1 TEP event.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TIMER2_TEP_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered by a PWM timer 2 TEP event.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>FAULT0_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered when event_f0 starts.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>FAULT1_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered when event_f1 starts.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>FAULT2_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered when event_f2 starts.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>FAULT0_CLR_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered when event_f0 ends.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>FAULT1_CLR_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered when event_f1 ends.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>FAULT2_CLR_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered when event_f2 ends.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CMPR0_TEA_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered by a PWM operator 0 TEA event</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CMPR1_TEA_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered by a PWM operator 1 TEA event</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CMPR2_TEA_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered by a PWM operator 2 TEA event</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CMPR0_TEB_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered by a PWM operator 0 TEB event</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CMPR1_TEB_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered by a PWM operator 1 TEB event</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CMPR2_TEB_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered by a PWM operator 2 TEB event</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TZ0_CBC_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered by a cycle-by-cycle mode action on PWM0.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TZ1_CBC_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered by a cycle-by-cycle mode action on PWM1.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TZ2_CBC_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered by a cycle-by-cycle mode action on PWM2.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TZ0_OST_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered by a one-shot mode action on PWM0.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TZ1_OST_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered by a one-shot mode action on PWM1.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TZ2_OST_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered by a one-shot mode action on PWM2.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CAP0_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered by capture on channel 0.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CAP1_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered by capture on channel 1.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CAP2_INT_CLR</name>
              <description>Set this bit to clear the interrupt triggered by capture on channel 2.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLK</name>
          <description>MCPWM APB configuration register</description>
          <addressOffset>0x120</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EN</name>
              <description>Force clock on for this register file</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>VERSION</name>
          <description>Version register.</description>
          <addressOffset>0x124</addressOffset>
          <size>0x20</size>
          <resetValue>0x01509110</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>Version of this register file</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="PWM0">
      <name>PWM1</name>
      <baseAddress>0x6002C000</baseAddress>
      <interrupt>
        <name>PWM1</name>
        <value>32</value>
      </interrupt>
    </peripheral>
    <peripheral>
      <name>RMT</name>
      <description>Remote control</description>
      <groupName>RMT</groupName>
      <baseAddress>0x60016000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xD0</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>RMT</name>
        <value>40</value>
      </interrupt>
      <registers>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>TX_CH%sDATA</name>
          <description>The read and write  data register for CHANNEL%s by apb fifo access.</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CHDATA</name>
              <description>Read and write data for channel %s via APB FIFO.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>RX_CH%sDATA</name>
          <description>The read and write  data register for CHANNEL$n by apb fifo access.</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CHDATA</name>
              <description>Read and write data for channel 0 via APB FIFO.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>CH%s_TX_CONF0</name>
          <description>Channel %s configure register 0</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <resetValue>0x00710200</resetValue>
          <fields>
            <field>
              <name>TX_START</name>
              <description>Set this bit to start sending data on CHANNEL%s.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MEM_RD_RST</name>
              <description>Set this bit to reset read ram address for CHANNEL%s by accessing transmitter.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APB_MEM_RST</name>
              <description>Set this bit to reset W/R ram address for CHANNEL%s by accessing apb fifo.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TX_CONTI_MODE</name>
              <description>Set this bit to restart transmission  from the first data to the last data in CHANNEL%s.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_TX_WRAP_EN</name>
              <description>This is the channel %s enable bit for wraparound mode: it will resume sending at the start when the data to be sent is more than its memory size.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IDLE_OUT_LV</name>
              <description>This bit configures the level of output signal in CHANNEL%s when the latter is in IDLE state.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IDLE_OUT_EN</name>
              <description>This is the output enable-control bit for CHANNEL%s in IDLE state.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_STOP</name>
              <description>Set this bit to stop the transmitter of CHANNEL%s sending data out.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIV_CNT</name>
              <description>This register is used to configure the divider for clock of CHANNEL%s.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_SIZE</name>
              <description>This register is used to configure the maximum size of memory allocated to CHANNEL%s.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CARRIER_EFF_EN</name>
              <description>1: Add carrier modulation on the output signal only at the send data state for CHANNEL%s. 0: Add carrier modulation on the output signal at all state for CHANNEL%s. Only valid when RMT_CARRIER_EN_CH%s is 1.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CARRIER_EN</name>
              <description>This is the carrier modulation enable-control bit for CHANNEL%s. 1: Add carrier modulation in the output signal. 0: No carrier modulation in sig_out.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CARRIER_OUT_LV</name>
              <description>This bit is used to configure the position of carrier wave for CHANNEL%s.

1'h0: add carrier wave on low level.

1'h1: add carrier wave on high level.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFIFO_RST</name>
              <description>Reserved</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CONF_UPDATE</name>
              <description>synchronization bit for CHANNEL%s</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x8</dimIncrement>
          <name>CH%s_RX_CONF0</name>
          <description>Channel %s configure register 0</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <resetValue>0x317FFF02</resetValue>
          <fields>
            <field>
              <name>DIV_CNT</name>
              <description>This register is used to configure the divider for clock of CHANNEL%s.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IDLE_THRES</name>
              <description>When no edge is detected on the input signal and continuous clock cycles is longer than this register value, received process is finished.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_SIZE</name>
              <description>This register is used to configure the maximum size of memory allocated to CHANNEL%s.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CARRIER_EN</name>
              <description>This is the carrier modulation enable-control bit for CHANNEL%s. 1: Add carrier modulation in the output signal. 0: No carrier modulation in sig_out.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CARRIER_OUT_LV</name>
              <description>This bit is used to configure the position of carrier wave for CHANNEL%s.

1'h0: add carrier wave on low level.

1'h1: add carrier wave on high level.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x8</dimIncrement>
          <name>CH%s_RX_CONF1</name>
          <description>Channel %s configure register 1</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <resetValue>0x000001E8</resetValue>
          <fields>
            <field>
              <name>RX_EN</name>
              <description>Set this bit to enable receiver to receive data on CHANNEL%s.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_WR_RST</name>
              <description>Set this bit to reset write ram address for CHANNEL%s by accessing receiver.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APB_MEM_RST</name>
              <description>Set this bit to reset W/R ram address for CHANNEL%s by accessing apb fifo.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MEM_OWNER</name>
              <description>This register marks the ownership of CHANNEL%s's ram block.

1'h1: Receiver is using the ram.

1'h0: APB bus is using the ram.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_FILTER_EN</name>
              <description>This is the receive filter's enable bit for CHANNEL%s.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_FILTER_THRES</name>
              <description>Ignores the input pulse when its width is smaller than this register value in APB clock periods (in receive mode).</description>
              <bitOffset>5</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_RX_WRAP_EN</name>
              <description>This is the channel %s enable bit for wraparound mode: it will resume receiving at the start when the data to be received is more than its memory size.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFIFO_RST</name>
              <description>Reserved</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CONF_UPDATE</name>
              <description>synchronization bit for CHANNEL%s</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>CH%s_TX_STATUS</name>
          <description>Channel %s status register</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MEM_RADDR_EX</name>
              <description>This register records the memory address offset when transmitter of CHANNEL%s is using the RAM.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_MEM_WADDR</name>
              <description>This register records the memory address offset when writes RAM over APB bus.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>STATE</name>
              <description>This register records the FSM status of CHANNEL%s.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MEM_EMPTY</name>
              <description>This status bit will be set when the data to be set is more than memory size and the wraparound mode is disabled.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_MEM_WR_ERR</name>
              <description>This status bit will be set if the offset address out of memory size when writes via APB bus.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>CH%s_RX_STATUS</name>
          <description>Channel %s status register</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <resetValue>0x000600C0</resetValue>
          <fields>
            <field>
              <name>MEM_WADDR_EX</name>
              <description>This register records the memory address offset when receiver of CHANNEL%s is using the RAM.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_MEM_RADDR</name>
              <description>This register records the memory address offset when reads RAM over APB bus.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>STATE</name>
              <description>This register records the FSM status of CHANNEL%s.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MEM_OWNER_ERR</name>
              <description>This status bit will be set when the ownership of memory block is wrong.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MEM_FULL</name>
              <description>This status bit will be set if the receiver receives more data than the memory size.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APB_MEM_RD_ERR</name>
              <description>This status bit will be set if the offset address out of memory size when reads via APB bus.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW</name>
          <description>Raw interrupt status</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <dim>4</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-3</dimIndex>
              <name>CH%s_TX_END_INT_RAW</name>
              <description>The interrupt raw bit for CHANNEL%s. Triggered when transmission done.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <dim>4</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-3</dimIndex>
              <name>CH%s_TX_ERR_INT_RAW</name>
              <description>The interrupt raw bit for CHANNEL%s. Triggered when error occurs.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <dim>4</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-3</dimIndex>
              <name>CH%s_TX_THR_EVENT_INT_RAW</name>
              <description>The interrupt raw bit for CHANNEL%s. Triggered when transmitter sent more data than configured value.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <dim>4</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-3</dimIndex>
              <name>CH%s_TX_LOOP_INT_RAW</name>
              <description>The interrupt raw bit for CHANNEL%s. Triggered when the loop count reaches the configured threshold value.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <dim>4</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>4-7</dimIndex>
              <name>CH%s_RX_END_INT_RAW</name>
              <description>The interrupt raw bit for CHANNEL4. Triggered when reception done.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <dim>4</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>4-7</dimIndex>
              <name>CH%s_RX_ERR_INT_RAW</name>
              <description>The interrupt raw bit for CHANNEL4. Triggered when error occurs.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CH4_RX_THR_EVENT_INT_RAW</name>
              <description>The interrupt raw bit for CHANNEL4. Triggered when receiver receive more data than configured value.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CH5_RX_THR_EVENT_INT_RAW</name>
              <description>The interrupt raw bit for CHANNEL5. Triggered when receiver receive more data than configured value.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CH6_RX_THR_EVENT_INT_RAW</name>
              <description>The interrupt raw bit for CHANNEL6. Triggered when receiver receive more data than configured value.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CH7_RX_THR_EVENT_INT_RAW</name>
              <description>The interrupt raw bit for CHANNEL7. Triggered when receiver receive more data than configured value.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_CH3_DMA_ACCESS_FAIL_INT_RAW</name>
              <description>The interrupt raw bit for CHANNEL3. Triggered when dma accessing CHANNEL3 fails.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_CH7_DMA_ACCESS_FAIL_INT_RAW</name>
              <description>The interrupt raw bit for CHANNEL7. Triggered when dma accessing CHANNEL7 fails.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST</name>
          <description>Masked interrupt status</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <dim>4</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-3</dimIndex>
              <name>CH%s_TX_END_INT_ST</name>
              <description>The masked interrupt status bit for CH%s_TX_END_INT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <dim>4</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-3</dimIndex>
              <name>CH%s_TX_ERR_INT_ST</name>
              <description>The masked interrupt status bit for CH%s_ERR_INT.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <dim>4</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-3</dimIndex>
              <name>CH%s_TX_THR_EVENT_INT_ST</name>
              <description>The masked interrupt status bit for CH%s_TX_THR_EVENT_INT.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <dim>4</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-3</dimIndex>
              <name>CH%s_TX_LOOP_INT_ST</name>
              <description>The masked interrupt status bit for CH%s_TX_LOOP_INT.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <dim>4</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>4-7</dimIndex>
              <name>CH%s_RX_END_INT_ST</name>
              <description>The masked interrupt status bit for CH4_RX_END_INT.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <dim>4</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>4-7</dimIndex>
              <name>CH%s_RX_ERR_INT_ST</name>
              <description>The masked interrupt status bit for CH4_ERR_INT.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CH4_RX_THR_EVENT_INT_ST</name>
              <description>The masked interrupt status bit for CH4_RX_THR_EVENT_INT.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CH5_RX_THR_EVENT_INT_ST</name>
              <description>The masked interrupt status bit for CH5_RX_THR_EVENT_INT.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CH6_RX_THR_EVENT_INT_ST</name>
              <description>The masked interrupt status bit for CH6_RX_THR_EVENT_INT.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CH7_RX_THR_EVENT_INT_ST</name>
              <description>The masked interrupt status bit for CH7_RX_THR_EVENT_INT.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_CH3_DMA_ACCESS_FAIL_INT_ST</name>
              <description>The masked interrupt status bit for  CH3_DMA_ACCESS_FAIL_INT.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_CH7_DMA_ACCESS_FAIL_INT_ST</name>
              <description>The masked interrupt status bit for  CH7_DMA_ACCESS_FAIL_INT.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>Interrupt enable bits</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <dim>4</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-3</dimIndex>
              <name>CH%s_TX_END_INT_ENA</name>
              <description>The interrupt enable bit for CH%s_TX_END_INT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <dim>4</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-3</dimIndex>
              <name>CH%s_TX_ERR_INT_ENA</name>
              <description>The interrupt enable bit for CH%s_ERR_INT.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <dim>4</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-3</dimIndex>
              <name>CH%s_TX_THR_EVENT_INT_ENA</name>
              <description>The interrupt enable bit for CH%s_TX_THR_EVENT_INT.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <dim>4</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-3</dimIndex>
              <name>CH%s_TX_LOOP_INT_ENA</name>
              <description>The interrupt enable bit for CH%s_TX_LOOP_INT.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <dim>4</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>4-7</dimIndex>
              <name>CH%s_RX_END_INT_ENA</name>
              <description>The interrupt enable bit for CH4_RX_END_INT.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <dim>4</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>4-7</dimIndex>
              <name>CH%s_RX_ERR_INT_ENA</name>
              <description>The interrupt enable bit for CH4_ERR_INT.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CH4_RX_THR_EVENT_INT_ENA</name>
              <description>The interrupt enable bit for CH4_RX_THR_EVENT_INT.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CH5_RX_THR_EVENT_INT_ENA</name>
              <description>The interrupt enable bit for CH5_RX_THR_EVENT_INT.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CH6_RX_THR_EVENT_INT_ENA</name>
              <description>The interrupt enable bit for CH6_RX_THR_EVENT_INT.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CH7_RX_THR_EVENT_INT_ENA</name>
              <description>The interrupt enable bit for CH7_RX_THR_EVENT_INT.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_CH3_DMA_ACCESS_FAIL_INT_ENA</name>
              <description>The interrupt enable bit for CH3_DMA_ACCESS_FAIL_INT.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_CH7_DMA_ACCESS_FAIL_INT_ENA</name>
              <description>The interrupt enable bit for CH7_DMA_ACCESS_FAIL_INT.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>Interrupt clear bits</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <dim>4</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-3</dimIndex>
              <name>CH%s_TX_END_INT_CLR</name>
              <description>Set this bit to clear theCH%s_TX_END_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <dim>4</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-3</dimIndex>
              <name>CH%s_TX_ERR_INT_CLR</name>
              <description>Set this bit to clear theCH%s_ERR_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <dim>4</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-3</dimIndex>
              <name>CH%s_TX_THR_EVENT_INT_CLR</name>
              <description>Set this bit to clear theCH%s_TX_THR_EVENT_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <dim>4</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>0-3</dimIndex>
              <name>CH%s_TX_LOOP_INT_CLR</name>
              <description>Set this bit to clear theCH%s_TX_LOOP_INT interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <dim>4</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>4-7</dimIndex>
              <name>CH%s_RX_END_INT_CLR</name>
              <description>Set this bit to clear theCH4_RX_END_INT interrupt.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <dim>4</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>RX_CH4,RX_CH5,RX_CH6,RX_CH7</dimIndex>
              <name>CH%s_RX_ERR_INT_CLR</name>
              <description>Set this bit to clear theCH4_ERR_INT interrupt.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CH4_RX_THR_EVENT_INT_CLR</name>
              <description>Set this bit to clear theCH4_RX_THR_EVENT_INT interrupt.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CH5_RX_THR_EVENT_INT_CLR</name>
              <description>Set this bit to clear theCH5_RX_THR_EVENT_INT interrupt.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CH6_RX_THR_EVENT_INT_CLR</name>
              <description>Set this bit to clear theCH6_RX_THR_EVENT_INT interrupt.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CH7_RX_THR_EVENT_INT_CLR</name>
              <description>Set this bit to clear theCH7_RX_THR_EVENT_INT interrupt.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TX_CH3_DMA_ACCESS_FAIL_INT_CLR</name>
              <description>Set this bit to clear the CH3_DMA_ACCESS_FAIL_INT interrupt.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RX_CH7_DMA_ACCESS_FAIL_INT_CLR</name>
              <description>Set this bit to clear the CH7_DMA_ACCESS_FAIL_INT interrupt.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>CH%sCARRIER_DUTY</name>
          <description>Channel %s duty cycle configuration register</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <resetValue>0x00400040</resetValue>
          <fields>
            <field>
              <name>CARRIER_LOW</name>
              <description>This register is used to configure carrier wave 's low level clock period for CHANNEL%s.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CARRIER_HIGH</name>
              <description>This register is used to configure carrier wave 's high level clock period for CHANNEL%s.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>CH%s_RX_CARRIER_RM</name>
          <description>Channel %s carrier remove register</description>
          <addressOffset>0x90</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CARRIER_LOW_THRES</name>
              <description>The low level period in a carrier modulation mode is (REG_RMT_REG_CARRIER_LOW_THRES_CH%s + 1) for channel %s.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CARRIER_HIGH_THRES</name>
              <description>The high level period in a carrier modulation mode is (REG_RMT_REG_CARRIER_HIGH_THRES_CH%s + 1) for channel %s.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>CH%s_TX_LIM</name>
          <description>Channel %s Tx event configuration register</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000080</resetValue>
          <fields>
            <field>
              <name>TX_LIM</name>
              <description>This register is used to configure the maximum entries that CHANNEL%s can send out.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_LOOP_NUM</name>
              <description>This register is used to configure the maximum loop count when tx_conti_mode is valid.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_LOOP_CNT_EN</name>
              <description>This register is the enabled bit for loop count.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LOOP_COUNT_RESET</name>
              <description>This register is used to reset the loop count when tx_conti_mode is valid.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>LOOP_STOP_EN</name>
              <description>This bit is used to enable the loop send stop function after the loop counter counts to  loop number for CHANNEL%s.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>CH%s_RX_LIM</name>
          <description>Channel %s Rx event configuration register</description>
          <addressOffset>0xB0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000080</resetValue>
          <fields>
            <field>
              <name>RX_LIM</name>
              <description>This register is used to configure the maximum entries that CHANNEL%s can receive.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYS_CONF</name>
          <description>RMT apb configuration register</description>
          <addressOffset>0xC0</addressOffset>
          <size>0x20</size>
          <resetValue>0x05000010</resetValue>
          <fields>
            <field>
              <name>APB_FIFO_MASK</name>
              <description>1'h1: access memory directly.   1'h0: access memory by FIFO.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_CLK_FORCE_ON</name>
              <description>Set this bit to enable the clock for RMT memory.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_FORCE_PD</name>
              <description>Set this bit to power down RMT memory.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_FORCE_PU</name>
              <description>1: Disable RMT memory light sleep power down function. 0: Power down RMT memory when RMT is in light sleep mode.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLK_DIV_NUM</name>
              <description>the integral part of the fractional divisor</description>
              <bitOffset>4</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLK_DIV_A</name>
              <description>the numerator of the fractional part of the fractional divisor</description>
              <bitOffset>12</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLK_DIV_B</name>
              <description>the denominator of the fractional part of the fractional divisor</description>
              <bitOffset>18</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLK_SEL</name>
              <description>choose the clock source of rmt_sclk. 1:CLK_80Mhz;2:CLK_8MHz; 2:XTAL</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLK_ACTIVE</name>
              <description>rmt_sclk switch</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EN</name>
              <description>RMT register clock gate enable signal. 1: Power up the drive clock of registers. 0: Power down the drive clock of registers</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_SIM</name>
          <description>RMT TX synchronous register</description>
          <addressOffset>0xC4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CH0</name>
              <description>Set this bit to enable CHANNEL0 to start sending data synchronously with other enabled channels.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CH1</name>
              <description>Set this bit to enable CHANNEL1 to start sending data synchronously with other enabled channels.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CH2</name>
              <description>Set this bit to enable CHANNEL2 to start sending data synchronously with other enabled channels.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CH3</name>
              <description>Set this bit to enable CHANNEL3 to start sending data synchronously with other enabled channels.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EN</name>
              <description>This register is used to enable multiple of channels to start sending data synchronously.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REF_CNT_RST</name>
          <description>RMT clock divider reset register</description>
          <addressOffset>0xC8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <dim>8</dim>
              <dimIncrement>0x1</dimIncrement>
              <dimIndex>TX_REF_CNT_RST_CH0,TX_REF_CNT_RST_CH1,TX_REF_CNT_RST_CH2,TX_REF_CNT_RST_CH3,RX_REF_CNT_RST_CH4,RX_REF_CNT_RST_CH5,RX_REF_CNT_RST_CH6,RX_REF_CNT_RST_CH7</dimIndex>
              <name>CH%s</name>
              <description>This register is used to reset the clock divider of CHANNEL0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>RMT version register</description>
          <addressOffset>0xCC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02101181</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>This is the version register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>RNG</name>
      <description>Hardware random number generator</description>
      <groupName>RNG</groupName>
      <baseAddress>0x60034F6C</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x4</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>DATA</name>
          <description>Random number data</description>
          <addressOffset>0x110</addressOffset>
          <size>0x20</size>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>RSA</name>
      <description>RSA (Rivest Shamir Adleman) Accelerator</description>
      <groupName>RSA</groupName>
      <baseAddress>0x6003C000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x834</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>RSA</name>
        <value>76</value>
      </interrupt>
      <registers>
        <register>
          <dim>512</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>M_MEM[%s]</name>
          <description>Memory M</description>
          <addressOffset>0x0</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <dim>512</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>Z_MEM[%s]</name>
          <description>Memory Z</description>
          <addressOffset>0x200</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <dim>512</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>Y_MEM[%s]</name>
          <description>Memory Y</description>
          <addressOffset>0x400</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <dim>512</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>X_MEM[%s]</name>
          <description>Memory X</description>
          <addressOffset>0x600</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <name>M_PRIME</name>
          <description>RSA M' register</description>
          <addressOffset>0x800</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>M_PRIME</name>
              <description>Stores M'</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MODE</name>
          <description>RSA length mode register</description>
          <addressOffset>0x804</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MODE</name>
              <description>Stores the RSA length mode</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLEAN</name>
          <description>RSA clean register</description>
          <addressOffset>0x808</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CLEAN</name>
              <description>The content of this bit is 1 when memories complete initialization.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MODEXP_START</name>
          <description>Modular exponentiation trigger register.</description>
          <addressOffset>0x80C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MODEXP_START</name>
              <description>Set this bit to 1 to start the modular exponentiation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MODMULT_START</name>
          <description>Modular multiplication trigger register.</description>
          <addressOffset>0x810</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MODMULT_START</name>
              <description>Set this bit to 1 to start the modular multiplication</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MULT_START</name>
          <description>Normal multiplication trigger register.</description>
          <addressOffset>0x814</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MULT_START</name>
              <description>Set this bit to 1 to start the multiplicaiton.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IDLE</name>
          <description>RSA idle register</description>
          <addressOffset>0x818</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IDLE</name>
              <description>The content of this bit is 1 when the RSA accelerator is idle.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLEAR_INTERRUPT</name>
          <description>RSA interrupt clear register</description>
          <addressOffset>0x81C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CLEAR_INTERRUPT</name>
              <description>set this bit to 1 to clear the RSA interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONSTANT_TIME</name>
          <description>CONSTANT_TIME option control register</description>
          <addressOffset>0x820</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>CONSTANT_TIME</name>
              <description>Controls the CONSTANT_TIME option. 0: acceleration. 1: no acceleration(by default).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SEARCH_ENABLE</name>
          <description>SEARCH option enable register</description>
          <addressOffset>0x824</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SEARCH_ENABLE</name>
              <description>Controls the SEARCH option. 0: no acceleration(by default). 1: acceleration.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SEARCH_POS</name>
          <description>RSA search position configure register</description>
          <addressOffset>0x828</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SEARCH_POS</name>
              <description>This field is used to configure the starting search position when the acceleration option of SEARCH is used.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTERRUPT_ENA</name>
          <description>RSA interrupt enable register</description>
          <addressOffset>0x82C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INTERRUPT_ENA</name>
              <description>Set this bit to 1 to enable the RSA interrupt. This option is enabled by default.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>RSA version control register</description>
          <addressOffset>0x830</addressOffset>
          <size>0x20</size>
          <resetValue>0x20191231</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>rsa version information</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>RTC_CNTL</name>
      <description>Real Time Controller</description>
      <groupName>RTC_CNTL</groupName>
      <baseAddress>0x60008000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x15C</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>RTC_CORE</name>
        <value>39</value>
      </interrupt>
      <registers>
        <register>
          <name>OPTIONS0</name>
          <description>RTC common configure register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x1C00A000</resetValue>
          <fields>
            <field>
              <name>SW_STALL_APPCPU_C0</name>
              <description>{reg_sw_stall_appcpu_c1[5:0],  reg_sw_stall_appcpu_c0[1:0]} == 0x86 will stall APP CPU</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_STALL_PROCPU_C0</name>
              <description>{reg_sw_stall_procpu_c1[5:0],  reg_sw_stall_procpu_c0[1:0]} == 0x86 will stall PRO CPU</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_APPCPU_RST</name>
              <description>APP CPU SW reset</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SW_PROCPU_RST</name>
              <description>PRO CPU SW reset</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BB_I2C_FORCE_PD</name>
              <description>BB_I2C force power down</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BB_I2C_FORCE_PU</name>
              <description>BB_I2C force power up</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BBPLL_I2C_FORCE_PD</name>
              <description>BB_PLL _I2C force power down</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BBPLL_I2C_FORCE_PU</name>
              <description>BB_PLL_I2C force power up</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BBPLL_FORCE_PD</name>
              <description>BB_PLL force power down</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BBPLL_FORCE_PU</name>
              <description>BB_PLL force power up</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTL_FORCE_PD</name>
              <description>crystall force power down</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTL_FORCE_PU</name>
              <description>crystall force power up</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTL_EN_WAIT</name>
              <description>wait bias_sleep and current source wakeup</description>
              <bitOffset>14</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTL_FORCE_ISO</name>
              <description>No public</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FORCE_ISO</name>
              <description>No public</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ANALOG_FORCE_ISO</name>
              <description>No public</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTL_FORCE_NOISO</name>
              <description>No public</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FORCE_NOISO</name>
              <description>No public</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ANALOG_FORCE_NOISO</name>
              <description>No public</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_WRAP_FORCE_RST</name>
              <description>digital wrap force reset in deep sleep</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_WRAP_FORCE_NORST</name>
              <description>digital core force no reset in deep sleep</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_SYS_RST</name>
              <description>SW system reset</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLP_TIMER0</name>
          <description>configure min sleep time</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLP_VAL_LO</name>
              <description>RTC sleep timer low 32 bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLP_TIMER1</name>
          <description>configure sleep time hi</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLP_VAL_HI</name>
              <description>RTC sleep timer high 16 bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MAIN_TIMER_ALARM_EN</name>
              <description>timer alarm enable bit</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIME_UPDATE</name>
          <description>update rtc main timer</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_SYS_STALL</name>
              <description>Enable to record system stall time</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER_XTL_OFF</name>
              <description>Enable to record 40M XTAL OFF time</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER_SYS_RST</name>
              <description>enable to record system reset time</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIME_UPDATE</name>
              <description>Set 1: to update register with RTC timer</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIME_LOW0</name>
          <description>read rtc_main timer low bits</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_VALUE0_LOW</name>
              <description>RTC timer low 32 bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIME_HIGH0</name>
          <description>read rtc_main timer high bits</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_VALUE0_HIGH</name>
              <description>RTC timer high 16 bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATE0</name>
          <description>configure chip sleep</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SW_CPU_INT</name>
              <description>rtc software interrupt to main cpu</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLP_REJECT_CAUSE_CLR</name>
              <description>clear rtc sleep reject cause</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APB2RTC_BRIDGE_SEL</name>
              <description>1: APB to RTC using bridge,  0: APB to RTC using sync</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_ACTIVE_IND</name>
              <description>SDIO active indication</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLP_WAKEUP</name>
              <description>leep wakeup bit</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_REJECT</name>
              <description>leep reject bit</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLEEP_EN</name>
              <description>sleep enable bit</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER1</name>
          <description>rtc state wait time</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <resetValue>0x28140403</resetValue>
          <fields>
            <field>
              <name>CPU_STALL_EN</name>
              <description>CPU stall enable bit</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CPU_STALL_WAIT</name>
              <description>CPU stall wait cycles in fast_clk_rtc</description>
              <bitOffset>1</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK8M_WAIT</name>
              <description>CK8M wait cycles in slow_clk_rtc</description>
              <bitOffset>6</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTL_BUF_WAIT</name>
              <description>XTAL wait cycles in slow_clk_rtc</description>
              <bitOffset>14</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_BUF_WAIT</name>
              <description>PLL wait cycles in slow_clk_rtc</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER2</name>
          <description>rtc monitor state delay time</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <resetValue>0x01080000</resetValue>
          <fields>
            <field>
              <name>ULPCP_TOUCH_START_WAIT</name>
              <description>wait cycles in slow_clk_rtc before ULP-coprocessor / touch controller start to work</description>
              <bitOffset>15</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MIN_TIME_CK8M_OFF</name>
              <description>minimal cycles in slow_clk_rtc for CK8M in power down state</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER3</name>
          <description>No public</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <resetValue>0x14160A08</resetValue>
          <fields>
            <field>
              <name>WIFI_WAIT_TIMER</name>
              <description>No public</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WIFI_POWERUP_TIMER</name>
              <description>No public</description>
              <bitOffset>9</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_WAIT_TIMER</name>
              <description>No public</description>
              <bitOffset>16</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_POWERUP_TIMER</name>
              <description>No public</description>
              <bitOffset>25</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER4</name>
          <description>No public</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <resetValue>0x10200A08</resetValue>
          <fields>
            <field>
              <name>WAIT_TIMER</name>
              <description>No public</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>POWERUP_TIMER</name>
              <description>No public</description>
              <bitOffset>9</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_WRAP_WAIT_TIMER</name>
              <description>No public</description>
              <bitOffset>16</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_WRAP_POWERUP_TIMER</name>
              <description>No public</description>
              <bitOffset>25</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER5</name>
          <description>configure min sleep time</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00008000</resetValue>
          <fields>
            <field>
              <name>MIN_SLP_VAL</name>
              <description>minimal sleep cycles in slow_clk_rtc</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER6</name>
          <description>No public</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <resetValue>0x10200A08</resetValue>
          <fields>
            <field>
              <name>CPU_TOP_WAIT_TIMER</name>
              <description>No public</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CPU_TOP_POWERUP_TIMER</name>
              <description>No public</description>
              <bitOffset>9</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_PERI_WAIT_TIMER</name>
              <description>No public</description>
              <bitOffset>16</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_PERI_POWERUP_TIMER</name>
              <description>No public</description>
              <bitOffset>25</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANA_CONF</name>
          <description>analog configure register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <resetValue>0x00440000</resetValue>
          <fields>
            <field>
              <name>I2C_RESET_POR_FORCE_PD</name>
              <description>force down I2C_RESET_POR</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_RESET_POR_FORCE_PU</name>
              <description>force on I2C_RESET_POR</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GLITCH_RST_EN</name>
              <description>enable clk glitch</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_I2C_PU</name>
              <description>PLLA force power up</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ANALOG_TOP_ISO_SLEEP</name>
              <description>PLLA force power down</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ANALOG_TOP_ISO_MONITOR</name>
              <description>PLLA force power up</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BBPLL_CAL_SLP_START</name>
              <description>start BBPLL calibration during sleep</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PVTMON_PU</name>
              <description>1: PVTMON power up,  otherwise power down</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXRF_I2C_PU</name>
              <description>1: TXRF_I2C power up,  otherwise power down</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RFRX_PBUS_PU</name>
              <description>1: RFRX_PBUS power up,  otherwise power down</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CKGEN_I2C_PU</name>
              <description>1: CKGEN_I2C power up,  otherwise power down</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_I2C_PU</name>
              <description>power on pll i2c</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RESET_STATE</name>
          <description>get reset state</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <resetValue>0x00003000</resetValue>
          <fields>
            <field>
              <name>RESET_CAUSE_PROCPU</name>
              <description>reset cause of PRO CPU</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RESET_CAUSE_APPCPU</name>
              <description>reset cause of APP CPU</description>
              <bitOffset>6</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APPCPU_STAT_VECTOR_SEL</name>
              <description>APP CPU state vector sel</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PROCPU_STAT_VECTOR_SEL</name>
              <description>PRO CPU state vector sel</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESET_FLAG_PROCPU</name>
              <description>PRO CPU reset_flag</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RESET_FLAG_APPCPU</name>
              <description>APP CPU reset flag</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RESET_FLAG_PROCPU_CLR</name>
              <description>clear PRO CPU reset_flag</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RESET_FLAG_APPCPU_CLR</name>
              <description>clear APP CPU reset flag</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APPCPU_OCD_HALT_ON_RESET</name>
              <description>APPCPU OcdHaltOnReset</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PROCPU_OCD_HALT_ON_RESET</name>
              <description>PROCPU OcdHaltOnReset</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESET_FLAG_JTAG_PROCPU</name>
              <description>jtag reset flag</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RESET_FLAG_JTAG_APPCPU</name>
              <description>jtag reset flag</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RESET_FLAG_JTAG_PROCPU_CLR</name>
              <description>clear jtag reset flag</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RESET_FLAG_JTAG_APPCPU_CLR</name>
              <description>clear jtag reset flag</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APP_DRESET_MASK</name>
              <description>bypass cpu1 dreset</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_DRESET_MASK</name>
              <description>bypass cpu0 dreset</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WAKEUP_STATE</name>
          <description>configure wakeup state</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00060000</resetValue>
          <fields>
            <field>
              <name>WAKEUP_ENA</name>
              <description>wakeup enable bitmap</description>
              <bitOffset>15</bitOffset>
              <bitWidth>17</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA_RTC</name>
          <description>configure rtc interrupt register</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLP_WAKEUP_INT_ENA</name>
              <description>enable sleep wakeup interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_REJECT_INT_ENA</name>
              <description>enable sleep reject interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_IDLE_INT_ENA</name>
              <description>enable SDIO idle interrupt</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_INT_ENA</name>
              <description>enable RTC WDT interrupt</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_SCAN_DONE_INT_ENA</name>
              <description>enable touch scan done interrupt</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ULP_CP_INT_ENA</name>
              <description>enable ULP-coprocessor interrupt</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_DONE_INT_ENA</name>
              <description>enable touch done interrupt</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_ACTIVE_INT_ENA</name>
              <description>enable touch active interrupt</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_INACTIVE_INT_ENA</name>
              <description>enable touch inactive interrupt</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BROWN_OUT_INT_ENA</name>
              <description>enable brown out interrupt</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MAIN_TIMER_INT_ENA</name>
              <description>enable RTC main timer interrupt</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC1_INT_ENA</name>
              <description>enable saradc1 interrupt</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TSENS_INT_ENA</name>
              <description>enable tsens interrupt</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_INT_ENA</name>
              <description>enable riscV cocpu interrupt</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARADC2_INT_ENA</name>
              <description>enable saradc2 interrupt</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SWD_INT_ENA</name>
              <description>enable super watch dog interrupt</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_DEAD_INT_ENA</name>
              <description>enable xtal32k_dead  interrupt</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_TRAP_INT_ENA</name>
              <description>enable cocpu trap interrupt</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_TIMEOUT_INT_ENA</name>
              <description>enable touch timeout interrupt</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GLITCH_DET_INT_ENA</name>
              <description>enbale gitch det interrupt</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_APPROACH_LOOP_DONE_INT_ENA</name>
              <description>touch approach mode loop interrupt</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW_RTC</name>
          <description>rtc interrupt register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLP_WAKEUP_INT_RAW</name>
              <description>sleep wakeup interrupt raw</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLP_REJECT_INT_RAW</name>
              <description>sleep reject interrupt raw</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SDIO_IDLE_INT_RAW</name>
              <description>SDIO idle interrupt raw</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>WDT_INT_RAW</name>
              <description>RTC WDT interrupt raw</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_SCAN_DONE_INT_RAW</name>
              <description>enable touch scan done interrupt raw</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ULP_CP_INT_RAW</name>
              <description>ULP-coprocessor interrupt raw</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_DONE_INT_RAW</name>
              <description>touch interrupt raw</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_ACTIVE_INT_RAW</name>
              <description>touch active interrupt raw</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_INACTIVE_INT_RAW</name>
              <description>touch inactive interrupt raw</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BROWN_OUT_INT_RAW</name>
              <description>brown out interrupt raw</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAIN_TIMER_INT_RAW</name>
              <description>RTC main timer interrupt raw</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SARADC1_INT_RAW</name>
              <description>saradc1 interrupt raw</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TSENS_INT_RAW</name>
              <description>tsens interrupt raw</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_INT_RAW</name>
              <description>riscV cocpu interrupt raw</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SARADC2_INT_RAW</name>
              <description>saradc2 interrupt raw</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SWD_INT_RAW</name>
              <description>super watch dog interrupt raw</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>XTAL32K_DEAD_INT_RAW</name>
              <description>xtal32k dead detection interrupt raw</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_TRAP_INT_RAW</name>
              <description>cocpu trap interrupt raw</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_TIMEOUT_INT_RAW</name>
              <description>touch timeout interrupt raw</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GLITCH_DET_INT_RAW</name>
              <description>glitch_det_interrupt_raw</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_APPROACH_LOOP_DONE_INT_RAW</name>
              <description>touch approach mode loop interrupt raw</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST_RTC</name>
          <description>rtc interrupt register</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLP_WAKEUP_INT_ST</name>
              <description>sleep wakeup interrupt state</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLP_REJECT_INT_ST</name>
              <description>sleep reject interrupt state</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SDIO_IDLE_INT_ST</name>
              <description>SDIO idle interrupt state</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>WDT_INT_ST</name>
              <description>RTC WDT interrupt state</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_SCAN_DONE_INT_ST</name>
              <description>enable touch scan done interrupt raw</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ULP_CP_INT_ST</name>
              <description>ULP-coprocessor interrupt state</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_DONE_INT_ST</name>
              <description>touch done interrupt state</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_ACTIVE_INT_ST</name>
              <description>touch active interrupt state</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_INACTIVE_INT_ST</name>
              <description>touch inactive interrupt state</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BROWN_OUT_INT_ST</name>
              <description>brown out interrupt state</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAIN_TIMER_INT_ST</name>
              <description>RTC main timer interrupt state</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SARADC1_INT_ST</name>
              <description>saradc1 interrupt state</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TSENS_INT_ST</name>
              <description>tsens interrupt state</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_INT_ST</name>
              <description>riscV cocpu interrupt state</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SARADC2_INT_ST</name>
              <description>saradc2 interrupt state</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SWD_INT_ST</name>
              <description>super watch dog interrupt state</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>XTAL32K_DEAD_INT_ST</name>
              <description>xtal32k dead detection interrupt state</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_TRAP_INT_ST</name>
              <description>cocpu trap interrupt state</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_TIMEOUT_INT_ST</name>
              <description>Touch timeout interrupt state</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GLITCH_DET_INT_ST</name>
              <description>glitch_det_interrupt state</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_APPROACH_LOOP_DONE_INT_ST</name>
              <description>touch approach mode loop interrupt state</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR_RTC</name>
          <description>rtc interrupt register</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLP_WAKEUP_INT_CLR</name>
              <description>Clear sleep wakeup interrupt state</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLP_REJECT_INT_CLR</name>
              <description>Clear sleep reject interrupt state</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SDIO_IDLE_INT_CLR</name>
              <description>Clear SDIO idle interrupt state</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>WDT_INT_CLR</name>
              <description>Clear RTC WDT interrupt state</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TOUCH_SCAN_DONE_INT_CLR</name>
              <description>clear touch scan done interrupt raw</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ULP_CP_INT_CLR</name>
              <description>Clear ULP-coprocessor interrupt state</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TOUCH_DONE_INT_CLR</name>
              <description>Clear touch done interrupt state</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TOUCH_ACTIVE_INT_CLR</name>
              <description>Clear touch active interrupt state</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TOUCH_INACTIVE_INT_CLR</name>
              <description>Clear touch inactive interrupt state</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BROWN_OUT_INT_CLR</name>
              <description>Clear brown out interrupt state</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MAIN_TIMER_INT_CLR</name>
              <description>Clear RTC main timer interrupt state</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SARADC1_INT_CLR</name>
              <description>Clear saradc1 interrupt state</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TSENS_INT_CLR</name>
              <description>Clear tsens interrupt state</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>COCPU_INT_CLR</name>
              <description>Clear riscV cocpu interrupt state</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SARADC2_INT_CLR</name>
              <description>Clear saradc2 interrupt state</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SWD_INT_CLR</name>
              <description>Clear super watch dog interrupt state</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>XTAL32K_DEAD_INT_CLR</name>
              <description>Clear RTC WDT interrupt state</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>COCPU_TRAP_INT_CLR</name>
              <description>Clear cocpu trap interrupt state</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TOUCH_TIMEOUT_INT_CLR</name>
              <description>Clear touch timeout interrupt state</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>GLITCH_DET_INT_CLR</name>
              <description>Clear glitch det interrupt state</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TOUCH_APPROACH_LOOP_DONE_INT_CLR</name>
              <description>cleartouch approach mode loop interrupt state</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STORE0</name>
          <description>Reserved register</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SCRATCH0</name>
              <description>Reserved register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STORE1</name>
          <description>Reserved register</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SCRATCH1</name>
              <description>Reserved register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STORE2</name>
          <description>Reserved register</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SCRATCH2</name>
              <description>Reserved register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STORE3</name>
          <description>Reserved register</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SCRATCH3</name>
              <description>Reserved register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXT_XTL_CONF</name>
          <description>Reserved register</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <resetValue>0x00066C80</resetValue>
          <fields>
            <field>
              <name>XTAL32K_WDT_EN</name>
              <description>xtal 32k watch dog enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_WDT_CLK_FO</name>
              <description>xtal 32k watch dog clock force on</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_WDT_RESET</name>
              <description>xtal 32k watch dog sw reset</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_EXT_CLK_FO</name>
              <description>xtal 32k external xtal clock force on</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_AUTO_BACKUP</name>
              <description>xtal 32k switch to back up clock when xtal is dead</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_AUTO_RESTART</name>
              <description>xtal 32k restart xtal when xtal is dead</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_AUTO_RETURN</name>
              <description>xtal 32k switch back xtal when xtal is restarted</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_XPD_FORCE</name>
              <description>Xtal 32k xpd control by sw or fsm</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENCKINIT_XTAL_32K</name>
              <description>apply an internal clock to help xtal 32k to start</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBUF_XTAL_32K</name>
              <description>0: single-end buffer 1: differential buffer</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DGM_XTAL_32K</name>
              <description>xtal_32k gm control</description>
              <bitOffset>10</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRES_XTAL_32K</name>
              <description>DRES_XTAL_32K</description>
              <bitOffset>13</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD_XTAL_32K</name>
              <description>XPD_XTAL_32K</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_XTAL_32K</name>
              <description>DAC_XTAL_32K</description>
              <bitOffset>17</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_STATE</name>
              <description>state of 32k_wdt</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>XTAL32K_GPIO_SEL</name>
              <description>XTAL_32K sel. 0: external XTAL_32K, 1: CLK from RTC pad X32P_C</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTL_EXT_CTR_LV</name>
              <description>0: power down XTAL at high level, 1: power down XTAL at low level</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTL_EXT_CTR_EN</name>
              <description>Reserved register</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXT_WAKEUP_CONF</name>
          <description>ext wakeup configure</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>GPIO_WAKEUP_FILTER</name>
              <description>enable filter for gpio wakeup event</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EXT_WAKEUP0_LV</name>
              <description>0: external wakeup at low level, 1: external wakeup at high level</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EXT_WAKEUP1_LV</name>
              <description>0: external wakeup at low level, 1: external wakeup at high level</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLP_REJECT_CONF</name>
          <description>reject sleep register</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLEEP_REJECT_ENA</name>
              <description>sleep reject enable</description>
              <bitOffset>12</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LIGHT_SLP_REJECT_EN</name>
              <description>enable reject for light sleep</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEEP_SLP_REJECT_EN</name>
              <description>enable reject for deep sleep</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_PERIOD_CONF</name>
          <description>conigure cpu freq</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPUSEL_CONF</name>
              <description>CPU sel option</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CPUPERIOD_SEL</name>
              <description>conigure cpu freq</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDIO_ACT_CONF</name>
          <description>No public</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SDIO_ACT_DNUM</name>
              <description>No public</description>
              <bitOffset>22</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLK_CONF</name>
          <description>configure clock register</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <resetValue>0x1158321C</resetValue>
          <fields>
            <field>
              <name>EFUSE_CLK_FORCE_GATING</name>
              <description>force efuse clk gating</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EFUSE_CLK_FORCE_NOGATING</name>
              <description>force efuse clk nogating</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK8M_DIV_SEL_VLD</name>
              <description>used to sync reg_ck8m_div_sel bus. Clear vld before set reg_ck8m_div_sel, then set vld to actually switch the clk</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK8M_DIV</name>
              <description>CK8M_D256_OUT divider. 00: div128, 01: div256, 10: div512, 11: div1024.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENB_CK8M</name>
              <description>disable CK8M and CK8M_D256_OUT</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENB_CK8M_DIV</name>
              <description>1: CK8M_D256_OUT is actually CK8M, 0: CK8M_D256_OUT is CK8M divided by 256</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIG_XTAL32K_EN</name>
              <description>enable CK_XTAL_32K for digital core (no relationship with RTC core)</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIG_CLK8M_D256_EN</name>
              <description>enable CK8M_D256_OUT for digital core (no relationship with RTC core)</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIG_CLK8M_EN</name>
              <description>enable CK8M for digital core (no relationship with RTC core)</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK8M_DIV_SEL</name>
              <description>divider = reg_ck8m_div_sel + 1</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_FORCE_NOGATING</name>
              <description>XTAL force no gating during sleep</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK8M_FORCE_NOGATING</name>
              <description>CK8M force no gating during sleep</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK8M_DFREQ</name>
              <description>CK8M_DFREQ</description>
              <bitOffset>17</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK8M_FORCE_PD</name>
              <description>CK8M force power down</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK8M_FORCE_PU</name>
              <description>CK8M force power up</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_GLOBAL_FORCE_GATING</name>
              <description>force global xtal  gating</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_GLOBAL_FORCE_NOGATING</name>
              <description>force global xtal no gating</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FAST_CLK_RTC_SEL</name>
              <description>fast_clk_rtc sel. 0: XTAL div 4, 1: CK8M</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ANA_CLK_RTC_SEL</name>
              <description>select slow clock</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLOW_CLK_CONF</name>
          <description>configure slow clk</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <resetValue>0x00400000</resetValue>
          <fields>
            <field>
              <name>ANA_CLK_DIV_VLD</name>
              <description>used to sync div bus. clear vld before set reg_rtc_ana_clk_div, then set vld to actually switch the clk</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ANA_CLK_DIV</name>
              <description>rtc clk div</description>
              <bitOffset>23</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLOW_CLK_NEXT_EDGE</name>
              <description>No public</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDIO_CONF</name>
          <description>configure flash power</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <resetValue>0x0AB0BE0A</resetValue>
          <fields>
            <field>
              <name>SDIO_TIMER_TARGET</name>
              <description>timer count to apply reg_sdio_dcap after sdio power on</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_DTHDRV</name>
              <description>Tieh = 1 mode drive ability. Initially set to 0 to limit charge current, set to 3 after several us.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_DCAP</name>
              <description>ability to prevent LDO from overshoot</description>
              <bitOffset>11</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_INITI</name>
              <description>add resistor from ldo output to ground. 0: no res, 1: 6k,2:4k,3:2k</description>
              <bitOffset>13</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_EN_INITI</name>
              <description>0 to set init[1:0]=0</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_DCURLIM</name>
              <description>tune current limit threshold when tieh = 0. About 800mA/(8+d)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_MODECURLIM</name>
              <description>select current limit mode</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_ENCURLIM</name>
              <description>enable current limit</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_REG_PD_EN</name>
              <description>power down SDIO_REG in sleep. Only active when reg_sdio_force = 0</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_FORCE</name>
              <description>1: use SW option to control SDIO_REG, 0: use state machine</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_TIEH</name>
              <description>SW option for SDIO_TIEH. Only active when reg_sdio_force = 1</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>REG1P8_READY</name>
              <description>read only register for REG1P8_READY</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DREFL_SDIO</name>
              <description>SW option for DREFL_SDIO. Only active when reg_sdio_force = 1</description>
              <bitOffset>25</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DREFM_SDIO</name>
              <description>SW option for DREFM_SDIO. Only active when reg_sdio_force = 1</description>
              <bitOffset>27</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DREFH_SDIO</name>
              <description>SW option for DREFH_SDIO. Only active when reg_sdio_force = 1</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD_SDIO</name>
              <description>power on flash regulator</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BIAS_CONF</name>
          <description>No public</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <resetValue>0x00010800</resetValue>
          <fields>
            <field>
              <name>BIAS_BUF_IDLE</name>
              <description>No public</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIAS_BUF_WAKE</name>
              <description>No public</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIAS_BUF_DEEP_SLP</name>
              <description>No public</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIAS_BUF_MONITOR</name>
              <description>No public</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_CUR_DEEP_SLP</name>
              <description>xpd cur when rtc in sleep_state</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_CUR_MONITOR</name>
              <description>xpd cur when rtc in monitor state</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIAS_SLEEP_DEEP_SLP</name>
              <description>bias_sleep when rtc in sleep_state</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIAS_SLEEP_MONITOR</name>
              <description>bias_sleep when rtc in monitor state</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBG_ATTEN_DEEP_SLP</name>
              <description>DBG_ATTEN when rtc in sleep state</description>
              <bitOffset>18</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBG_ATTEN_MONITOR</name>
              <description>DBG_ATTEN when rtc in monitor state</description>
              <bitOffset>22</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBG_ATTEN_WAKEUP</name>
              <description>No public</description>
              <bitOffset>26</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC</name>
          <description>configure rtc regulator</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <resetValue>0xA0000000</resetValue>
          <fields>
            <field>
              <name>DIG_REG_CAL_EN</name>
              <description>enable dig regulator cali</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCK_DCAP</name>
              <description>SCK_DCAP</description>
              <bitOffset>14</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBOOST_FORCE_PD</name>
              <description>RTC_DBOOST force power down</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBOOST_FORCE_PU</name>
              <description>RTC_DBOOST force power up</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>REGULATOR_FORCE_PD</name>
              <description>RTC_REG force power down (for RTC_REG power down means decrease the voltage to 0.8v or lower )</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>REGULATOR_FORCE_PU</name>
              <description>RTC_REG force power on (for RTC_REG power down means decrease the voltage to 0.8v or lower )</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWC</name>
          <description>configure rtc power</description>
          <addressOffset>0x88</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000925</resetValue>
          <fields>
            <field>
              <name>FASTMEM_FORCE_NOISO</name>
              <description>Fast RTC memory force no ISO</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FASTMEM_FORCE_ISO</name>
              <description>Fast RTC memory force ISO</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLOWMEM_FORCE_NOISO</name>
              <description>RTC memory force no ISO</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLOWMEM_FORCE_ISO</name>
              <description>RTC memory force ISO</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCE_ISO</name>
              <description>rtc_peri force ISO</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCE_NOISO</name>
              <description>rtc_peri force no ISO</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FASTMEM_FOLW_CPU</name>
              <description>1: Fast RTC memory PD following CPU, 0: fast RTC memory PD following RTC state machine</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FASTMEM_FORCE_LPD</name>
              <description>Fast RTC memory force PD</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FASTMEM_FORCE_LPU</name>
              <description>Fast RTC memory force no PD</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLOWMEM_FOLW_CPU</name>
              <description>1: RTC memory  PD following CPU, 0: RTC memory PD following RTC state machine</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLOWMEM_FORCE_LPD</name>
              <description>RTC memory force PD</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLOWMEM_FORCE_LPU</name>
              <description>RTC memory force no PD</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCE_PD</name>
              <description>rtc_peri force power down</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCE_PU</name>
              <description>rtc_peri force power up</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_EN</name>
              <description>enable power down rtc_peri in sleep</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PAD_FORCE_HOLD</name>
              <description>rtc pad force hold</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REGULATOR_DRV_CTRL</name>
          <description>No public</description>
          <addressOffset>0x8C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>REGULATOR_DRV_B_MONITOR</name>
              <description>No public</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>REGULATOR_DRV_B_SLP</name>
              <description>No public</description>
              <bitOffset>6</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_VDD_DRV_B_SLP</name>
              <description>No public</description>
              <bitOffset>12</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_VDD_DRV_B_MONITOR</name>
              <description>No public</description>
              <bitOffset>20</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIG_PWC</name>
          <description>configure digital power</description>
          <addressOffset>0x90</addressOffset>
          <size>0x20</size>
          <resetValue>0x00545010</resetValue>
          <fields>
            <field>
              <name>LSLP_MEM_FORCE_PD</name>
              <description>memories in digital core force PD in sleep</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LSLP_MEM_FORCE_PU</name>
              <description>memories in digital core force no PD in sleep</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_FORCE_PD</name>
              <description>internal SRAM 2 force power down</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_FORCE_PU</name>
              <description>internal SRAM 2 force power up</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_PERI_FORCE_PD</name>
              <description>internal SRAM 3 force power down</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_PERI_FORCE_PU</name>
              <description>internal SRAM 3 force power up</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WIFI_FORCE_PD</name>
              <description>wifi force power down</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WIFI_FORCE_PU</name>
              <description>wifi force power up</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_WRAP_FORCE_PD</name>
              <description>digital core force power down</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_WRAP_FORCE_PU</name>
              <description>digital core force power up</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CPU_TOP_FORCE_PD</name>
              <description>digital dcdc force power down</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CPU_TOP_FORCE_PU</name>
              <description>digital dcdc force power up</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_PD_EN</name>
              <description>enable power down internal SRAM 2 in sleep</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_PERI_PD_EN</name>
              <description>enable power down internal SRAM 3 in sleep</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CPU_TOP_PD_EN</name>
              <description>enable power down internal SRAM 4 in sleep</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WIFI_PD_EN</name>
              <description>enable power down wifi in sleep</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_WRAP_PD_EN</name>
              <description>enable power down all digital logic</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIG_ISO</name>
          <description>congigure digital power isolation</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <resetValue>0xAA805080</resetValue>
          <fields>
            <field>
              <name>FORCE_OFF</name>
              <description>No public</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCE_ON</name>
              <description>No public</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_PAD_AUTOHOLD</name>
              <description>read only register to indicate digital pad auto-hold status</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CLR_DG_PAD_AUTOHOLD</name>
              <description>wtite only register to clear digital pad auto-hold</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DG_PAD_AUTOHOLD_EN</name>
              <description>digital pad enable auto-hold</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_PAD_FORCE_NOISO</name>
              <description>digital pad force no ISO</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_PAD_FORCE_ISO</name>
              <description>digital pad force ISO</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_PAD_FORCE_UNHOLD</name>
              <description>digital pad force un-hold</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_PAD_FORCE_HOLD</name>
              <description>digital pad force hold</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_FORCE_ISO</name>
              <description>internal SRAM 2 force ISO</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_FORCE_NOISO</name>
              <description>internal SRAM 2 force no ISO</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_PERI_FORCE_ISO</name>
              <description>internal SRAM 3 force ISO</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_PERI_FORCE_NOISO</name>
              <description>internal SRAM 3 force no ISO</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CPU_TOP_FORCE_ISO</name>
              <description>internal SRAM 4 force ISO</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CPU_TOP_FORCE_NOISO</name>
              <description>internal SRAM 4 force no ISO</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WIFI_FORCE_ISO</name>
              <description>wifi force ISO</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WIFI_FORCE_NOISO</name>
              <description>wifi force no ISO</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_WRAP_FORCE_ISO</name>
              <description>digital core force ISO</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_WRAP_FORCE_NOISO</name>
              <description>digita core force no ISO</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDTCONFIG0</name>
          <description>configure rtc watch dog</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <resetValue>0x00013214</resetValue>
          <fields>
            <field>
              <name>WDT_CHIP_RESET_WIDTH</name>
              <description>chip reset siginal pulse width</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_CHIP_RESET_EN</name>
              <description>wdt reset whole chip enable</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_PAUSE_IN_SLP</name>
              <description>pause WDT in sleep</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_APPCPU_RESET_EN</name>
              <description>enable WDT reset APP CPU</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_PROCPU_RESET_EN</name>
              <description>enable WDT reset PRO CPU</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_FLASHBOOT_MOD_EN</name>
              <description>enable WDT in flash boot</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_SYS_RESET_LENGTH</name>
              <description>system reset counter length</description>
              <bitOffset>13</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_CPU_RESET_LENGTH</name>
              <description>CPU reset counter length</description>
              <bitOffset>16</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_STG3</name>
              <description>1: interrupt stage en 2: CPU reset stage en 3: system reset stage en 4: RTC reset stage en</description>
              <bitOffset>19</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_STG2</name>
              <description>1: interrupt stage en 2: CPU reset stage en 3: system reset stage en 4: RTC reset stage en</description>
              <bitOffset>22</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_STG1</name>
              <description>1: interrupt stage en 2: CPU reset stage en 3: system reset stage en 4: RTC reset stage en</description>
              <bitOffset>25</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_STG0</name>
              <description>1: interrupt stage en 2: CPU reset stage en 3: system reset stage en 4: RTC reset stage en</description>
              <bitOffset>28</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_EN</name>
              <description>enable rtc watch dog</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDTCONFIG1</name>
          <description>stage0 hold time</description>
          <addressOffset>0x9C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00030D40</resetValue>
          <fields>
            <field>
              <name>WDT_STG0_HOLD</name>
              <description>stage0 hold time</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDTCONFIG2</name>
          <description>stage1 hold time</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00013880</resetValue>
          <fields>
            <field>
              <name>WDT_STG1_HOLD</name>
              <description>stage1 hold time</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDTCONFIG3</name>
          <description>stage2 hold time</description>
          <addressOffset>0xA4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>WDT_STG2_HOLD</name>
              <description>stage2 hold time</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDTCONFIG4</name>
          <description>stage3 hold time</description>
          <addressOffset>0xA8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>WDT_STG3_HOLD</name>
              <description>stage3 hold time</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDTFEED</name>
          <description>rtc wdt feed</description>
          <addressOffset>0xAC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>WDT_FEED</name>
              <description>rtc wdt feed</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDTWPROTECT</name>
          <description>configure rtc watch dog</description>
          <addressOffset>0xB0</addressOffset>
          <size>0x20</size>
          <resetValue>0x50D83AA1</resetValue>
          <fields>
            <field>
              <name>WDT_WKEY</name>
              <description>rtc watch dog key</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SWD_CONF</name>
          <description>congfigure super watch dog</description>
          <addressOffset>0xB4</addressOffset>
          <size>0x20</size>
          <resetValue>0x04B00000</resetValue>
          <fields>
            <field>
              <name>SWD_RESET_FLAG</name>
              <description>swd reset flag</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SWD_FEED_INT</name>
              <description>swd interrupt for feeding</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SWD_BYPASS_RST</name>
              <description>bypass super watch dog reset</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SWD_SIGNAL_WIDTH</name>
              <description>adjust signal width send to swd</description>
              <bitOffset>18</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SWD_RST_FLAG_CLR</name>
              <description>reset swd reset flag</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SWD_FEED</name>
              <description>Sw feed swd</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SWD_DISABLE</name>
              <description>disabel SWD</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SWD_AUTO_FEED_EN</name>
              <description>automatically feed swd when int comes</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SWD_WPROTECT</name>
          <description>super watch dog key</description>
          <addressOffset>0xB8</addressOffset>
          <size>0x20</size>
          <resetValue>0x8F1D312A</resetValue>
          <fields>
            <field>
              <name>SWD_WKEY</name>
              <description>super watch dog key</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SW_CPU_STALL</name>
          <description>configure cpu stall by sw</description>
          <addressOffset>0xBC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SW_STALL_APPCPU_C1</name>
              <description>{reg_sw_stall_appcpu_c1[5:0],  reg_sw_stall_appcpu_c0[1:0]} == 0x86 will stall APP CPU</description>
              <bitOffset>20</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_STALL_PROCPU_C1</name>
              <description>{reg_sw_stall_appcpu_c1[5:0],  reg_sw_stall_appcpu_c0[1:0]} == 0x86 will stall APP CPU</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STORE4</name>
          <description>reserved register</description>
          <addressOffset>0xC0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SCRATCH4</name>
              <description>reserved register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STORE5</name>
          <description>reserved register</description>
          <addressOffset>0xC4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SCRATCH5</name>
              <description>reserved register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STORE6</name>
          <description>reserved register</description>
          <addressOffset>0xC8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SCRATCH6</name>
              <description>reserved register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STORE7</name>
          <description>reserved register</description>
          <addressOffset>0xCC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SCRATCH7</name>
              <description>reserved register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOW_POWER_ST</name>
          <description>reserved register</description>
          <addressOffset>0xD0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>XPD_ROM0</name>
              <description>rom0 power down</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>XPD_DIG_DCDC</name>
              <description>External DCDC power down</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PERI_ISO</name>
              <description>rtc peripheral iso</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>XPD_RTC_PERI</name>
              <description>rtc peripheral power down</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>WIFI_ISO</name>
              <description>wifi iso</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>XPD_WIFI</name>
              <description>wifi wrap power down</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIG_ISO</name>
              <description>digital wrap iso</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>XPD_DIG</name>
              <description>digital wrap power down</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_STATE_START</name>
              <description>touch should start to work</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_STATE_SWITCH</name>
              <description>touch is about to working. Switch rtc main state</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_STATE_SLP</name>
              <description>touch is in sleep state</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_STATE_DONE</name>
              <description>touch is done</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_STATE_START</name>
              <description>ulp/cocpu should start to work</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_STATE_SWITCH</name>
              <description>ulp/cocpu is about to working. Switch rtc main state</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_STATE_SLP</name>
              <description>ulp/cocpu is in sleep state</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_STATE_DONE</name>
              <description>ulp/cocpu is done</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAIN_STATE_XTAL_ISO</name>
              <description>no use any more</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAIN_STATE_PLL_ON</name>
              <description>rtc main state machine is in states that pll should be running</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RDY_FOR_WAKEUP</name>
              <description>rtc is ready to receive wake up trigger from wake up source</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAIN_STATE_WAIT_END</name>
              <description>rtc main state machine has been waited for some cycles</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_WAKEUP_STATE</name>
              <description>rtc main state machine is in the states of wakeup process</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_LOW_POWER_STATE</name>
              <description>rtc main state machine is in the states of low power</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAIN_STATE_IN_WAIT_8M</name>
              <description>rtc main state machine is in wait 8m state</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAIN_STATE_IN_WAIT_PLL</name>
              <description>rtc main state machine is in wait pll state</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAIN_STATE_IN_WAIT_XTL</name>
              <description>rtc main state machine is in wait xtal state</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAIN_STATE_IN_SLP</name>
              <description>rtc main state machine is in sleep state</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAIN_STATE_IN_IDLE</name>
              <description>rtc main state machine is in idle state</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAIN_STATE</name>
              <description>rtc main state machine status</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIAG0</name>
          <description>No public</description>
          <addressOffset>0xD4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LOW_POWER_DIAG1</name>
              <description>No public</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PAD_HOLD</name>
          <description>rtc pad hold configure</description>
          <addressOffset>0xD8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_PAD0_HOLD</name>
              <description>hold rtc pad0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD1_HOLD</name>
              <description>hold rtc pad-1</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD2_HOLD</name>
              <description>hold rtc pad-2</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD3_HOLD</name>
              <description>hold rtc pad-3</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD4_HOLD</name>
              <description>hold rtc pad-4</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD5_HOLD</name>
              <description>hold rtc pad-5</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD6_HOLD</name>
              <description>hold rtc pad-6</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD7_HOLD</name>
              <description>hold rtc pad-7</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD8_HOLD</name>
              <description>hold rtc pad-8</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD9_HOLD</name>
              <description>hold rtc pad-9</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD10_HOLD</name>
              <description>hold rtc pad-10</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD11_HOLD</name>
              <description>hold rtc pad-11</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD12_HOLD</name>
              <description>hold rtc pad-12</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD13_HOLD</name>
              <description>hold rtc pad-13</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD14_HOLD</name>
              <description>hold rtc pad-14</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32P_HOLD</name>
              <description>hold rtc pad-15</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32N_HOLD</name>
              <description>hold rtc pad-16</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC1_HOLD</name>
              <description>hold rtc pad-17</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC2_HOLD</name>
              <description>hold rtc pad-18</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PAD19_HOLD</name>
              <description>hold rtc pad-19</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PAD20_HOLD</name>
              <description>hold rtc pad-20</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PAD21_HOLD</name>
              <description>hold rtc pad-21</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIG_PAD_HOLD</name>
          <description>configure digtal pad hold</description>
          <addressOffset>0xDC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DIG_PAD_HOLD</name>
              <description>configure digtal pad hold</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXT_WAKEUP1</name>
          <description>configure ext1 wakeup</description>
          <addressOffset>0xE0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EXT_WAKEUP1_SEL</name>
              <description>Bitmap to select RTC pads for ext wakeup1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EXT_WAKEUP1_STATUS_CLR</name>
              <description>clear ext wakeup1 status</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXT_WAKEUP1_STATUS</name>
          <description>check ext wakeup1 status</description>
          <addressOffset>0xE4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EXT_WAKEUP1_STATUS</name>
              <description>ext wakeup1 status</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BROWN_OUT</name>
          <description>congfigure brownout</description>
          <addressOffset>0xE8</addressOffset>
          <size>0x20</size>
          <resetValue>0x43FF0010</resetValue>
          <fields>
            <field>
              <name>BROWN_OUT_INT_WAIT</name>
              <description>brown out interrupt wait cycles</description>
              <bitOffset>4</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BROWN_OUT_CLOSE_FLASH_ENA</name>
              <description>enable close flash when brown out happens</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BROWN_OUT_PD_RF_ENA</name>
              <description>enable power down RF when brown out happens</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BROWN_OUT_RST_WAIT</name>
              <description>brown out reset wait cycles</description>
              <bitOffset>16</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BROWN_OUT_RST_ENA</name>
              <description>enable brown out reset</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BROWN_OUT_RST_SEL</name>
              <description>1:  4-pos reset,    0:  sys_reset</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BROWN_OUT_ANA_RST_EN</name>
              <description>enable brown out reset en</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BROWN_OUT_CNT_CLR</name>
              <description>clear brown out counter</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BROWN_OUT_ENA</name>
              <description>enable brown out</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DET</name>
              <description>get brown out detect</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIME_LOW1</name>
          <description>RTC timer low 32 bits</description>
          <addressOffset>0xEC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_VALUE1_LOW</name>
              <description>RTC timer low 32 bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIME_HIGH1</name>
          <description>RTC timer high 16 bits</description>
          <addressOffset>0xF0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_VALUE1_HIGH</name>
              <description>RTC timer high 16 bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>XTAL32K_CLK_FACTOR</name>
          <description>xtal 32k watch dog backup clock factor</description>
          <addressOffset>0xF4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>XTAL32K_CLK_FACTOR</name>
              <description>xtal 32k watch dog backup clock factor</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>XTAL32K_CONF</name>
          <description>configure xtal32k</description>
          <addressOffset>0xF8</addressOffset>
          <size>0x20</size>
          <resetValue>0x0FF00000</resetValue>
          <fields>
            <field>
              <name>XTAL32K_RETURN_WAIT</name>
              <description>cycles to wait to return noral xtal 32k</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_RESTART_WAIT</name>
              <description>cycles to wait to repower on xtal 32k</description>
              <bitOffset>4</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_WDT_TIMEOUT</name>
              <description>If no clock detected for this amount of time 32k is regarded as dead</description>
              <bitOffset>20</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_STABLE_THRES</name>
              <description>if restarted xtal32k period is smaller than this, it is regarded as stable</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ULP_CP_TIMER</name>
          <description>configure ulp</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ULP_CP_PC_INIT</name>
              <description>ULP-coprocessor PC initial address</description>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ULP_CP_GPIO_WAKEUP_ENA</name>
              <description>ULP-coprocessor wakeup by GPIO enable</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ULP_CP_GPIO_WAKEUP_CLR</name>
              <description>ULP-coprocessor wakeup by GPIO state clear</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ULP_CP_SLP_TIMER_EN</name>
              <description>ULP-coprocessor timer enable bit</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ULP_CP_CTRL</name>
          <description>configure ulp</description>
          <addressOffset>0x100</addressOffset>
          <size>0x20</size>
          <resetValue>0x00100200</resetValue>
          <fields>
            <field>
              <name>ULP_CP_MEM_ADDR_INIT</name>
              <description>No public</description>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ULP_CP_MEM_ADDR_SIZE</name>
              <description>No public</description>
              <bitOffset>11</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ULP_CP_MEM_OFFST_CLR</name>
              <description>No public</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ULP_CP_CLK_FO</name>
              <description>ulp coprocessor clk force on</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ULP_CP_RESET</name>
              <description>ulp coprocessor clk software reset</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ULP_CP_FORCE_START_TOP</name>
              <description>1: ULP-coprocessor is started by SW</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ULP_CP_START_TOP</name>
              <description>Write 1 to start ULP-coprocessor</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COCPU_CTRL</name>
          <description>configure ulp-riscv</description>
          <addressOffset>0x104</addressOffset>
          <size>0x20</size>
          <resetValue>0x008A0810</resetValue>
          <fields>
            <field>
              <name>COCPU_CLK_FO</name>
              <description>cocpu clk force on</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_START_2_RESET_DIS</name>
              <description>time from start cocpu to pull down reset</description>
              <bitOffset>1</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_START_2_INTR_EN</name>
              <description>time from start cocpu to give start interrupt</description>
              <bitOffset>7</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_SHUT</name>
              <description>to shut cocpu</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_SHUT_2_CLK_DIS</name>
              <description>time from shut cocpu to disable clk</description>
              <bitOffset>14</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_SHUT_RESET_EN</name>
              <description>to reset cocpu</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_SEL</name>
              <description>1: old ULP 0: new riscV</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_DONE_FORCE</name>
              <description>1: select riscv done 0: select ulp done</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_DONE</name>
              <description>done signal used by riscv to control timer.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_SW_INT_TRIGGER</name>
              <description>trigger cocpu register interrupt</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>COCPU_CLKGATE_EN</name>
              <description>open ulp-riscv clk gate</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_CTRL1</name>
          <description>configure touch controller</description>
          <addressOffset>0x108</addressOffset>
          <size>0x20</size>
          <resetValue>0x10000100</resetValue>
          <fields>
            <field>
              <name>TOUCH_SLEEP_CYCLES</name>
              <description>sleep cycles for timer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_MEAS_NUM</name>
              <description>the meas length (in 8MHz)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_CTRL2</name>
          <description>configure touch controller</description>
          <addressOffset>0x10C</addressOffset>
          <size>0x20</size>
          <resetValue>0x000840CC</resetValue>
          <fields>
            <field>
              <name>TOUCH_DRANGE</name>
              <description>TOUCH_DRANGE</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_DREFL</name>
              <description>TOUCH_DREFL</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_DREFH</name>
              <description>TOUCH_DREFH</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_XPD_BIAS</name>
              <description>TOUCH_XPD_BIAS</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_REFC</name>
              <description>TOUCH pad0 reference cap</description>
              <bitOffset>9</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_DBIAS</name>
              <description>1:use self bias 0:use bandgap bias</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_SLP_TIMER_EN</name>
              <description>touch timer enable bit</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_START_FSM_EN</name>
              <description>1: TOUCH_START &amp; TOUCH_XPD is controlled by touch fsm</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_START_EN</name>
              <description>1: start touch fsm</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_START_FORCE</name>
              <description>1: to start touch fsm by SW</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_XPD_WAIT</name>
              <description>the waiting cycles (in 8MHz) between TOUCH_START and TOUCH_XPD</description>
              <bitOffset>17</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_SLP_CYC_DIV</name>
              <description>when a touch pad is active sleep cycle could be divided by this number</description>
              <bitOffset>25</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_TIMER_FORCE_DONE</name>
              <description>force touch timer done</description>
              <bitOffset>27</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_RESET</name>
              <description>reset upgrade touch</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_CLK_FO</name>
              <description>touch clock force on</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_CLKGATE_EN</name>
              <description>touch clock enable</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_SCAN_CTRL</name>
          <description>configure touch controller</description>
          <addressOffset>0x110</addressOffset>
          <size>0x20</size>
          <resetValue>0xF0000102</resetValue>
          <fields>
            <field>
              <name>TOUCH_DENOISE_RES</name>
              <description>De-noise resolution: 12/10/8/4 bit</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_DENOISE_EN</name>
              <description>touch pad0 will be used to de-noise</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_INACTIVE_CONNECTION</name>
              <description>inactive touch pads connect to 1: gnd 0: HighZ</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_SHIELD_PAD_EN</name>
              <description>touch pad14 will be used as shield</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_SCAN_PAD_MAP</name>
              <description>touch scan mode pad enable map</description>
              <bitOffset>10</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_BUFDRV</name>
              <description>touch7 buffer driver strength</description>
              <bitOffset>25</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_OUT_RING</name>
              <description>select out ring pad</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_SLP_THRES</name>
          <description>configure touch controller</description>
          <addressOffset>0x114</addressOffset>
          <size>0x20</size>
          <resetValue>0x78000000</resetValue>
          <fields>
            <field>
              <name>TOUCH_SLP_TH</name>
              <description>the threshold for sleep touch pad</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_SLP_APPROACH_EN</name>
              <description>sleep pad approach function enable</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_SLP_PAD</name>
              <description>configure which pad as slp pad</description>
              <bitOffset>27</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_APPROACH</name>
          <description>configure touch controller</description>
          <addressOffset>0x118</addressOffset>
          <size>0x20</size>
          <resetValue>0x50000000</resetValue>
          <fields>
            <field>
              <name>TOUCH_SLP_CHANNEL_CLR</name>
              <description>clear touch slp channel</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TOUCH_APPROACH_MEAS_TIME</name>
              <description>approach pads total meas times</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_FILTER_CTRL</name>
          <description>configure touch controller</description>
          <addressOffset>0x11C</addressOffset>
          <size>0x20</size>
          <resetValue>0x96AA8800</resetValue>
          <fields>
            <field>
              <name>TOUCH_BYPASS_NEG_NOISE_THRES</name>
              <description>bypass neg noise thres</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_BYPASS_NOISE_THRES</name>
              <description>bypaas noise thres</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_SMOOTH_LVL</name>
              <description>smooth filter factor</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_JITTER_STEP</name>
              <description>touch jitter step</description>
              <bitOffset>11</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_NEG_NOISE_LIMIT</name>
              <description>negative threshold counter limit</description>
              <bitOffset>15</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_NEG_NOISE_THRES</name>
              <description>neg noise thres</description>
              <bitOffset>19</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_NOISE_THRES</name>
              <description>noise thres</description>
              <bitOffset>21</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_HYSTERESIS</name>
              <description>hysteresis</description>
              <bitOffset>23</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_DEBOUNCE</name>
              <description>debounce counter</description>
              <bitOffset>25</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_FILTER_MODE</name>
              <description>0: IIR ? 1: IIR ? 2: IIR 1/8 3: Jitter</description>
              <bitOffset>28</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_FILTER_EN</name>
              <description>touch filter enable</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USB_CONF</name>
          <description>usb configure</description>
          <addressOffset>0x120</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>USB_VREFH</name>
              <description>reg_usb_vrefh</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_VREFL</name>
              <description>reg_usb_vrefl</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_VREF_OVERRIDE</name>
              <description>reg_usb_vref_override</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_PAD_PULL_OVERRIDE</name>
              <description>reg_usb_pad_pull_override</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_DP_PULLUP</name>
              <description>reg_usb_dp_pullup</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_DP_PULLDOWN</name>
              <description>reg_usb_dp_pulldown</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_DM_PULLUP</name>
              <description>reg_usb_dm_pullup</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_DM_PULLDOWN</name>
              <description>reg_usb_dm_pulldown</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_PULLUP_VALUE</name>
              <description>reg_usb_pullup_value</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_PAD_ENABLE_OVERRIDE</name>
              <description>reg_usb_pad_enable_override</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_PAD_ENABLE</name>
              <description>reg_usb_pad_enable</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_TXM</name>
              <description>reg_usb_txm</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_TXP</name>
              <description>reg_usb_txp</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_TX_EN</name>
              <description>reg_usb_tx_en</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_TX_EN_OVERRIDE</name>
              <description>reg_usb_tx_en_override</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_RESET_DISABLE</name>
              <description>reg_usb_reset_disable</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IO_MUX_RESET_DISABLE</name>
              <description>reg_io_mux_reset_disable</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_USB_PHY_SEL</name>
              <description>reg_sw_usb_phy_sel</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_HW_USB_PHY_SEL</name>
              <description>reg_sw_hw_usb_phy_sel</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_TIMEOUT_CTRL</name>
          <description>configure touch controller</description>
          <addressOffset>0x124</addressOffset>
          <size>0x20</size>
          <resetValue>0x007FFFFF</resetValue>
          <fields>
            <field>
              <name>TOUCH_TIMEOUT_NUM</name>
              <description>configure touch timerout time</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_TIMEOUT_EN</name>
              <description>enable touch timerout</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLP_REJECT_CAUSE</name>
          <description>get reject casue</description>
          <addressOffset>0x128</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>REJECT_CAUSE</name>
              <description>sleep reject cause</description>
              <bitOffset>0</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OPTION1</name>
          <description>rtc common configure</description>
          <addressOffset>0x12C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>FORCE_DOWNLOAD_BOOT</name>
              <description>force chip entry download boot by sw</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLP_WAKEUP_CAUSE</name>
          <description>get wakeup cause</description>
          <addressOffset>0x130</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>WAKEUP_CAUSE</name>
              <description>sleep wakeup cause</description>
              <bitOffset>0</bitOffset>
              <bitWidth>17</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ULP_CP_TIMER_1</name>
          <description>configure ulp sleep time</description>
          <addressOffset>0x134</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000C800</resetValue>
          <fields>
            <field>
              <name>ULP_CP_TIMER_SLP_CYCLE</name>
              <description>sleep cycles for ULP-coprocessor timer</description>
              <bitOffset>8</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA_RTC_W1TS</name>
          <description>oneset rtc interrupt</description>
          <addressOffset>0x138</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLP_WAKEUP_INT_ENA_W1TS</name>
              <description>enable sleep wakeup interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLP_REJECT_INT_ENA_W1TS</name>
              <description>enable sleep reject interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SDIO_IDLE_INT_ENA_W1TS</name>
              <description>enable SDIO idle interrupt</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>WDT_INT_ENA_W1TS</name>
              <description>enable RTC WDT interrupt</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TOUCH_SCAN_DONE_INT_ENA_W1TS</name>
              <description>enable touch scan done interrupt</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ULP_CP_INT_ENA_W1TS</name>
              <description>enable ULP-coprocessor interrupt</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TOUCH_DONE_INT_ENA_W1TS</name>
              <description>enable touch done interrupt</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TOUCH_ACTIVE_INT_ENA_W1TS</name>
              <description>enable touch active interrupt</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TOUCH_INACTIVE_INT_ENA_W1TS</name>
              <description>enable touch inactive interrupt</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BROWN_OUT_INT_ENA_W1TS</name>
              <description>enable brown out interrupt</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MAIN_TIMER_INT_ENA_W1TS</name>
              <description>enable RTC main timer interrupt</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SARADC1_INT_ENA_W1TS</name>
              <description>enable saradc1 interrupt</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TSENS_INT_ENA_W1TS</name>
              <description>enable tsens interrupt</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>COCPU_INT_ENA_W1TS</name>
              <description>enable riscV cocpu interrupt</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SARADC2_INT_ENA_W1TS</name>
              <description>enable saradc2 interrupt</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SWD_INT_ENA_W1TS</name>
              <description>enable super watch dog interrupt</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>XTAL32K_DEAD_INT_ENA_W1TS</name>
              <description>enable xtal32k_dead  interrupt</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>COCPU_TRAP_INT_ENA_W1TS</name>
              <description>enable cocpu trap interrupt</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TOUCH_TIMEOUT_INT_ENA_W1TS</name>
              <description>enable touch timeout interrupt</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>GLITCH_DET_INT_ENA_W1TS</name>
              <description>enbale gitch det interrupt</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TOUCH_APPROACH_LOOP_DONE_INT_ENA_W1TS</name>
              <description>enbale touch approach_loop done interrupt</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA_RTC_W1TC</name>
          <description>oneset clr rtc interrupt enable</description>
          <addressOffset>0x13C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLP_WAKEUP_INT_ENA_W1TC</name>
              <description>enable sleep wakeup interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLP_REJECT_INT_ENA_W1TC</name>
              <description>enable sleep reject interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SDIO_IDLE_INT_ENA_W1TC</name>
              <description>enable SDIO idle interrupt</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>WDT_INT_ENA_W1TC</name>
              <description>enable RTC WDT interrupt</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TOUCH_SCAN_DONE_INT_ENA_W1TC</name>
              <description>enable touch scan done interrupt</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ULP_CP_INT_ENA_W1TC</name>
              <description>enable ULP-coprocessor interrupt</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TOUCH_DONE_INT_ENA_W1TC</name>
              <description>enable touch done interrupt</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TOUCH_ACTIVE_INT_ENA_W1TC</name>
              <description>enable touch active interrupt</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TOUCH_INACTIVE_INT_ENA_W1TC</name>
              <description>enable touch inactive interrupt</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BROWN_OUT_INT_ENA_W1TC</name>
              <description>enable brown out interrupt</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MAIN_TIMER_INT_ENA_W1TC</name>
              <description>enable RTC main timer interrupt</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SARADC1_INT_ENA_W1TC</name>
              <description>enable saradc1 interrupt</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TSENS_INT_ENA_W1TC</name>
              <description>enable tsens interrupt</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>COCPU_INT_ENA_W1TC</name>
              <description>enable riscV cocpu interrupt</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SARADC2_INT_ENA_W1TC</name>
              <description>enable saradc2 interrupt</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SWD_INT_ENA_W1TC</name>
              <description>enable super watch dog interrupt</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>XTAL32K_DEAD_INT_ENA_W1TC</name>
              <description>enable xtal32k_dead  interrupt</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>COCPU_TRAP_INT_ENA_W1TC</name>
              <description>enable cocpu trap interrupt</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TOUCH_TIMEOUT_INT_ENA_W1TC</name>
              <description>enable touch timeout interrupt</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>GLITCH_DET_INT_ENA_W1TC</name>
              <description>enbale gitch det interrupt</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TOUCH_APPROACH_LOOP_DONE_INT_ENA_W1TC</name>
              <description>enbale touch approach_loop done interrupt</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RETENTION_CTRL</name>
          <description>configure retention</description>
          <addressOffset>0x140</addressOffset>
          <size>0x20</size>
          <resetValue>0x28340000</resetValue>
          <fields>
            <field>
              <name>RETENTION_TAG_MODE</name>
              <description>No public</description>
              <bitOffset>10</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RETENTION_TARGET</name>
              <description>congfigure retention target cpu and/or tag</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RETENTION_CLK_SEL</name>
              <description>No public</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RETENTION_DONE_WAIT</name>
              <description>wait retention done cycle</description>
              <bitOffset>17</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RETENTION_CLKOFF_WAIT</name>
              <description>wait clk off cycle</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RETENTION_EN</name>
              <description>enable retention</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RETENTION_WAIT</name>
              <description>wait cycles for rention operation</description>
              <bitOffset>25</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_CTRL</name>
          <description>configure power glitch</description>
          <addressOffset>0x144</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>POWER_GLITCH_DSENSE</name>
              <description>GLITCH_DSENSE</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>POWER_GLITCH_FORCE_PD</name>
              <description>force power glitch disable</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>POWER_GLITCH_FORCE_PU</name>
              <description>force power glitch enable</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>POWER_GLITCH_EFUSE_SEL</name>
              <description>select use analog fib signal</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>POWER_GLITCH_EN</name>
              <description>enable power glitch</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIB_SEL</name>
          <description>No public</description>
          <addressOffset>0x148</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000007</resetValue>
          <fields>
            <field>
              <name>FIB_SEL</name>
              <description>No public</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_DAC</name>
          <description>configure touch dac</description>
          <addressOffset>0x14C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_PAD9_DAC</name>
              <description>configure touch pad dac9</description>
              <bitOffset>2</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD8_DAC</name>
              <description>configure touch pad dac8</description>
              <bitOffset>5</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD7_DAC</name>
              <description>configure touch pad dac7</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD6_DAC</name>
              <description>configure touch pad dac6</description>
              <bitOffset>11</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD5_DAC</name>
              <description>configure touch pad dac5</description>
              <bitOffset>14</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD4_DAC</name>
              <description>configure touch pad dac4</description>
              <bitOffset>17</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD3_DAC</name>
              <description>configure touch pad dac3</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD2_DAC</name>
              <description>configure touch pad dac2</description>
              <bitOffset>23</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD1_DAC</name>
              <description>configure touch pad dac1</description>
              <bitOffset>26</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD0_DAC</name>
              <description>configure touch pad dac0</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_DAC1</name>
          <description>configure touch dac</description>
          <addressOffset>0x150</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_PAD14_DAC</name>
              <description>configure touch pad dac14</description>
              <bitOffset>17</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD13_DAC</name>
              <description>configure touch pad dac13</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD12_DAC</name>
              <description>configure touch pad dac12</description>
              <bitOffset>23</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD11_DAC</name>
              <description>configure touch pad dac11</description>
              <bitOffset>26</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD10_DAC</name>
              <description>configure touch pad dac10</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COCPU_DISABLE</name>
          <description>configure ulp diable</description>
          <addressOffset>0x154</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DISABLE_RTC_CPU</name>
              <description>configure ulp diable</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>version register</description>
          <addressOffset>0x1FC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02101271</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>version register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>RTC_I2C</name>
      <description>Peripheral RTC_I2C</description>
      <groupName>RTC_I2C</groupName>
      <baseAddress>0x60008C00</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x7C</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>SCL_LOW</name>
          <description>configure low scl period</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000100</resetValue>
          <fields>
            <field>
              <name>PERIOD</name>
              <description>time period that scl =0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTRL</name>
          <description>configure i2c ctrl</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SDA_FORCE_OUT</name>
              <description>1=push pull,0=open drain</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_FORCE_OUT</name>
              <description>1=push pull,0=open drain</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MS_MODE</name>
              <description>1=master,0=slave</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRANS_START</name>
              <description>force start</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_LSB_FIRST</name>
              <description>transit lsb first</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_LSB_FIRST</name>
              <description>receive lsb first</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_CTRL_CLK_GATE_EN</name>
              <description>configure i2c ctrl clk enable</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_RESET</name>
              <description>rtc i2c sw reset</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2CCLK_EN</name>
              <description>rtc i2c reg clk gating</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS</name>
          <description>get i2c status</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ACK_REC</name>
              <description>ack response</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLAVE_RW</name>
              <description>slave read or write</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ARB_LOST</name>
              <description>arbitration is lost</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BUS_BUSY</name>
              <description>bus is busy</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLAVE_ADDRESSED</name>
              <description>slave reg sub address</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BYTE_TRANS</name>
              <description>One byte transit done</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OP_CNT</name>
              <description>which operation is working</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SHIFT</name>
              <description>shifter content</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SCL_MAIN_STATE_LAST</name>
              <description>i2c last main status</description>
              <bitOffset>24</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SCL_STATE_LAST</name>
              <description>scl last status</description>
              <bitOffset>28</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TO</name>
          <description>configure time out</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00010000</resetValue>
          <fields>
            <field>
              <name>TIME_OUT</name>
              <description>time out threshold</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLAVE_ADDR</name>
          <description>configure slave id</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLAVE_ADDR</name>
              <description>slave address</description>
              <bitOffset>0</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_10BIT_EN</name>
              <description>i2c 10bit mode enable</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_HIGH</name>
          <description>configure high scl period</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000100</resetValue>
          <fields>
            <field>
              <name>PERIOD</name>
              <description>time period that scl = 1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDA_DUTY</name>
          <description>configure sda duty</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>NUM</name>
              <description>time period for SDA to toggle after SCL goes low</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_START_PERIOD</name>
          <description>configure scl start period</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>SCL_START_PERIOD</name>
              <description>time period for SCL to toggle after I2C start is triggered</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_STOP_PERIOD</name>
          <description>configure scl stop period</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>SCL_STOP_PERIOD</name>
              <description>time period for SCL to stop after I2C end is triggered</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>interrupt clear register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLAVE_TRAN_COMP_INT_CLR</name>
              <description>clear slave transit complete interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ARBITRATION_LOST_INT_CLR</name>
              <description>clear arbitration lost interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MASTER_TRAN_COMP_INT_CLR</name>
              <description>clear master transit complete interrupt</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TRANS_COMPLETE_INT_CLR</name>
              <description>clear transit complete interrupt</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TIME_OUT_INT_CLR</name>
              <description>clear time out interrupt</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ACK_ERR_INT_CLR</name>
              <description>clear ack error interrupt</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RX_DATA_INT_CLR</name>
              <description>clear receive data interrupt</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TX_DATA_INT_CLR</name>
              <description>clear transit load data complete interrupt</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DETECT_START_INT_CLR</name>
              <description>clear detect start interrupt</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW</name>
          <description>interrupt raw register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLAVE_TRAN_COMP_INT_RAW</name>
              <description>slave transit complete interrupt raw</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ARBITRATION_LOST_INT_RAW</name>
              <description>arbitration lost interrupt raw</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MASTER_TRAN_COMP_INT_RAW</name>
              <description>master transit complete interrupt raw</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TRANS_COMPLETE_INT_RAW</name>
              <description>transit complete interrupt raw</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIME_OUT_INT_RAW</name>
              <description>time out interrupt raw</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ACK_ERR_INT_RAW</name>
              <description>ack error interrupt raw</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_DATA_INT_RAW</name>
              <description>receive data interrupt raw</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_DATA_INT_RAW</name>
              <description>transit data interrupt raw</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DETECT_START_INT_RAW</name>
              <description>detect start interrupt raw</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST</name>
          <description>interrupt state register</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLAVE_TRAN_COMP_INT_ST</name>
              <description>slave transit complete interrupt state</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ARBITRATION_LOST_INT_ST</name>
              <description>arbitration lost interrupt state</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MASTER_TRAN_COMP_INT_ST</name>
              <description>master transit complete interrupt state</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TRANS_COMPLETE_INT_ST</name>
              <description>transit complete interrupt state</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIME_OUT_INT_ST</name>
              <description>time out interrupt state</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ACK_ERR_INT_ST</name>
              <description>ack error interrupt state</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_DATA_INT_ST</name>
              <description>receive data interrupt state</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_DATA_INT_ST</name>
              <description>transit data interrupt state</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DETECT_START_INT_ST</name>
              <description>detect start interrupt state</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>interrupt enable register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLAVE_TRAN_COMP_INT_ENA</name>
              <description>enable slave transit complete interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ARBITRATION_LOST_INT_ENA</name>
              <description>enable arbitration lost interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MASTER_TRAN_COMP_INT_ENA</name>
              <description>enable master transit complete interrupt</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRANS_COMPLETE_INT_ENA</name>
              <description>enable transit complete interrupt</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIME_OUT_INT_ENA</name>
              <description>enable time out interrupt</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ACK_ERR_INT_ENA</name>
              <description>enable eack error interrupt</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_DATA_INT_ENA</name>
              <description>enable receive data interrupt</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_DATA_INT_ENA</name>
              <description>enable transit data interrupt</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DETECT_START_INT_ENA</name>
              <description>enable detect start interrupt</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA</name>
          <description>get i2c data status</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>I2C_RDATA</name>
              <description>data received</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLAVE_TX_DATA</name>
              <description>data sent by slave</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_DONE</name>
              <description>i2c done</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD0</name>
          <description>i2c commond0 register</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000903</resetValue>
          <fields>
            <field>
              <name>COMMAND0</name>
              <description>command0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND0_DONE</name>
              <description>command0_done</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD1</name>
          <description>i2c commond1 register</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00001901</resetValue>
          <fields>
            <field>
              <name>COMMAND1</name>
              <description>command1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND1_DONE</name>
              <description>command1_done</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD2</name>
          <description>i2c commond2 register</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000902</resetValue>
          <fields>
            <field>
              <name>COMMAND2</name>
              <description>command2</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND2_DONE</name>
              <description>command2_done</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD3</name>
          <description>i2c commond3 register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000101</resetValue>
          <fields>
            <field>
              <name>COMMAND3</name>
              <description>command3</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND3_DONE</name>
              <description>command3_done</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD4</name>
          <description>i2c commond4 register</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000901</resetValue>
          <fields>
            <field>
              <name>COMMAND4</name>
              <description>command4</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND4_DONE</name>
              <description>command4_done</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD5</name>
          <description>i2c commond5_register</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00001701</resetValue>
          <fields>
            <field>
              <name>COMMAND5</name>
              <description>command5</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND5_DONE</name>
              <description>command5_done</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD6</name>
          <description>i2c commond6 register</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <resetValue>0x00001901</resetValue>
          <fields>
            <field>
              <name>COMMAND6</name>
              <description>command6</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND6_DONE</name>
              <description>command6_done</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD7</name>
          <description>i2c commond7 register</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000904</resetValue>
          <fields>
            <field>
              <name>COMMAND7</name>
              <description>command7</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND7_DONE</name>
              <description>command7_done</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD8</name>
          <description>i2c commond8 register</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <resetValue>0x00001901</resetValue>
          <fields>
            <field>
              <name>COMMAND8</name>
              <description>command8</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND8_DONE</name>
              <description>command8_done</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD9</name>
          <description>i2c commond9 register</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000903</resetValue>
          <fields>
            <field>
              <name>COMMAND9</name>
              <description>command9</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND9_DONE</name>
              <description>command9_done</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD10</name>
          <description>i2c commond10 register</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000101</resetValue>
          <fields>
            <field>
              <name>COMMAND10</name>
              <description>command10</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND10_DONE</name>
              <description>command10_done</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD11</name>
          <description>i2c commond11 register</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000901</resetValue>
          <fields>
            <field>
              <name>COMMAND11</name>
              <description>command11</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND11_DONE</name>
              <description>command11_done</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD12</name>
          <description>i2c commond12 register</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <resetValue>0x00001701</resetValue>
          <fields>
            <field>
              <name>COMMAND12</name>
              <description>command12</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND12_DONE</name>
              <description>command12_done</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD13</name>
          <description>i2c commond13 register</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00001901</resetValue>
          <fields>
            <field>
              <name>COMMAND13</name>
              <description>command13</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND13_DONE</name>
              <description>command13_done</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD14</name>
          <description>i2c commond14 register</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>COMMAND14</name>
              <description>command14</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND14_DONE</name>
              <description>command14_done</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD15</name>
          <description>i2c commond15 register</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>COMMAND15</name>
              <description>command15</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND15_DONE</name>
              <description>command15_done</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>version register</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <resetValue>0x01905310</resetValue>
          <fields>
            <field>
              <name>I2C_DATE</name>
              <description>version</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>RTCIO</name>
      <description>Peripheral RTC_IO</description>
      <groupName>RTC_IO</groupName>
      <baseAddress>0x60008400</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xF0</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>RTC_GPIO_OUT</name>
          <description>RTC GPIO 0 ~ 21 output data register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DATA</name>
              <description>RTC GPIO 0 ~ 21 output data</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_GPIO_OUT_W1TS</name>
          <description>one set RTC GPIO output data</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_GPIO_OUT_DATA_W1TS</name>
              <description>RTC GPIO 0 ~ 21 output data write 1 to set</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_GPIO_OUT_W1TC</name>
          <description>one clear RTC GPIO output data</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_GPIO_OUT_DATA_W1TC</name>
              <description>RTC GPIO 0 ~ 21 output data write 1 to clear</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_GPIO_ENABLE</name>
          <description>Configure RTC GPIO output enable</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_GPIO_ENABLE</name>
              <description>RTC GPIO 0 ~ 21 enable</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_GPIO_ENABLE_W1TS</name>
          <description>one set RTC GPIO output enable</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_GPIO_ENABLE_W1TS</name>
              <description>RTC GPIO 0 ~ 21 enable write 1 to set</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ENABLE_W1TC</name>
          <description>one clear RTC GPIO output enable</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ENABLE_W1TC</name>
              <description>RTC GPIO 0 ~ 21 enable write 1 to clear</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_GPIO_STATUS</name>
          <description>RTC GPIO 0 ~ 21 interrupt status</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INT</name>
              <description>RTC GPIO 0 ~ 21 interrupt status</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_GPIO_STATUS_W1TS</name>
          <description>One set RTC GPIO 0 ~ 21 interrupt status</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_GPIO_STATUS_INT_W1TS</name>
              <description>RTC GPIO 0 ~ 21 interrupt status write 1 to set</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_GPIO_STATUS_W1TC</name>
          <description>One clear RTC GPIO 0 ~ 21 interrupt status</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_GPIO_STATUS_INT_W1TC</name>
              <description>RTC GPIO 0 ~ 21 interrupt status write 1 to clear</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_GPIO_IN</name>
          <description>RTC GPIO input data</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>NEXT</name>
              <description>RTC GPIO input data</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>22</dim>
          <dimIncrement>0x4</dimIncrement>
          <dimIndex>0-21</dimIndex>
          <name>PIN%s</name>
          <description>configure RTC GPIO%s</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PAD_DRIVER</name>
              <description>if set to 0: normal output, if set to 1: open drain</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INT_TYPE</name>
              <description>if set to 0: GPIO interrupt disable,  if set to 1: rising edge trigger,  if set to 2: falling edge trigger, if set to 3: any edge trigger, if set to 4: low level trigger,  if set to 5: high level trigger</description>
              <bitOffset>7</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WAKEUP_ENABLE</name>
              <description>RTC GPIO wakeup enable bit</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_DEBUG_SEL</name>
          <description>configure rtc debug</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_DEBUG_SEL0</name>
              <description>configure rtc debug</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_DEBUG_SEL1</name>
              <description>configure rtc debug</description>
              <bitOffset>5</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_DEBUG_SEL2</name>
              <description>configure rtc debug</description>
              <bitOffset>10</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_DEBUG_SEL3</name>
              <description>configure rtc debug</description>
              <bitOffset>15</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_DEBUG_SEL4</name>
              <description>configure rtc debug</description>
              <bitOffset>20</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_DEBUG_12M_NO_GATING</name>
              <description>configure rtc debug</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_PAD0</name>
          <description>configure RTC  PAD0</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <resetValue>0x50000000</resetValue>
          <fields>
            <field>
              <name>FUN_IE</name>
              <description>input enable in work mode</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_OE</name>
              <description>output enable in sleep mode</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_IE</name>
              <description>input enable in sleep mode</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>1: enable sleep mode during sleep,0: no sleep mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_SEL</name>
              <description>function sel</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MUX_SEL</name>
              <description>1: use RTC GPIO,0: use digital GPIO</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD</name>
              <description>TOUCH_XPD</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIE_OPT</name>
              <description>TOUCH_TIE_OPT</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>START</name>
              <description>TOUCH_START</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RUE</name>
              <description>RUE</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RDE</name>
              <description>RDE</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRV</name>
              <description>DRV</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_PAD1</name>
          <description>configure RTC  PAD1</description>
          <addressOffset>0x88</addressOffset>
          <size>0x20</size>
          <resetValue>0x48000000</resetValue>
          <fields>
            <field>
              <name>FUN_IE</name>
              <description>input enable in work mode</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_OE</name>
              <description>output enable in sleep mode</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_IE</name>
              <description>input enable in sleep mode</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>1: enable sleep mode during sleep,0: no sleep mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_SEL</name>
              <description>function sel</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MUX_SEL</name>
              <description>1: use RTC GPIO,0: use digital GPIO</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD</name>
              <description>TOUCH_XPD</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIE_OPT</name>
              <description>TOUCH_TIE_OPT</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>START</name>
              <description>TOUCH_START</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RUE</name>
              <description>RUE</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RDE</name>
              <description>RDE</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRV</name>
              <description>DRV</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_PAD2</name>
          <description>configure RTC  PAD2</description>
          <addressOffset>0x8C</addressOffset>
          <size>0x20</size>
          <resetValue>0x50000000</resetValue>
          <fields>
            <field>
              <name>FUN_IE</name>
              <description>input enable in work mode</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_OE</name>
              <description>output enable in sleep mode</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_IE</name>
              <description>input enable in sleep mode</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>1: enable sleep mode during sleep,0: no sleep mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_SEL</name>
              <description>function sel</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MUX_SEL</name>
              <description>1: use RTC GPIO,0: use digital GPIO</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD</name>
              <description>TOUCH_XPD</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIE_OPT</name>
              <description>TOUCH_TIE_OPT</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>START</name>
              <description>TOUCH_START</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RUE</name>
              <description>RUE</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RDE</name>
              <description>RDE</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRV</name>
              <description>DRV</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_PAD3</name>
          <description>configure RTC  PAD3</description>
          <addressOffset>0x90</addressOffset>
          <size>0x20</size>
          <resetValue>0x48000000</resetValue>
          <fields>
            <field>
              <name>FUN_IE</name>
              <description>input enable in work mode</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_OE</name>
              <description>output enable in sleep mode</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_IE</name>
              <description>input enable in sleep mode</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>1: enable sleep mode during sleep,0: no sleep mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_SEL</name>
              <description>function sel</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MUX_SEL</name>
              <description>1: use RTC GPIO,0: use digital GPIO</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD</name>
              <description>TOUCH_XPD</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIE_OPT</name>
              <description>TOUCH_TIE_OPT</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>START</name>
              <description>TOUCH_START</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RUE</name>
              <description>RUE</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RDE</name>
              <description>RDE</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRV</name>
              <description>DRV</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_PAD4</name>
          <description>configure RTC  PAD4</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <resetValue>0x50000000</resetValue>
          <fields>
            <field>
              <name>FUN_IE</name>
              <description>input enable in work mode</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_OE</name>
              <description>output enable in sleep mode</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_IE</name>
              <description>input enable in sleep mode</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>1: enable sleep mode during sleep,0: no sleep mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_SEL</name>
              <description>function sel</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MUX_SEL</name>
              <description>1: use RTC GPIO,0: use digital GPIO</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD</name>
              <description>TOUCH_XPD</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIE_OPT</name>
              <description>TOUCH_TIE_OPT</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>START</name>
              <description>TOUCH_START</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RUE</name>
              <description>RUE</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RDE</name>
              <description>RDE</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRV</name>
              <description>DRV</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_PAD5</name>
          <description>configure RTC  PAD5</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <resetValue>0x50000000</resetValue>
          <fields>
            <field>
              <name>FUN_IE</name>
              <description>input enable in work mode</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_OE</name>
              <description>output enable in sleep mode</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_IE</name>
              <description>input enable in sleep mode</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>1: enable sleep mode during sleep,0: no sleep mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_SEL</name>
              <description>function sel</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MUX_SEL</name>
              <description>1: use RTC GPIO,0: use digital GPIO</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD</name>
              <description>TOUCH_XPD</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIE_OPT</name>
              <description>TOUCH_TIE_OPT</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>START</name>
              <description>TOUCH_START</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RUE</name>
              <description>RUE</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RDE</name>
              <description>RDE</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRV</name>
              <description>DRV</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_PAD6</name>
          <description>configure RTC  PAD6</description>
          <addressOffset>0x9C</addressOffset>
          <size>0x20</size>
          <resetValue>0x48000000</resetValue>
          <fields>
            <field>
              <name>FUN_IE</name>
              <description>input enable in work mode</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_OE</name>
              <description>output enable in sleep mode</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_IE</name>
              <description>input enable in sleep mode</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>1: enable sleep mode during sleep,0: no sleep mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_SEL</name>
              <description>function sel</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MUX_SEL</name>
              <description>1: use RTC GPIO,0: use digital GPIO</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD</name>
              <description>TOUCH_XPD</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIE_OPT</name>
              <description>TOUCH_TIE_OPT</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>START</name>
              <description>TOUCH_START</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RUE</name>
              <description>RUE</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RDE</name>
              <description>RDE</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRV</name>
              <description>DRV</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_PAD7</name>
          <description>configure RTC  PAD7</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <resetValue>0x40000000</resetValue>
          <fields>
            <field>
              <name>FUN_IE</name>
              <description>input enable in work mode</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_OE</name>
              <description>output enable in sleep mode</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_IE</name>
              <description>input enable in sleep mode</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>1: enable sleep mode during sleep,0: no sleep mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_SEL</name>
              <description>function sel</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MUX_SEL</name>
              <description>1: use RTC GPIO,0: use digital GPIO</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD</name>
              <description>TOUCH_XPD</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIE_OPT</name>
              <description>TOUCH_TIE_OPT</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>START</name>
              <description>TOUCH_START</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RUE</name>
              <description>RUE</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RDE</name>
              <description>RDE</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRV</name>
              <description>DRV</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_PAD8</name>
          <description>configure RTC  PAD8</description>
          <addressOffset>0xA4</addressOffset>
          <size>0x20</size>
          <resetValue>0x40000000</resetValue>
          <fields>
            <field>
              <name>FUN_IE</name>
              <description>input enable in work mode</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_OE</name>
              <description>output enable in sleep mode</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_IE</name>
              <description>input enable in sleep mode</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>1: enable sleep mode during sleep,0: no sleep mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_SEL</name>
              <description>function sel</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MUX_SEL</name>
              <description>1: use RTC GPIO,0: use digital GPIO</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD</name>
              <description>TOUCH_XPD</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIE_OPT</name>
              <description>TOUCH_TIE_OPT</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>START</name>
              <description>TOUCH_START</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RUE</name>
              <description>RUE</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RDE</name>
              <description>RDE</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRV</name>
              <description>DRV</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_PAD9</name>
          <description>configure RTC  PAD9</description>
          <addressOffset>0xA8</addressOffset>
          <size>0x20</size>
          <resetValue>0x40000000</resetValue>
          <fields>
            <field>
              <name>FUN_IE</name>
              <description>input enable in work mode</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_OE</name>
              <description>output enable in sleep mode</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_IE</name>
              <description>input enable in sleep mode</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>1: enable sleep mode during sleep,0: no sleep mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_SEL</name>
              <description>function sel</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MUX_SEL</name>
              <description>1: use RTC GPIO,0: use digital GPIO</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD</name>
              <description>TOUCH_XPD</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIE_OPT</name>
              <description>TOUCH_TIE_OPT</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>START</name>
              <description>TOUCH_START</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RUE</name>
              <description>RUE</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RDE</name>
              <description>RDE</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRV</name>
              <description>DRV</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_PAD10</name>
          <description>configure RTC  PAD10</description>
          <addressOffset>0xAC</addressOffset>
          <size>0x20</size>
          <resetValue>0x40000000</resetValue>
          <fields>
            <field>
              <name>FUN_IE</name>
              <description>input enable in work mode</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_OE</name>
              <description>output enable in sleep mode</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_IE</name>
              <description>input enable in sleep mode</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>1: enable sleep mode during sleep,0: no sleep mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_SEL</name>
              <description>function sel</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MUX_SEL</name>
              <description>1: use RTC GPIO,0: use digital GPIO</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD</name>
              <description>TOUCH_XPD</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIE_OPT</name>
              <description>TOUCH_TIE_OPT</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>START</name>
              <description>TOUCH_START</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RUE</name>
              <description>RUE</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RDE</name>
              <description>RDE</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRV</name>
              <description>DRV</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_PAD11</name>
          <description>configure RTC  PAD11</description>
          <addressOffset>0xB0</addressOffset>
          <size>0x20</size>
          <resetValue>0x40000000</resetValue>
          <fields>
            <field>
              <name>FUN_IE</name>
              <description>input enable in work mode</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_OE</name>
              <description>output enable in sleep mode</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_IE</name>
              <description>input enable in sleep mode</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>1: enable sleep mode during sleep,0: no sleep mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_SEL</name>
              <description>function sel</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MUX_SEL</name>
              <description>1: use RTC GPIO,0: use digital GPIO</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD</name>
              <description>TOUCH_XPD</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIE_OPT</name>
              <description>TOUCH_TIE_OPT</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>START</name>
              <description>TOUCH_START</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RUE</name>
              <description>RUE</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RDE</name>
              <description>RDE</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRV</name>
              <description>DRV</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_PAD12</name>
          <description>configure RTC  PAD12</description>
          <addressOffset>0xB4</addressOffset>
          <size>0x20</size>
          <resetValue>0x40000000</resetValue>
          <fields>
            <field>
              <name>FUN_IE</name>
              <description>input enable in work mode</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_OE</name>
              <description>output enable in sleep mode</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_IE</name>
              <description>input enable in sleep mode</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>1: enable sleep mode during sleep,0: no sleep mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_SEL</name>
              <description>function sel</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MUX_SEL</name>
              <description>1: use RTC GPIO,0: use digital GPIO</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD</name>
              <description>TOUCH_XPD</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIE_OPT</name>
              <description>TOUCH_TIE_OPT</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>START</name>
              <description>TOUCH_START</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RUE</name>
              <description>RUE</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RDE</name>
              <description>RDE</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRV</name>
              <description>DRV</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_PAD13</name>
          <description>configure RTC  PAD13</description>
          <addressOffset>0xB8</addressOffset>
          <size>0x20</size>
          <resetValue>0x40000000</resetValue>
          <fields>
            <field>
              <name>FUN_IE</name>
              <description>input enable in work mode</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_OE</name>
              <description>output enable in sleep mode</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_IE</name>
              <description>input enable in sleep mode</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>1: enable sleep mode during sleep,0: no sleep mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_SEL</name>
              <description>function sel</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MUX_SEL</name>
              <description>1: use RTC GPIO,0: use digital GPIO</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD</name>
              <description>TOUCH_XPD</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIE_OPT</name>
              <description>TOUCH_TIE_OPT</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>START</name>
              <description>TOUCH_START</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RUE</name>
              <description>RUE</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RDE</name>
              <description>RDE</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRV</name>
              <description>DRV</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_PAD14</name>
          <description>configure RTC  PAD14</description>
          <addressOffset>0xBC</addressOffset>
          <size>0x20</size>
          <resetValue>0x40000000</resetValue>
          <fields>
            <field>
              <name>FUN_IE</name>
              <description>input enable in work mode</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_OE</name>
              <description>output enable in sleep mode</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_IE</name>
              <description>input enable in sleep mode</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>1: enable sleep mode during sleep,0: no sleep mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_SEL</name>
              <description>function sel</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MUX_SEL</name>
              <description>1: use RTC GPIO,0: use digital GPIO</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD</name>
              <description>TOUCH_XPD</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIE_OPT</name>
              <description>TOUCH_TIE_OPT</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>START</name>
              <description>TOUCH_START</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RUE</name>
              <description>RUE</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RDE</name>
              <description>RDE</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRV</name>
              <description>DRV</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>XTAL_32P_PAD</name>
          <description>configure RTC  PAD15</description>
          <addressOffset>0xC0</addressOffset>
          <size>0x20</size>
          <resetValue>0x40000000</resetValue>
          <fields>
            <field>
              <name>X32P_FUN_IE</name>
              <description>input enable in work mode</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32P_SLP_OE</name>
              <description>output enable in sleep mode</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32P_SLP_IE</name>
              <description>input enable in sleep mode</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32P_SLP_SEL</name>
              <description>1: enable sleep mode during sleep,0: no sleep mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32P_FUN_SEL</name>
              <description>function sel</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32P_MUX_SEL</name>
              <description>1: use RTC GPIO,0: use digital GPIO</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32P_RUE</name>
              <description>RUE</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32P_RDE</name>
              <description>RDE</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32P_DRV</name>
              <description>DRV</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>XTAL_32N_PAD</name>
          <description>configure RTC  PAD16</description>
          <addressOffset>0xC4</addressOffset>
          <size>0x20</size>
          <resetValue>0x40000000</resetValue>
          <fields>
            <field>
              <name>X32N_FUN_IE</name>
              <description>input enable in work mode</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32N_SLP_OE</name>
              <description>output enable in sleep mode</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32N_SLP_IE</name>
              <description>input enable in sleep mode</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32N_SLP_SEL</name>
              <description>1: enable sleep mode during sleep,0: no sleep mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32N_FUN_SEL</name>
              <description>function sel</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32N_MUX_SEL</name>
              <description>1: use RTC GPIO,0: use digital GPIO</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32N_RUE</name>
              <description>RUE</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32N_RDE</name>
              <description>RDE</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32N_DRV</name>
              <description>DRV</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PAD_DAC1</name>
          <description>configure RTC  PAD17</description>
          <addressOffset>0xC8</addressOffset>
          <size>0x20</size>
          <resetValue>0x40000000</resetValue>
          <fields>
            <field>
              <name>PDAC1_DAC</name>
              <description>PDAC1_DAC</description>
              <bitOffset>3</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC1_XPD_DAC</name>
              <description>PDAC1_XPD_DAC</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC1_DAC_XPD_FORCE</name>
              <description>1: use reg_pdac1_xpd_dac to control PDAC1_XPD_DAC,0: use SAR ADC FSM to control PDAC1_XPD_DAC</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC1_FUN_IE</name>
              <description>input enable in work mode</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC1_SLP_OE</name>
              <description>output enable in sleep mode</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC1_SLP_IE</name>
              <description>input enable in sleep mode</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC1_SLP_SEL</name>
              <description>1: enable sleep mode during sleep,0: no sleep mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC1_FUN_SEL</name>
              <description>PDAC1 function sel</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC1_MUX_SEL</name>
              <description>1: use RTC GPIO,0: use digital GPIO</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC1_RUE</name>
              <description>PDAC1_RUE</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC1_RDE</name>
              <description>PDAC1_RDE</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC1_DRV</name>
              <description>PDAC1_DRV</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PAD_DAC2</name>
          <description>configure RTC  PAD18</description>
          <addressOffset>0xCC</addressOffset>
          <size>0x20</size>
          <resetValue>0x40000000</resetValue>
          <fields>
            <field>
              <name>PDAC2_DAC</name>
              <description>PDAC2_DAC</description>
              <bitOffset>3</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC2_XPD_DAC</name>
              <description>PDAC2_XPD_DAC</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC2_DAC_XPD_FORCE</name>
              <description>1: use reg_pdac2_xpd_dac to control PDAC2_XPD_DAC,0: use SAR ADC FSM to control PDAC2_XPD_DAC</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC2_FUN_IE</name>
              <description>input enable in work mode</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC2_SLP_OE</name>
              <description>output enable in sleep mode</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC2_SLP_IE</name>
              <description>input enable in sleep mode</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC2_SLP_SEL</name>
              <description>1: enable sleep mode during sleep,0: no sleep mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC2_FUN_SEL</name>
              <description>PDAC1 function sel</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC2_MUX_SEL</name>
              <description>1: use RTC GPIO,0: use digital GPIO</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC2_RUE</name>
              <description>PDAC2_RUE</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC2_RDE</name>
              <description>PDAC2_RDE</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC2_DRV</name>
              <description>PDAC2_DRV</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_PAD19</name>
          <description>configure RTC  PAD19</description>
          <addressOffset>0xD0</addressOffset>
          <size>0x20</size>
          <resetValue>0x50000000</resetValue>
          <fields>
            <field>
              <name>FUN_IE</name>
              <description>input enable in work mode</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_OE</name>
              <description>output enable in sleep mode</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_IE</name>
              <description>input enable in sleep mode</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>1: enable sleep mode during sleep,0: no sleep mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_SEL</name>
              <description>function sel</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MUX_SEL</name>
              <description>1: use RTC GPIO,0: use digital GPIO</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RUE</name>
              <description>RUE</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RDE</name>
              <description>RDE</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRV</name>
              <description>DRV</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_PAD20</name>
          <description>configure RTC  PAD20</description>
          <addressOffset>0xD4</addressOffset>
          <size>0x20</size>
          <resetValue>0x50000000</resetValue>
          <fields>
            <field>
              <name>FUN_IE</name>
              <description>input enable in work mode</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_OE</name>
              <description>output enable in sleep mode</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_IE</name>
              <description>input enable in sleep mode</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>1: enable sleep mode during sleep,0: no sleep mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_SEL</name>
              <description>function sel</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MUX_SEL</name>
              <description>1: use RTC GPIO,0: use digital GPIO</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RUE</name>
              <description>RUE</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RDE</name>
              <description>RDE</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRV</name>
              <description>DRV</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_PAD21</name>
          <description>configure RTC  PAD21</description>
          <addressOffset>0xD8</addressOffset>
          <size>0x20</size>
          <resetValue>0x50000000</resetValue>
          <fields>
            <field>
              <name>FUN_IE</name>
              <description>input enable in work mode</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_OE</name>
              <description>output enable in sleep mode</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_IE</name>
              <description>input enable in sleep mode</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>1: enable sleep mode during sleep,0: no sleep mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_SEL</name>
              <description>function sel</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MUX_SEL</name>
              <description>1: use RTC GPIO,0: use digital GPIO</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RUE</name>
              <description>RUE</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RDE</name>
              <description>RDE</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRV</name>
              <description>DRV</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXT_WAKEUP0</name>
          <description>configure EXT0 wakeup</description>
          <addressOffset>0xDC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SEL</name>
              <description>******* Description configure***</description>
              <bitOffset>27</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>XTL_EXT_CTR</name>
          <description>configure gpio pd XTAL</description>
          <addressOffset>0xE0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SEL</name>
              <description>select RTC GPIO 0 ~ 17 to control XTAL</description>
              <bitOffset>27</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_I2C_IO</name>
          <description>configure rtc i2c mux</description>
          <addressOffset>0xE4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_DEBUG_BIT_SEL</name>
              <description>******* Description configure***</description>
              <bitOffset>23</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_I2C_SCL_SEL</name>
              <description>******* Description configure***</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_I2C_SDA_SEL</name>
              <description>******* Description configure***</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_CTRL</name>
          <description>configure touch pad bufmode</description>
          <addressOffset>0xE8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IO_TOUCH_BUFSEL</name>
              <description>BUF_SEL when touch work without fsm</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IO_TOUCH_BUFMODE</name>
              <description>BUF_MODE when touch work without fsm</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>version</description>
          <addressOffset>0x1FC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02101180</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>version</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SENS</name>
      <description>Peripheral SENS</description>
      <groupName>SENS</groupName>
      <baseAddress>0x60008800</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x11C</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>SAR_READER1_CTRL</name>
          <description>configure saradc1 reader</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x20040002</resetValue>
          <fields>
            <field>
              <name>SAR_SAR1_CLK_DIV</name>
              <description>clock divider</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_SAR1_CLK_GATED</name>
              <description>no public</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_SAR1_SAMPLE_NUM</name>
              <description>no public</description>
              <bitOffset>19</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_SAR1_DATA_INV</name>
              <description>Invert SAR ADC1 data</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_SAR1_INT_EN</name>
              <description>enable saradc1 to send out interrupt</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_READER1_STATUS</name>
          <description>get saradc1 reader controller status</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_SAR1_READER_STATUS</name>
              <description>get saradc1 reader controller status</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_MEAS1_CTRL1</name>
          <description>no public</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_FORCE_XPD_AMP</name>
              <description>no public</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_AMP_RST_FB_FORCE</name>
              <description>no public</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_AMP_SHORT_REF_FORCE</name>
              <description>no public</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_AMP_SHORT_REF_GND_FORCE</name>
              <description>no public</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_MEAS1_CTRL2</name>
          <description>configure saradc1 controller</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_MEAS1_DATA_SAR</name>
              <description>SAR ADC1 data</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_MEAS1_DONE_SAR</name>
              <description>SAR ADC1 conversion done indication</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_MEAS1_START_SAR</name>
              <description>SAR ADC1 controller (in RTC) starts conversion</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_MEAS1_START_FORCE</name>
              <description>1: SAR ADC1 controller (in RTC) is started by SW</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_SAR1_EN_PAD</name>
              <description>SAR ADC1 pad enable bitmap</description>
              <bitOffset>19</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_SAR1_EN_PAD_FORCE</name>
              <description>1: SAR ADC1 pad enable bitmap is controlled by SW</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_MEAS1_MUX</name>
          <description>configure saradc1 controller</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_SAR1_DIG_FORCE</name>
              <description>1: SAR ADC1 controlled by DIG ADC1 CTRL</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_ATTEN1</name>
          <description>configure saradc1 controller</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>SAR_SAR1_ATTEN</name>
              <description>2-bit attenuation for each pad</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_AMP_CTRL1</name>
          <description>no public</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <resetValue>0x000A000A</resetValue>
          <fields>
            <field>
              <name>SAR_AMP_WAIT1</name>
              <description>no public</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_AMP_WAIT2</name>
              <description>no public</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_AMP_CTRL2</name>
          <description>no public</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <resetValue>0x000A0000</resetValue>
          <fields>
            <field>
              <name>SAR_SAR1_DAC_XPD_FSM_IDLE</name>
              <description>no public</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_XPD_SAR_AMP_FSM_IDLE</name>
              <description>no public</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_AMP_RST_FB_FSM_IDLE</name>
              <description>no public</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_AMP_SHORT_REF_FSM_IDLE</name>
              <description>no public</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_AMP_SHORT_REF_GND_FSM_IDLE</name>
              <description>no public</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_XPD_SAR_FSM_IDLE</name>
              <description>no public</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_RSTB_FSM_IDLE</name>
              <description>no public</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_AMP_WAIT3</name>
              <description>no public</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_AMP_CTRL3</name>
          <description>no public</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <resetValue>0x007338F3</resetValue>
          <fields>
            <field>
              <name>SAR_SAR1_DAC_XPD_FSM</name>
              <description>no public</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_XPD_SAR_AMP_FSM</name>
              <description>no public</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_AMP_RST_FB_FSM</name>
              <description>no public</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_AMP_SHORT_REF_FSM</name>
              <description>no public</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_AMP_SHORT_REF_GND_FSM</name>
              <description>no public</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_XPD_SAR_FSM</name>
              <description>no public</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_RSTB_FSM</name>
              <description>no public</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_READER2_CTRL</name>
          <description>configure saradc2 reader</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <resetValue>0x40050002</resetValue>
          <fields>
            <field>
              <name>SAR_SAR2_CLK_DIV</name>
              <description>clock divider</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_SAR2_WAIT_ARB_CYCLE</name>
              <description>wait arbit stable after sar_done</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_SAR2_CLK_GATED</name>
              <description>******* Description ***********</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_SAR2_SAMPLE_NUM</name>
              <description>******* Description ***********</description>
              <bitOffset>19</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_SAR2_DATA_INV</name>
              <description>Invert SAR ADC2 data</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_SAR2_INT_EN</name>
              <description>enable saradc2 to send out interrupt</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_READER2_STATUS</name>
          <description>get saradc1 reader controller status</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_SAR2_READER_STATUS</name>
              <description>get saradc1 reader controller status</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_MEAS2_CTRL1</name>
          <description>configure saradc2 controller</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <resetValue>0x07020200</resetValue>
          <fields>
            <field>
              <name>SAR_SAR2_CNTL_STATE</name>
              <description>saradc2_cntl_fsm</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_SAR2_PWDET_CAL_EN</name>
              <description>rtc control pwdet enable</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_SAR2_PKDET_CAL_EN</name>
              <description>rtc control pkdet enable</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_SAR2_EN_TEST</name>
              <description>SAR2_EN_TEST</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_SAR2_RSTB_FORCE</name>
              <description>no public</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_SAR2_STANDBY_WAIT</name>
              <description>no public</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_SAR2_RSTB_WAIT</name>
              <description>no public</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_SAR2_XPD_WAIT</name>
              <description>no public</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_MEAS2_CTRL2</name>
          <description>configure saradc2 controller</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_MEAS2_DATA_SAR</name>
              <description>SAR ADC2 data</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_MEAS2_DONE_SAR</name>
              <description>SAR ADC2 conversion done indication</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_MEAS2_START_SAR</name>
              <description>SAR ADC2 controller (in RTC) starts conversion</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_MEAS2_START_FORCE</name>
              <description>1: SAR ADC2 controller (in RTC) is started by SW</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_SAR2_EN_PAD</name>
              <description>SAR ADC2 pad enable bitmap</description>
              <bitOffset>19</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_SAR2_EN_PAD_FORCE</name>
              <description>1: SAR ADC2 pad enable bitmap is controlled by SW</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_MEAS2_MUX</name>
          <description>configure saradc2 controller</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_SAR2_PWDET_CCT</name>
              <description>SAR2_PWDET_CCT</description>
              <bitOffset>28</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_SAR2_RTC_FORCE</name>
              <description>in sleep, force to use rtc to control ADC</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_ATTEN2</name>
          <description>configure saradc2 controller</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>SAR_SAR2_ATTEN</name>
              <description>2-bit attenuation for each pad</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_POWER_XPD_SAR</name>
          <description>configure power of saradc</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_FORCE_XPD_SAR</name>
              <description>force power on/off saradc</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_SARCLK_EN</name>
              <description>no public</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_SLAVE_ADDR1</name>
          <description>configure i2c slave address</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_I2C_SLAVE_ADDR1</name>
              <description>configure i2c slave address1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_I2C_SLAVE_ADDR0</name>
              <description>configure i2c slave address0</description>
              <bitOffset>11</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_SARADC_MEAS_STATUS</name>
              <description>no public</description>
              <bitOffset>22</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_SLAVE_ADDR2</name>
          <description>configure i2c slave address</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_I2C_SLAVE_ADDR3</name>
              <description>configure i2c slave address3</description>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_I2C_SLAVE_ADDR2</name>
              <description>configure i2c slave address2</description>
              <bitOffset>11</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_SLAVE_ADDR3</name>
          <description>configure i2c slave address</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_I2C_SLAVE_ADDR5</name>
              <description>configure i2c slave address5</description>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_I2C_SLAVE_ADDR4</name>
              <description>configure i2c slave address4</description>
              <bitOffset>11</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_SLAVE_ADDR4</name>
          <description>configure i2c slave address</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_I2C_SLAVE_ADDR7</name>
              <description>configure i2c slave address7</description>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_I2C_SLAVE_ADDR6</name>
              <description>configure i2c slave address6</description>
              <bitOffset>11</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TSENS_CTRL</name>
          <description>configure tsens controller</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <resetValue>0x00019000</resetValue>
          <fields>
            <field>
              <name>SAR_TSENS_OUT</name>
              <description>temperature sensor data out</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_TSENS_READY</name>
              <description>indicate temperature sensor out ready</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_TSENS_INT_EN</name>
              <description>enable temperature sensor to send out interrupt</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_TSENS_IN_INV</name>
              <description>invert temperature sensor data</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_TSENS_CLK_DIV</name>
              <description>temperature sensor clock divider</description>
              <bitOffset>14</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_TSENS_POWER_UP</name>
              <description>temperature sensor power up</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_TSENS_POWER_UP_FORCE</name>
              <description>1: dump out &amp; power up controlled by SW 0: by FSM</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_TSENS_DUMP_OUT</name>
              <description>temperature sensor dump out only active when reg_tsens_power_up_force = 1</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TSENS_CTRL2</name>
          <description>configure tsens controller</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <resetValue>0x00004002</resetValue>
          <fields>
            <field>
              <name>SAR_TSENS_XPD_WAIT</name>
              <description>no public</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_TSENS_XPD_FORCE</name>
              <description>no public</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_TSENS_CLK_INV</name>
              <description>no public</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_I2C_CTRL</name>
          <description>configure rtc i2c controller by sw</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_I2C_CTRL</name>
              <description>I2C control data  only active when reg_sar_i2c_start_force = 1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_I2C_START</name>
              <description>start I2C  only active when reg_sar_i2c_start_force = 1</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_I2C_START_FORCE</name>
              <description>1: I2C started by SW  0: I2C started by FSM</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_CONF</name>
          <description>configure touch controller</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFF07FFF</resetValue>
          <fields>
            <field>
              <name>SAR_TOUCH_OUTEN</name>
              <description>touch controller output enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_TOUCH_STATUS_CLR</name>
              <description>clear all touch active status</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_TOUCH_DATA_SEL</name>
              <description>3: smooth data 2: baseline 1,0: raw_data</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_TOUCH_DENOISE_END</name>
              <description>touch_denoise_done</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_TOUCH_UNIT_END</name>
              <description>touch_unit_done</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_TOUCH_APPROACH_PAD2</name>
              <description>indicate which pad is approach pad2</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_TOUCH_APPROACH_PAD1</name>
              <description>indicate which pad is approach pad1</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_TOUCH_APPROACH_PAD0</name>
              <description>indicate which pad is approach pad0</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_DENOISE</name>
          <description>configure touch controller</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DATA</name>
              <description>configure touch controller</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES1</name>
          <description>configure touch thres of touch pad</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_OUT_TH1</name>
              <description>Finger threshold for touch pad 1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES2</name>
          <description>configure touch thres of touch pad</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_OUT_TH2</name>
              <description>Finger threshold for touch pad 2</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES3</name>
          <description>configure touch thres of touch pad</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_OUT_TH3</name>
              <description>Finger threshold for touch pad 3</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES4</name>
          <description>configure touch thres of touch pad</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_OUT_TH4</name>
              <description>Finger threshold for touch pad 4</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES5</name>
          <description>configure touch thres of touch pad</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_OUT_TH5</name>
              <description>Finger threshold for touch pad 5</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES6</name>
          <description>configure touch thres of touch pad</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_OUT_TH6</name>
              <description>Finger threshold for touch pad 6</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES7</name>
          <description>configure touch thres of touch pad</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_OUT_TH7</name>
              <description>Finger threshold for touch pad 7</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES8</name>
          <description>configure touch thres of touch pad</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_OUT_TH8</name>
              <description>Finger threshold for touch pad 8</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES9</name>
          <description>configure touch thres of touch pad</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_OUT_TH9</name>
              <description>Finger threshold for touch pad 9</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES10</name>
          <description>configure touch thres of touch pad</description>
          <addressOffset>0x88</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_OUT_TH10</name>
              <description>Finger threshold for touch pad 10</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES11</name>
          <description>configure touch thres of touch pad</description>
          <addressOffset>0x8C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_OUT_TH11</name>
              <description>Finger threshold for touch pad 11</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES12</name>
          <description>configure touch thres of touch pad</description>
          <addressOffset>0x90</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_OUT_TH12</name>
              <description>Finger threshold for touch pad 12</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES13</name>
          <description>configure touch thres of touch pad</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_OUT_TH13</name>
              <description>Finger threshold for touch pad 13</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES14</name>
          <description>configure touch thres of touch pad</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_OUT_TH14</name>
              <description>Finger threshold for touch pad 14</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_CHN_ST</name>
          <description>Get touch channel status</description>
          <addressOffset>0x9C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_PAD_ACTIVE</name>
              <description>touch active status</description>
              <bitOffset>0</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_TOUCH_CHANNEL_CLR</name>
              <description>Clear touch channel</description>
              <bitOffset>15</bitOffset>
              <bitWidth>15</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_TOUCH_MEAS_DONE</name>
              <description>get touch meas done</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS0</name>
          <description>get touch scan status</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_SCAN_CURR</name>
              <description>current sample channel</description>
              <bitOffset>22</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS1</name>
          <description>touch channel status of touch pad 1</description>
          <addressOffset>0xA4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_PAD1_DATA</name>
              <description>touch data debounce of touch pad 1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_TOUCH_PAD1_DEBOUNCE</name>
              <description>touch current debounce of touch pad 1</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS2</name>
          <description>touch channel status of touch pad 2</description>
          <addressOffset>0xA8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_PAD2_DATA</name>
              <description>touch data debounce of touch pad 2</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_TOUCH_PAD2_DEBOUNCE</name>
              <description>touch current debounce of touch pad 2</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS3</name>
          <description>touch channel status of touch pad 3</description>
          <addressOffset>0xAC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_PAD3_DATA</name>
              <description>touch data debounce of touch pad 3</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_TOUCH_PAD3_DEBOUNCE</name>
              <description>touch current debounce of touch pad 3</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS4</name>
          <description>touch channel status of touch pad 4</description>
          <addressOffset>0xB0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_PAD4_DATA</name>
              <description>touch data debounce of touch pad 4</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_TOUCH_PAD4_DEBOUNCE</name>
              <description>touch current debounce of touch pad 4</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS5</name>
          <description>touch channel status of touch pad 5</description>
          <addressOffset>0xB4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_PAD5_DATA</name>
              <description>touch data debounce of touch pad 5</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_TOUCH_PAD5_DEBOUNCE</name>
              <description>touch current debounce of touch pad 5</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS6</name>
          <description>touch channel status of touch pad 6</description>
          <addressOffset>0xB8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_PAD6_DATA</name>
              <description>touch data debounce of touch pad 6</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_TOUCH_PAD6_DEBOUNCE</name>
              <description>touch current debounce of touch pad 6</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS7</name>
          <description>touch channel status of touch pad 7</description>
          <addressOffset>0xBC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_PAD7_DATA</name>
              <description>touch data debounce of touch pad 7</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_TOUCH_PAD7_DEBOUNCE</name>
              <description>touch current debounce of touch pad 7</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS8</name>
          <description>touch channel status of touch pad 8</description>
          <addressOffset>0xC0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_PAD8_DATA</name>
              <description>touch data debounce of touch pad 8</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_TOUCH_PAD8_DEBOUNCE</name>
              <description>touch current debounce of touch pad 8</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS9</name>
          <description>touch channel status of touch pad 9</description>
          <addressOffset>0xC4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_PAD9_DATA</name>
              <description>touch data debounce of touch pad 9</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_TOUCH_PAD9_DEBOUNCE</name>
              <description>touch current debounce of touch pad 9</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS10</name>
          <description>touch channel status of touch pad 10</description>
          <addressOffset>0xC8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_PAD10_DATA</name>
              <description>touch data debounce of touch pad 10</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_TOUCH_PAD10_DEBOUNCE</name>
              <description>touch current debounce of touch pad 10</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS11</name>
          <description>touch channel status of touch pad 11</description>
          <addressOffset>0xCC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_PAD11_DATA</name>
              <description>touch data debounce of touch pad 11</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_TOUCH_PAD11_DEBOUNCE</name>
              <description>touch current debounce of touch pad 11</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS12</name>
          <description>touch channel status of touch pad 12</description>
          <addressOffset>0xD0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_PAD12_DATA</name>
              <description>touch data debounce of touch pad 12</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_TOUCH_PAD12_DEBOUNCE</name>
              <description>touch current debounce of touch pad 12</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS13</name>
          <description>touch channel status of touch pad 13</description>
          <addressOffset>0xD4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_PAD13_DATA</name>
              <description>touch data debounce of touch pad 13</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_TOUCH_PAD13_DEBOUNCE</name>
              <description>touch current debounce of touch pad 13</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS14</name>
          <description>touch channel status of touch pad 14</description>
          <addressOffset>0xD8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_PAD14_DATA</name>
              <description>touch data debounce of touch pad 14</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_TOUCH_PAD14_DEBOUNCE</name>
              <description>touch current debounce of touch pad 14</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS15</name>
          <description>touch channel status of sleep pad</description>
          <addressOffset>0xDC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_SLP_DATA</name>
              <description>touch data debounce of sleep pad</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_TOUCH_SLP_DEBOUNCE</name>
              <description>touch current debounce of sleep pad</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS16</name>
          <description>touch channel status of approach mode</description>
          <addressOffset>0xE0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_TOUCH_APPROACH_PAD2_CNT</name>
              <description>touch current approach count of approach pad2</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_TOUCH_APPROACH_PAD1_CNT</name>
              <description>touch current approach count of approach pad1</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_TOUCH_APPROACH_PAD0_CNT</name>
              <description>touch current approach count of approach pad0</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_TOUCH_SLP_APPROACH_CNT</name>
              <description>touch current approach count of slp pad</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_COCPU_STATE</name>
          <description>get cocpu status</description>
          <addressOffset>0xE4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_COCPU_DBG_TRIGGER</name>
              <description>trigger cocpu debug registers</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_CLK_EN_ST</name>
              <description>check cocpu whether clk on</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_RESET_N</name>
              <description>check cocpu whether in reset state</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_EOI</name>
              <description>check cocpu whether in interrupt state</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TRAP</name>
              <description>check cocpu whether in trap state</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_EBREAK</name>
              <description>check cocpu whether in ebreak</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_COCPU_INT_RAW</name>
          <description>the interrupt raw of ulp</description>
          <addressOffset>0xE8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_COCPU_TOUCH_DONE_INT_RAW</name>
              <description>int from touch done</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_INACTIVE_INT_RAW</name>
              <description>int from touch inactive</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_ACTIVE_INT_RAW</name>
              <description>int from touch active</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_SARADC1_INT_RAW</name>
              <description>int from saradc1</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_SARADC2_INT_RAW</name>
              <description>int from saradc2</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TSENS_INT_RAW</name>
              <description>int from tsens</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_START_INT_RAW</name>
              <description>int from start</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_SW_INT_RAW</name>
              <description>int from software</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_SWD_INT_RAW</name>
              <description>int from super watch dog</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_TIMEOUT_INT_RAW</name>
              <description>int from timeout done</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_APPROACH_LOOP_DONE_INT_RAW</name>
              <description>int from approach loop done</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_SCAN_DONE_INT_RAW</name>
              <description>int from touch scan done</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_COCPU_INT_ENA</name>
          <description>the interrupt enable of ulp</description>
          <addressOffset>0xEC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_COCPU_TOUCH_DONE_INT_ENA</name>
              <description>int enable of touch done</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_INACTIVE_INT_ENA</name>
              <description>int enable of from touch inactive</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_ACTIVE_INT_ENA</name>
              <description>int enable of touch active</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_COCPU_SARADC1_INT_ENA</name>
              <description>int enable of from saradc1</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_COCPU_SARADC2_INT_ENA</name>
              <description>int enable of from saradc2</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_COCPU_TSENS_INT_ENA</name>
              <description>int enable of tsens</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_COCPU_START_INT_ENA</name>
              <description>int enable of start</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_COCPU_SW_INT_ENA</name>
              <description>int enable of  software</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_COCPU_SWD_INT_ENA</name>
              <description>int enable of super watch dog</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_TIMEOUT_INT_ENA</name>
              <description>int enable of timeout done</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_APPROACH_LOOP_DONE_INT_ENA</name>
              <description>int enable of approach loop done</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_SCAN_DONE_INT_ENA</name>
              <description>int enable of touch scan done</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_COCPU_INT_ST</name>
          <description>the interrupt state of ulp</description>
          <addressOffset>0xF0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_COCPU_TOUCH_DONE_INT_ST</name>
              <description>int state of touch done</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_INACTIVE_INT_ST</name>
              <description>int state of from touch inactive</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_ACTIVE_INT_ST</name>
              <description>int state of touch active</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_SARADC1_INT_ST</name>
              <description>int state of from saradc1</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_SARADC2_INT_ST</name>
              <description>int state of from saradc2</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TSENS_INT_ST</name>
              <description>int state of tsens</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_START_INT_ST</name>
              <description>int state of start</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_SW_INT_ST</name>
              <description>int state of  software</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_SWD_INT_ST</name>
              <description>int state of super watch dog</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_TIMEOUT_INT_ST</name>
              <description>int state of timeout done</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_APPROACH_LOOP_DONE_INT_ST</name>
              <description>int state of approach loop done</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_SCAN_DONE_INT_ST</name>
              <description>int state of touch scan done</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_COCPU_INT_CLR</name>
          <description>the interrupt clear of ulp</description>
          <addressOffset>0xF4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_COCPU_TOUCH_DONE_INT_CLR</name>
              <description>int clear of touch done</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_INACTIVE_INT_CLR</name>
              <description>int clear of from touch inactive</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_ACTIVE_INT_CLR</name>
              <description>int clear of touch active</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_SARADC1_INT_CLR</name>
              <description>int clear of from saradc1</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_SARADC2_INT_CLR</name>
              <description>int clear of from saradc2</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TSENS_INT_CLR</name>
              <description>int clear of tsens</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_START_INT_CLR</name>
              <description>int clear of start</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_SW_INT_CLR</name>
              <description>int clear of  software</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_SWD_INT_CLR</name>
              <description>int clear of super watch dog</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_TIMEOUT_INT_CLR</name>
              <description>int clear of timeout done</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_APPROACH_LOOP_DONE_INT_CLR</name>
              <description>int clear of approach loop done</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_SCAN_DONE_INT_CLR</name>
              <description>int clear of touch scan done</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_COCPU_DEBUG</name>
          <description>Ulp-riscv debug signal</description>
          <addressOffset>0xF8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_COCPU_PC</name>
              <description>cocpu Program counter</description>
              <bitOffset>0</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_MEM_VLD</name>
              <description>cocpu mem valid output</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_MEM_RDY</name>
              <description>cocpu mem ready input</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_MEM_WEN</name>
              <description>cocpu mem write enable output</description>
              <bitOffset>15</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR_COCPU_MEM_ADDR</name>
              <description>cocpu mem address output</description>
              <bitOffset>19</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_HALL_CTRL</name>
          <description>no public</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <resetValue>0xA0000000</resetValue>
          <fields>
            <field>
              <name>SAR_XPD_HALL</name>
              <description>Power on hall sensor and connect to VP and VN</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_XPD_HALL_FORCE</name>
              <description>1: XPD HALL is controlled by SW. 0: XPD HALL is controlled by FSM in ULP-coprocessor</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_HALL_PHASE</name>
              <description>Reverse phase of hall sensor</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_HALL_PHASE_FORCE</name>
              <description>1: HALL PHASE is controlled by SW  0: HALL PHASE is controlled by FSM in ULP-coprocessor</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_NOUSE</name>
          <description>no public</description>
          <addressOffset>0x100</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_NOUSE</name>
              <description>no public</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_PERI_CLK_GATE_CONF</name>
          <description>the peri clock gate of rtc  peri</description>
          <addressOffset>0x104</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_RTC_I2C_CLK_EN</name>
              <description>enable rtc i2c clock</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_TSENS_CLK_EN</name>
              <description>enable tsens clock</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_SARADC_CLK_EN</name>
              <description>enbale saradc clock</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_IOMUX_CLK_EN</name>
              <description>enable io_mux clock</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_PERI_RESET_CONF</name>
          <description>the peri reset of rtc  peri</description>
          <addressOffset>0x108</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_COCPU_RESET</name>
              <description>enable ulp-riscv reset</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_RTC_I2C_RESET</name>
              <description>Reserved.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_TSENS_RESET</name>
              <description>enbale saradc reset</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_SARADC_RESET</name>
              <description>enable io_mux reset</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_COCPU_INT_ENA_W1TS</name>
          <description>the interrupt enable of ulp</description>
          <addressOffset>0x10C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_COCPU_TOUCH_DONE_INT_ENA_W1TS</name>
              <description>int enable of touch done</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_INACTIVE_INT_ENA_W1TS</name>
              <description>int enable of from touch inactive</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_ACTIVE_INT_ENA_W1TS</name>
              <description>int enable of touch active</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_SARADC1_INT_ENA_W1TS</name>
              <description>int enable of from saradc1</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_SARADC2_INT_ENA_W1TS</name>
              <description>int enable of from saradc2</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TSENS_INT_ENA_W1TS</name>
              <description>int enable of tsens</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_START_INT_ENA_W1TS</name>
              <description>int enable of start</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_SW_INT_ENA_W1TS</name>
              <description>int enable of  software</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_SWD_INT_ENA_W1TS</name>
              <description>int enable of super watch dog</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_TIMEOUT_INT_ENA_W1TS</name>
              <description>int enable of timeout done</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_APPROACH_LOOP_DONE_INT_ENA_W1TS</name>
              <description>int enable of approach loop done</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_SCAN_DONE_INT_ENA_W1TS</name>
              <description>int enable of touch scan done</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_COCPU_INT_ENA_W1TC</name>
          <description>the interrupt enable clear of ulp</description>
          <addressOffset>0x110</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_COCPU_TOUCH_DONE_INT_ENA_W1TC</name>
              <description>Clear int enable of touch done</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_INACTIVE_INT_ENA_W1TC</name>
              <description>Clear int enable of from touch inactive</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_ACTIVE_INT_ENA_W1TC</name>
              <description>Clear int enable of touch active</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_SARADC1_INT_ENA_W1TC</name>
              <description>Clear int enable of from saradc1</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_SARADC2_INT_ENA_W1TC</name>
              <description>Clear int enable of from saradc2</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TSENS_INT_ENA_W1TC</name>
              <description>Clear int enable of tsens</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_START_INT_ENA_W1TC</name>
              <description>Clear int enable of start</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_SW_INT_ENA_W1TC</name>
              <description>Clear int enable of  software</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_SWD_INT_ENA_W1TC</name>
              <description>Clear int enable of super watch dog</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_TIMEOUT_INT_ENA_W1TC</name>
              <description>Clear int enable of timeout done</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_APPROACH_LOOP_DONE_INT_ENA_W1TC</name>
              <description>Clear int enable of approach loop done</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SAR_COCPU_TOUCH_SCAN_DONE_INT_ENA_W1TC</name>
              <description>Clear int enable of touch scan done</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_DEBUG_CONF</name>
          <description>rtc peri debug configure</description>
          <addressOffset>0x114</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_DEBUG_BIT_SEL</name>
              <description>no public</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_SARDATE</name>
          <description>version</description>
          <addressOffset>0x1FC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02101180</resetValue>
          <fields>
            <field>
              <name>SAR_DATE</name>
              <description>version</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SENSITIVE</name>
      <description>Peripheral SENSITIVE</description>
      <groupName>SENSITIVE</groupName>
      <baseAddress>0x600C1000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x314</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>CACHE_DATAARRAY_CONNECT_0</name>
          <description>Cache data array configuration register 0.</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CACHE_DATAARRAY_CONNECT_LOCK</name>
              <description>Set 1 to lock cache data array registers.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_DATAARRAY_CONNECT_1</name>
          <description>Cache data array configuration register 1.</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <resetValue>0x000000FF</resetValue>
          <fields>
            <field>
              <name>CACHE_DATAARRAY_CONNECT_FLATTEN</name>
              <description>Cache data array connection configuration.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APB_PERIPHERAL_ACCESS_0</name>
          <description>APB peripheral configuration register 0.</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>APB_PERIPHERAL_ACCESS_LOCK</name>
              <description>Set 1 to lock APB peripheral Configuration Register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APB_PERIPHERAL_ACCESS_1</name>
          <description>APB peripheral configuration register 1.</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>APB_PERIPHERAL_ACCESS_SPLIT_BURST</name>
              <description>Set 1 to support split function for AHB access to APB peripherals.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTERNAL_SRAM_USAGE_0</name>
          <description>Internal SRAM configuration register 0.</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INTERNAL_SRAM_USAGE_LOCK</name>
              <description>Set 1 to lock internal SRAM Configuration Register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTERNAL_SRAM_USAGE_1</name>
          <description>Internal SRAM configuration register 1.</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <resetValue>0x000007FF</resetValue>
          <fields>
            <field>
              <name>INTERNAL_SRAM_ICACHE_USAGE</name>
              <description>Set 1 to someone bit means corresponding internal SRAM level can be accessed by icache.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTERNAL_SRAM_DCACHE_USAGE</name>
              <description>Set 1 to someone bit means corresponding internal SRAM level can be accessed by dcache.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTERNAL_SRAM_CPU_USAGE</name>
              <description>Set 1 to someone bit means corresponding internal SRAM level can be accessed by cpu.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTERNAL_SRAM_USAGE_2</name>
          <description>Internal SRAM configuration register 2.</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INTERNAL_SRAM_CORE0_TRACE_USAGE</name>
              <description>Set 1 to someone bit means corresponding internal SRAM level can be accessed by core0 trace bus.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTERNAL_SRAM_CORE1_TRACE_USAGE</name>
              <description>Set 1 to someone bit means corresponding internal SRAM level can be accessed by core1 trace bus.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTERNAL_SRAM_CORE0_TRACE_ALLOC</name>
              <description>Which internal SRAM bank (16KB) of 64KB can be accessed by core0 trace bus.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTERNAL_SRAM_CORE1_TRACE_ALLOC</name>
              <description>Which internal SRAM bank (16KB) of 64KB can be accessed by core1 trace bus.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTERNAL_SRAM_USAGE_3</name>
          <description>Internal SRAM configuration register 3.</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INTERNAL_SRAM_MAC_DUMP_USAGE</name>
              <description>Set 1 to someone bit means corresponding internal SRAM level can be accessed by mac dump.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTERNAL_SRAM_USAGE_4</name>
          <description>Internal SRAM configuration register 4.</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INTERNAL_SRAM_LOG_USAGE</name>
              <description>Set 1 to someone bit means corresponding internal SRAM level can be accessed by log bus.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RETENTION_DISABLE</name>
          <description>Retention configuration register.</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RETENTION_DISABLE</name>
              <description>Set 1 to disable retention function and lock disable state.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_TAG_ACCESS_0</name>
          <description>Cache tag configuration register 0.</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CACHE_TAG_ACCESS_LOCK</name>
              <description>Set 1 to lock cache tag Configuration Register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_TAG_ACCESS_1</name>
          <description>Cache tag configuration register 1.</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000000F</resetValue>
          <fields>
            <field>
              <name>PRO_I_TAG_RD_ACS</name>
              <description>Set 1 to enable Icache read access tag memory.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_I_TAG_WR_ACS</name>
              <description>Set 1 to enable Icache wrtie access tag memory.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_D_TAG_RD_ACS</name>
              <description>Set 1 to enable Dcache read access tag memory.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_D_TAG_WR_ACS</name>
              <description>Set 1 to enable Dcache wrtie access tag memory.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_MMU_ACCESS_0</name>
          <description>Cache MMU configuration register 0.</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CACHE_MMU_ACCESS_LOCK</name>
              <description>Set 1 to lock cache MMU registers.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_MMU_ACCESS_1</name>
          <description>Cache MMU configuration register 1.</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>PRO_MMU_RD_ACS</name>
              <description>Set 1 to enable read access MMU memory.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRO_MMU_WR_ACS</name>
              <description>Set 1 to enable write access MMU memory.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_SPI2_PMS_CONSTRAIN_0</name>
          <description>spi2 dma permission configuration register 0.</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_APBPERI_SPI2_PMS_CONSTRAIN_LOCK</name>
              <description>Set 1 to lock spi2 dma permission Configuration Register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_SPI2_PMS_CONSTRAIN_1</name>
          <description>spi2 dma permission configuration register 1.</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_PMS_0</name>
              <description>spi2's permission(store,load) in data region0 of SRAM</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_PMS_1</name>
              <description>spi2's permission(store,load) in data region1 of SRAM</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_PMS_2</name>
              <description>spi2's permission(store,load) in data region2 of SRAM</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_PMS_3</name>
              <description>spi2's permission(store,load) in data region3 of SRAM</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_0</name>
              <description>spi2's permission(store,load) in dcache data sram block0</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_1</name>
              <description>spi2's permission(store,load) in dcache data sram block1</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_SPI3_PMS_CONSTRAIN_0</name>
          <description>spi3 dma permission configuration register 0.</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_APBPERI_SPI3_PMS_CONSTRAIN_LOCK</name>
              <description>Set 1 to lock spi3 dma permission Configuration Register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_SPI3_PMS_CONSTRAIN_1</name>
          <description>spi3 dma permission configuration register 1.</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>DMA_APBPERI_SPI3_PMS_CONSTRAIN_SRAM_PMS_0</name>
              <description>spi3's permission(store,load) in data region0 of SRAM</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_SPI3_PMS_CONSTRAIN_SRAM_PMS_1</name>
              <description>spi3's permission(store,load) in data region1 of SRAM</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_SPI3_PMS_CONSTRAIN_SRAM_PMS_2</name>
              <description>spi3's permission(store,load) in data region2 of SRAM</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_SPI3_PMS_CONSTRAIN_SRAM_PMS_3</name>
              <description>spi3's permission(store,load) in data region3 of SRAM</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_SPI3_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_0</name>
              <description>spi3's permission(store,load) in dcache data sram block0</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_SPI3_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_1</name>
              <description>spi3's permission(store,load) in dcache data sram block1</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_UHCI0_PMS_CONSTRAIN_0</name>
          <description>uhci0 dma permission configuration register 0.</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_APBPERI_UHCI0_PMS_CONSTRAIN_LOCK</name>
              <description>Set 1 to lock uhci0 dma permission Configuration Register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_UHCI0_PMS_CONSTRAIN_1</name>
          <description>uhci0 dma permission configuration register 1.</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>DMA_APBPERI_UHCI0_PMS_CONSTRAIN_SRAM_PMS_0</name>
              <description>uhci0's permission(store,load) in data region0 of SRAM</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_UHCI0_PMS_CONSTRAIN_SRAM_PMS_1</name>
              <description>uhci0's permission(store,load) in data region1 of SRAM</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_UHCI0_PMS_CONSTRAIN_SRAM_PMS_2</name>
              <description>uhci0's permission(store,load) in data region2 of SRAM</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_UHCI0_PMS_CONSTRAIN_SRAM_PMS_3</name>
              <description>uhci0's permission(store,load) in data region3 of SRAM</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_UHCI0_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_0</name>
              <description>uhci0's permission(store,load) in dcache data sram block0</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_UHCI0_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_1</name>
              <description>uhci0's permission(store,load) in dcache data sram block1</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_I2S0_PMS_CONSTRAIN_0</name>
          <description>i2s0 dma permission configuration register 0.</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_APBPERI_I2S0_PMS_CONSTRAIN_LOCK</name>
              <description>Set 1 to lock i2s0 dma permission Configuration Register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_I2S0_PMS_CONSTRAIN_1</name>
          <description>i2s0 dma permission configuration register 1.</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_PMS_0</name>
              <description>i2s0's permission(store,load) in data region0 of SRAM</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_PMS_1</name>
              <description>i2s0's permission(store,load) in data region1 of SRAM</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_PMS_2</name>
              <description>i2s0's permission(store,load) in data region2 of SRAM</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_PMS_3</name>
              <description>i2s0's permission(store,load) in data region3 of SRAM</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_0</name>
              <description>i2s0's permission(store,load) in dcache data sram block0</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_1</name>
              <description>i2s0's permission(store,load) in dcache data sram block1</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_I2S1_PMS_CONSTRAIN_0</name>
          <description>i2s1 dma permission configuration register 0.</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_APBPERI_I2S1_PMS_CONSTRAIN_LOCK</name>
              <description>Set 1 to lock i2s1 dma permission Configuration Register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_I2S1_PMS_CONSTRAIN_1</name>
          <description>i2s1 dma permission configuration register 1.</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>DMA_APBPERI_I2S1_PMS_CONSTRAIN_SRAM_PMS_0</name>
              <description>i2s1's permission(store,load) in data region0 of SRAM</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_I2S1_PMS_CONSTRAIN_SRAM_PMS_1</name>
              <description>i2s1's permission(store,load) in data region1 of SRAM</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_I2S1_PMS_CONSTRAIN_SRAM_PMS_2</name>
              <description>i2s1's permission(store,load) in data region2 of SRAM</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_I2S1_PMS_CONSTRAIN_SRAM_PMS_3</name>
              <description>i2s1's permission(store,load) in data region3 of SRAM</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_I2S1_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_0</name>
              <description>i2s1's permission(store,load) in dcache data sram block0</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_I2S1_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_1</name>
              <description>i2s1's permission(store,load) in dcache data sram block1</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_MAC_PMS_CONSTRAIN_0</name>
          <description>mac dma permission configuration register 0.</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_APBPERI_MAC_PMS_CONSTRAIN_LOCK</name>
              <description>Set 1 to lock mac dma permission Configuration Register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_MAC_PMS_CONSTRAIN_1</name>
          <description>mac dma permission configuration register 1.</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_PMS_0</name>
              <description>mac's permission(store,load) in data region0 of SRAM</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_PMS_1</name>
              <description>mac's permission(store,load) in data region1 of SRAM</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_PMS_2</name>
              <description>mac's permission(store,load) in data region2 of SRAM</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_PMS_3</name>
              <description>mac's permission(store,load) in data region3 of SRAM</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_0</name>
              <description>mac's permission(store,load) in dcache data sram block0</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_1</name>
              <description>mac's permission(store,load) in dcache data sram block1</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_BACKUP_PMS_CONSTRAIN_0</name>
          <description>backup dma permission configuration register 0.</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_APBPERI_BACKUP_PMS_CONSTRAIN_LOCK</name>
              <description>Set 1 to lock backup dma permission Configuration Register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_BACKUP_PMS_CONSTRAIN_1</name>
          <description>backup dma permission configuration register 1.</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_PMS_0</name>
              <description>backup's permission(store,load) in data region0 of SRAM</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_PMS_1</name>
              <description>backup's permission(store,load) in data region1 of SRAM</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_PMS_2</name>
              <description>backup's permission(store,load) in data region2 of SRAM</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_PMS_3</name>
              <description>backup's permission(store,load) in data region3 of SRAM</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_0</name>
              <description>backup's permission(store,load) in dcache data sram block0</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_1</name>
              <description>backup's permission(store,load) in dcache data sram block1</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_AES_PMS_CONSTRAIN_0</name>
          <description>aes dma permission configuration register 0.</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_APBPERI_AES_PMS_CONSTRAIN_LOCK</name>
              <description>Set 1 to lock aes dma permission Configuration Register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_AES_PMS_CONSTRAIN_1</name>
          <description>aes dma permission configuration register 1.</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_PMS_0</name>
              <description>aes's permission(store,load) in data region0 of SRAM</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_PMS_1</name>
              <description>aes's permission(store,load) in data region1 of SRAM</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_PMS_2</name>
              <description>aes's permission(store,load) in data region2 of SRAM</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_PMS_3</name>
              <description>aes's permission(store,load) in data region3 of SRAM</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_0</name>
              <description>aes's permission(store,load) in dcache data sram block0</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_1</name>
              <description>aes's permission(store,load) in dcache data sram block1</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_SHA_PMS_CONSTRAIN_0</name>
          <description>sha dma permission configuration register 0.</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_APBPERI_SHA_PMS_CONSTRAIN_LOCK</name>
              <description>Set 1 to lock sha dma permission Configuration Register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_SHA_PMS_CONSTRAIN_1</name>
          <description>sha dma permission configuration register 1.</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_PMS_0</name>
              <description>sha's permission(store,load) in data region0 of SRAM</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_PMS_1</name>
              <description>sha's permission(store,load) in data region1 of SRAM</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_PMS_2</name>
              <description>sha's permission(store,load) in data region2 of SRAM</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_PMS_3</name>
              <description>sha's permission(store,load) in data region3 of SRAM</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_0</name>
              <description>sha's permission(store,load) in dcache data sram block0</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_1</name>
              <description>sha's permission(store,load) in dcache data sram block1</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_0</name>
          <description>adc_dac dma permission configuration register 0.</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_LOCK</name>
              <description>Set 1 to lock adc_dac dma permission Configuration Register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_1</name>
          <description>adc_dac dma permission configuration register 1.</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_PMS_0</name>
              <description>adc_dac's permission(store,load) in data region0 of SRAM</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_PMS_1</name>
              <description>adc_dac's permission(store,load) in data region1 of SRAM</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_PMS_2</name>
              <description>adc_dac's permission(store,load) in data region2 of SRAM</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_PMS_3</name>
              <description>adc_dac's permission(store,load) in data region3 of SRAM</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_0</name>
              <description>adc_dac's permission(store,load) in dcache data sram block0</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_1</name>
              <description>adc_dac's permission(store,load) in dcache data sram block1</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_RMT_PMS_CONSTRAIN_0</name>
          <description>rmt dma permission configuration register 0.</description>
          <addressOffset>0x88</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_APBPERI_RMT_PMS_CONSTRAIN_LOCK</name>
              <description>Set 1 to lock rmt dma permission Configuration Register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_RMT_PMS_CONSTRAIN_1</name>
          <description>rmt dma permission configuration register 1.</description>
          <addressOffset>0x8C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>DMA_APBPERI_RMT_PMS_CONSTRAIN_SRAM_PMS_0</name>
              <description>rmt's permission(store,load) in data region0 of SRAM</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_RMT_PMS_CONSTRAIN_SRAM_PMS_1</name>
              <description>rmt's permission(store,load) in data region1 of SRAM</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_RMT_PMS_CONSTRAIN_SRAM_PMS_2</name>
              <description>rmt's permission(store,load) in data region2 of SRAM</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_RMT_PMS_CONSTRAIN_SRAM_PMS_3</name>
              <description>rmt's permission(store,load) in data region3 of SRAM</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_RMT_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_0</name>
              <description>rmt's permission(store,load) in dcache data sram block0</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_RMT_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_1</name>
              <description>rmt's permission(store,load) in dcache data sram block1</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_LCD_CAM_PMS_CONSTRAIN_0</name>
          <description>lcd_cam dma permission configuration register 0.</description>
          <addressOffset>0x90</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_APBPERI_LCD_CAM_PMS_CONSTRAIN_LOCK</name>
              <description>Set 1 to lock lcd_cam dma permission Configuration Register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_LCD_CAM_PMS_CONSTRAIN_1</name>
          <description>lcd_cam dma permission configuration register 1.</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>DMA_APBPERI_LCD_CAM_PMS_CONSTRAIN_SRAM_PMS_0</name>
              <description>lcd_cam's permission(store,load) in data region0 of SRAM</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_LCD_CAM_PMS_CONSTRAIN_SRAM_PMS_1</name>
              <description>lcd_cam's permission(store,load) in data region1 of SRAM</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_LCD_CAM_PMS_CONSTRAIN_SRAM_PMS_2</name>
              <description>lcd_cam's permission(store,load) in data region2 of SRAM</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_LCD_CAM_PMS_CONSTRAIN_SRAM_PMS_3</name>
              <description>lcd_cam's permission(store,load) in data region3 of SRAM</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_LCD_CAM_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_0</name>
              <description>lcd_cam's permission(store,load) in dcache data sram block0</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_LCD_CAM_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_1</name>
              <description>lcd_cam's permission(store,load) in dcache data sram block1</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_USB_PMS_CONSTRAIN_0</name>
          <description>usb dma permission configuration register 0.</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_APBPERI_USB_PMS_CONSTRAIN_LOCK</name>
              <description>Set 1 to lock usb dma permission Configuration Register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_USB_PMS_CONSTRAIN_1</name>
          <description>usb dma permission configuration register 1.</description>
          <addressOffset>0x9C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>DMA_APBPERI_USB_PMS_CONSTRAIN_SRAM_PMS_0</name>
              <description>usb's permission(store,load) in data region0 of SRAM</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_USB_PMS_CONSTRAIN_SRAM_PMS_1</name>
              <description>usb's permission(store,load) in data region1 of SRAM</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_USB_PMS_CONSTRAIN_SRAM_PMS_2</name>
              <description>usb's permission(store,load) in data region2 of SRAM</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_USB_PMS_CONSTRAIN_SRAM_PMS_3</name>
              <description>usb's permission(store,load) in data region3 of SRAM</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_USB_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_0</name>
              <description>usb's permission(store,load) in dcache data sram block0</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_USB_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_1</name>
              <description>usb's permission(store,load) in dcache data sram block1</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_LC_PMS_CONSTRAIN_0</name>
          <description>lc dma permission configuration register 0.</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_APBPERI_LC_PMS_CONSTRAIN_LOCK</name>
              <description>Set 1 to lock lc dma permission Configuration Register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_LC_PMS_CONSTRAIN_1</name>
          <description>lc dma permission configuration register 1.</description>
          <addressOffset>0xA4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_PMS_0</name>
              <description>lc's permission(store,load) in data region0 of SRAM</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_PMS_1</name>
              <description>lc's permission(store,load) in data region1 of SRAM</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_PMS_2</name>
              <description>lc's permission(store,load) in data region2 of SRAM</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_PMS_3</name>
              <description>lc's permission(store,load) in data region3 of SRAM</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_0</name>
              <description>lc's permission(store,load) in dcache data sram block0</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_1</name>
              <description>lc's permission(store,load) in dcache data sram block1</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_SDIO_PMS_CONSTRAIN_0</name>
          <description>sdio dma permission configuration register 0.</description>
          <addressOffset>0xA8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_APBPERI_SDIO_PMS_CONSTRAIN_LOCK</name>
              <description>Set 1 to lock sdio dma permission Configuration Register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_SDIO_PMS_CONSTRAIN_1</name>
          <description>sdio dma permission configuration register 1.</description>
          <addressOffset>0xAC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>DMA_APBPERI_SDIO_PMS_CONSTRAIN_SRAM_PMS_0</name>
              <description>sdio's permission(store,load) in data region0 of SRAM</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_SDIO_PMS_CONSTRAIN_SRAM_PMS_1</name>
              <description>sdio's permission(store,load) in data region1 of SRAM</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_SDIO_PMS_CONSTRAIN_SRAM_PMS_2</name>
              <description>sdio's permission(store,load) in data region2 of SRAM</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_SDIO_PMS_CONSTRAIN_SRAM_PMS_3</name>
              <description>sdio's permission(store,load) in data region3 of SRAM</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_SDIO_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_0</name>
              <description>sdio's permission(store,load) in dcache data sram block0</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_SDIO_PMS_CONSTRAIN_SRAM_CACHEDATAARRAY_PMS_1</name>
              <description>sdio's permission(store,load) in dcache data sram block1</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_PMS_MONITOR_0</name>
          <description>dma permission monitor configuration register 0.</description>
          <addressOffset>0xB0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_APBPERI_PMS_MONITOR_LOCK</name>
              <description>Set 1 to lock  dma permission monitor Configuration Register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_PMS_MONITOR_1</name>
          <description>dma permission monitor configuration register 1.</description>
          <addressOffset>0xB4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>DMA_APBPERI_PMS_MONITOR_VIOLATE_CLR</name>
              <description>Set 1 to clear dma_pms_monitor_violate interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_APBPERI_PMS_MONITOR_VIOLATE_EN</name>
              <description>Set 1 to enable dma pms monitor, if dma access violated permission, will trigger interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_PMS_MONITOR_2</name>
          <description>dma permission monitor configuration register 2.</description>
          <addressOffset>0xB8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR</name>
              <description>recorded dma's interrupt status when dma access violated permission</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_WORLD</name>
              <description>recorded dma's world status when dma access violated permission</description>
              <bitOffset>1</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_ADDR</name>
              <description>recorded dma's address bit[25:4] status when dma access violated permission, real address is 0x3c00_0000+addr*16</description>
              <bitOffset>3</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_APBPERI_PMS_MONITOR_3</name>
          <description>dma permission monitor configuration register 3.</description>
          <addressOffset>0xBC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_WR</name>
              <description>recorded dma's write status when dma access violated permission, 1(write), 0(read)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_BYTEEN</name>
              <description>recorded dma's byte enable status when dma access violated permission</description>
              <bitOffset>1</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_0</name>
          <description>sram split line configuration register 0</description>
          <addressOffset>0xC0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_LOCK</name>
              <description>Set 1 to lock sram split configuration register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_1</name>
          <description>sram split line configuration register 1</description>
          <addressOffset>0xC4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_0</name>
              <description>category0 of core_x_iram0_dram_dma_line, if the splitaddress in block0 of SRAM, configured as 0x10, else if the splitaddress below block0 of SRAM, configured as 0x11, else if splitaddress higher than block0 of SRAM, configured as 0x00</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_1</name>
              <description>category1 of core_x_iram0_dram_dma_line, if the splitaddress in block1 of SRAM, configured as 0x10, else if the splitaddress below block1 of SRAM, configured as 0x11, else if splitaddress higher than block1 of SRAM, configured as 0x00</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_2</name>
              <description>category2 of core_x_iram0_dram_dma_line, if the splitaddress in block2 of SRAM, configured as 0x10, else if the splitaddress below block2 of SRAM, configured as 0x11, else if splitaddress higher than block2 of SRAM, configured as 0x00</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_3</name>
              <description>category3 of core_x_iram0_dram_dma_line, if the splitaddress in block3 of SRAM, configured as 0x10, else if the splitaddress below block3 of SRAM, configured as 0x11, else if splitaddress higher than block3 of SRAM, configured as 0x00</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_4</name>
              <description>category4 of core_x_iram0_dram_dma_line, if the splitaddress in block4 of SRAM, configured as 0x10, else if the splitaddress below block4 of SRAM, configured as 0x11, else if splitaddress higher than block4 of SRAM, configured as 0x00</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_5</name>
              <description>category5 of core_x_iram0_dram_dma_line, if the splitaddress in block5 of SRAM, configured as 0x10, else if the splitaddress below block5 of SRAM, configured as 0x11, else if splitaddress higher than block5 of SRAM, configured as 0x00</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_6</name>
              <description>category6 of core_x_iram0_dram_dma_line, if the splitaddress in block6 of SRAM, configured as 0x10, else if the splitaddress below block6 of SRAM, configured as 0x11, else if splitaddress higher than block6 of SRAM, configured as 0x00</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_DRAM0_DMA_SRAM_SPLITADDR</name>
              <description>splitaddr of core_x_iram0_dram_dma_line, configured as [15:8]bit of actual address</description>
              <bitOffset>14</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_2</name>
          <description>sram split line configuration register 1</description>
          <addressOffset>0xC8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_0</name>
              <description>category0 of core_x_iram0_dram_dma_line, if the splitaddress in block0 of SRAM, configured as 0x10, else if the splitaddress below block0 of SRAM, configured as 0x11, else if splitaddress higher than block0 of SRAM, configured as 0x00</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_1</name>
              <description>category1 of core_x_iram0_dram_dma_line, if the splitaddress in block1 of SRAM, configured as 0x10, else if the splitaddress below block1 of SRAM, configured as 0x11, else if splitaddress higher than block1 of SRAM, configured as 0x00</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_2</name>
              <description>category2 of core_x_iram0_dram_dma_line, if the splitaddress in block2 of SRAM, configured as 0x10, else if the splitaddress below block2 of SRAM, configured as 0x11, else if splitaddress higher than block2 of SRAM, configured as 0x00</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_3</name>
              <description>category3 of core_x_iram0_dram_dma_line, if the splitaddress in block3 of SRAM, configured as 0x10, else if the splitaddress below block3 of SRAM, configured as 0x11, else if splitaddress higher than block3 of SRAM, configured as 0x00</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_4</name>
              <description>category4 of core_x_iram0_dram_dma_line, if the splitaddress in block4 of SRAM, configured as 0x10, else if the splitaddress below block4 of SRAM, configured as 0x11, else if splitaddress higher than block4 of SRAM, configured as 0x00</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_5</name>
              <description>category5 of core_x_iram0_dram_dma_line, if the splitaddress in block5 of SRAM, configured as 0x10, else if the splitaddress below block5 of SRAM, configured as 0x11, else if splitaddress higher than block5 of SRAM, configured as 0x00</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_6</name>
              <description>category6 of core_x_iram0_dram_dma_line, if the splitaddress in block6 of SRAM, configured as 0x10, else if the splitaddress below block6 of SRAM, configured as 0x11, else if splitaddress higher than block6 of SRAM, configured as 0x00</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_SRAM_LINE_0_SPLITADDR</name>
              <description>splitaddr of core_x_iram0_dram_dma_line, configured as [15:8]bit of actual address</description>
              <bitOffset>14</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_3</name>
          <description>sram split line configuration register 1</description>
          <addressOffset>0xCC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_0</name>
              <description>category0 of core_x_iram0_dram_dma_line, if the splitaddress in block0 of SRAM, configured as 0x10, else if the splitaddress below block0 of SRAM, configured as 0x11, else if splitaddress higher than block0 of SRAM, configured as 0x00</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_1</name>
              <description>category1 of core_x_iram0_dram_dma_line, if the splitaddress in block1 of SRAM, configured as 0x10, else if the splitaddress below block1 of SRAM, configured as 0x11, else if splitaddress higher than block1 of SRAM, configured as 0x00</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_2</name>
              <description>category2 of core_x_iram0_dram_dma_line, if the splitaddress in block2 of SRAM, configured as 0x10, else if the splitaddress below block2 of SRAM, configured as 0x11, else if splitaddress higher than block2 of SRAM, configured as 0x00</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_3</name>
              <description>category3 of core_x_iram0_dram_dma_line, if the splitaddress in block3 of SRAM, configured as 0x10, else if the splitaddress below block3 of SRAM, configured as 0x11, else if splitaddress higher than block3 of SRAM, configured as 0x00</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_4</name>
              <description>category4 of core_x_iram0_dram_dma_line, if the splitaddress in block4 of SRAM, configured as 0x10, else if the splitaddress below block4 of SRAM, configured as 0x11, else if splitaddress higher than block4 of SRAM, configured as 0x00</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_5</name>
              <description>category5 of core_x_iram0_dram_dma_line, if the splitaddress in block5 of SRAM, configured as 0x10, else if the splitaddress below block5 of SRAM, configured as 0x11, else if splitaddress higher than block5 of SRAM, configured as 0x00</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_6</name>
              <description>category6 of core_x_iram0_dram_dma_line, if the splitaddress in block6 of SRAM, configured as 0x10, else if the splitaddress below block6 of SRAM, configured as 0x11, else if splitaddress higher than block6 of SRAM, configured as 0x00</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_SRAM_LINE_1_SPLITADDR</name>
              <description>splitaddr of core_x_iram0_dram_dma_line, configured as [15:8]bit of actual address</description>
              <bitOffset>14</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_4</name>
          <description>sram split line configuration register 1</description>
          <addressOffset>0xD0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_0</name>
              <description>category0 of core_x_iram0_dram_dma_line, if the splitaddress in block0 of SRAM, configured as 0x10, else if the splitaddress below block0 of SRAM, configured as 0x11, else if splitaddress higher than block0 of SRAM, configured as 0x00</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_1</name>
              <description>category1 of core_x_iram0_dram_dma_line, if the splitaddress in block1 of SRAM, configured as 0x10, else if the splitaddress below block1 of SRAM, configured as 0x11, else if splitaddress higher than block1 of SRAM, configured as 0x00</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_2</name>
              <description>category2 of core_x_iram0_dram_dma_line, if the splitaddress in block2 of SRAM, configured as 0x10, else if the splitaddress below block2 of SRAM, configured as 0x11, else if splitaddress higher than block2 of SRAM, configured as 0x00</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_3</name>
              <description>category3 of core_x_iram0_dram_dma_line, if the splitaddress in block3 of SRAM, configured as 0x10, else if the splitaddress below block3 of SRAM, configured as 0x11, else if splitaddress higher than block3 of SRAM, configured as 0x00</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_4</name>
              <description>category4 of core_x_iram0_dram_dma_line, if the splitaddress in block4 of SRAM, configured as 0x10, else if the splitaddress below block4 of SRAM, configured as 0x11, else if splitaddress higher than block4 of SRAM, configured as 0x00</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_5</name>
              <description>category5 of core_x_iram0_dram_dma_line, if the splitaddress in block5 of SRAM, configured as 0x10, else if the splitaddress below block5 of SRAM, configured as 0x11, else if splitaddress higher than block5 of SRAM, configured as 0x00</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_6</name>
              <description>category6 of core_x_iram0_dram_dma_line, if the splitaddress in block6 of SRAM, configured as 0x10, else if the splitaddress below block6 of SRAM, configured as 0x11, else if splitaddress higher than block6 of SRAM, configured as 0x00</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_DRAM0_DMA_SRAM_LINE_0_SPLITADDR</name>
              <description>splitaddr of core_x_iram0_dram_dma_line, configured as [15:8]bit of actual address</description>
              <bitOffset>14</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_5</name>
          <description>sram split line configuration register 1</description>
          <addressOffset>0xD4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_0</name>
              <description>category0 of core_x_iram0_dram_dma_line, if the splitaddress in block0 of SRAM, configured as 0x10, else if the splitaddress below block0 of SRAM, configured as 0x11, else if splitaddress higher than block0 of SRAM, configured as 0x00</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_1</name>
              <description>category1 of core_x_iram0_dram_dma_line, if the splitaddress in block1 of SRAM, configured as 0x10, else if the splitaddress below block1 of SRAM, configured as 0x11, else if splitaddress higher than block1 of SRAM, configured as 0x00</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_2</name>
              <description>category2 of core_x_iram0_dram_dma_line, if the splitaddress in block2 of SRAM, configured as 0x10, else if the splitaddress below block2 of SRAM, configured as 0x11, else if splitaddress higher than block2 of SRAM, configured as 0x00</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_3</name>
              <description>category3 of core_x_iram0_dram_dma_line, if the splitaddress in block3 of SRAM, configured as 0x10, else if the splitaddress below block3 of SRAM, configured as 0x11, else if splitaddress higher than block3 of SRAM, configured as 0x00</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_4</name>
              <description>category4 of core_x_iram0_dram_dma_line, if the splitaddress in block4 of SRAM, configured as 0x10, else if the splitaddress below block4 of SRAM, configured as 0x11, else if splitaddress higher than block4 of SRAM, configured as 0x00</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_5</name>
              <description>category5 of core_x_iram0_dram_dma_line, if the splitaddress in block5 of SRAM, configured as 0x10, else if the splitaddress below block5 of SRAM, configured as 0x11, else if splitaddress higher than block5 of SRAM, configured as 0x00</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_6</name>
              <description>category6 of core_x_iram0_dram_dma_line, if the splitaddress in block6 of SRAM, configured as 0x10, else if the splitaddress below block6 of SRAM, configured as 0x11, else if splitaddress higher than block6 of SRAM, configured as 0x00</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_DRAM0_DMA_SRAM_LINE_1_SPLITADDR</name>
              <description>splitaddr of core_x_iram0_dram_dma_line, configured as [15:8]bit of actual address</description>
              <bitOffset>14</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_X_IRAM0_PMS_CONSTRAIN_0</name>
          <description>corex iram0 permission configuration register 0</description>
          <addressOffset>0xD8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_X_IRAM0_PMS_CONSTRAIN_LOCK</name>
              <description>Set 1 to lock corex iram0 permission configuration register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_X_IRAM0_PMS_CONSTRAIN_1</name>
          <description>corex iram0 permission configuration register 0</description>
          <addressOffset>0xDC</addressOffset>
          <size>0x20</size>
          <resetValue>0x001FFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0</name>
              <description>core0/core1's permission of instruction region0 of SRAM in world1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1</name>
              <description>core0/core1's permission of instruction region1 of SRAM in world1</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2</name>
              <description>core0/core1's permission of instruction region2 of SRAM in world1</description>
              <bitOffset>6</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3</name>
              <description>core0/core1's permission of instruction region3 of SRAM in world1</description>
              <bitOffset>9</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_CACHEDATAARRAY_PMS_0</name>
              <description>core0/core1's permission of icache data sram block0 in world1</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_CACHEDATAARRAY_PMS_1</name>
              <description>core0/core1's permission of icache data sram block1 in world1</description>
              <bitOffset>15</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_PMS_CONSTRAIN_ROM_WORLD_1_PMS</name>
              <description>core0/core1's permission of rom in world1</description>
              <bitOffset>18</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_X_IRAM0_PMS_CONSTRAIN_2</name>
          <description>corex iram0 permission configuration register 1</description>
          <addressOffset>0xE0</addressOffset>
          <size>0x20</size>
          <resetValue>0x001FFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0</name>
              <description>core0/core1's permission of instruction region0 of SRAM in world1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1</name>
              <description>core0/core1's permission of instruction region1 of SRAM in world1</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2</name>
              <description>core0/core1's permission of instruction region2 of SRAM in world1</description>
              <bitOffset>6</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3</name>
              <description>core0/core1's permission of instruction region3 of SRAM in world1</description>
              <bitOffset>9</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_CACHEDATAARRAY_PMS_0</name>
              <description>core0/core1's permission of icache data sram block0 in world1</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_CACHEDATAARRAY_PMS_1</name>
              <description>core0/core1's permission of icache data sram block1 in world1</description>
              <bitOffset>15</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_IRAM0_PMS_CONSTRAIN_ROM_WORLD_0_PMS</name>
              <description>core0/core1's permission of rom in world1</description>
              <bitOffset>18</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_IRAM0_PMS_MONITOR_0</name>
          <description>core0 iram0 permission monitor configuration register 0</description>
          <addressOffset>0xE4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_IRAM0_PMS_MONITOR_LOCK</name>
              <description>Set 1 to lock core0 iram0 permission monitor register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_IRAM0_PMS_MONITOR_1</name>
          <description>core0 iram0 permission monitor configuration register 1</description>
          <addressOffset>0xE8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>CORE_0_IRAM0_PMS_MONITOR_VIOLATE_CLR</name>
              <description>Set 1 to clear core0 iram0 permission violated interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_IRAM0_PMS_MONITOR_VIOLATE_EN</name>
              <description>Set 1 to enable core0 iram0 permission monitor, when core0_iram violated permission, will trigger interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_IRAM0_PMS_MONITOR_2</name>
          <description>core0 iram0 permission monitor configuration register 2</description>
          <addressOffset>0xEC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR</name>
              <description>recorded core0 iram0 pms monitor interrupt status.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_WR</name>
              <description>recorded core0 iram0 wr status, only if loadstore is 1 have meaning, 1(store), 0(load).</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_LOADSTORE</name>
              <description>recorded core0 iram0 loadstore status, indicated the type of operation, 0(fetch), 1(load/store).</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_WORLD</name>
              <description>recorded core0 iram0 world status, 0x01 means world0, 0x10 means world1.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_ADDR</name>
              <description>recorded core0 iram0 address [25:2] status when core0 iram0 violated permission, the real address is 0x40000000+addr*4</description>
              <bitOffset>5</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_IRAM0_PMS_MONITOR_0</name>
          <description>core1 iram0 permission monitor configuration register 0</description>
          <addressOffset>0xF0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_IRAM0_PMS_MONITOR_LOCK</name>
              <description>Set 1 to lock core1 iram0 permission monitor register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_IRAM0_PMS_MONITOR_1</name>
          <description>core1 iram0 permission monitor configuration register 1</description>
          <addressOffset>0xF4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>CORE_1_IRAM0_PMS_MONITOR_VIOLATE_CLR</name>
              <description>Set 1 to clear core1 iram0 permission violated interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_IRAM0_PMS_MONITOR_VIOLATE_EN</name>
              <description>Set 1 to enable core1 iram0 permission monitor, when core1_iram violated permission, will trigger interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_IRAM0_PMS_MONITOR_2</name>
          <description>core1 iram0 permission monitor configuration register 2</description>
          <addressOffset>0xF8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_IRAM0_PMS_MONITOR_VIOLATE_INTR</name>
              <description>recorded core1 iram0 pms monitor interrupt status.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_IRAM0_PMS_MONITOR_VIOLATE_STATUS_WR</name>
              <description>recorded core1 iram0 wr status, only if loadstore is 1 have meaning, 1(store), 0(load).</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_IRAM0_PMS_MONITOR_VIOLATE_STATUS_LOADSTORE</name>
              <description>recorded core1 iram0 loadstore status, indicated the type of operation, 0(fetch), 1(load/store).</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_IRAM0_PMS_MONITOR_VIOLATE_STATUS_WORLD</name>
              <description>recorded core1 iram0 world status, 0x01 means world0, 0x10 means world1.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_IRAM0_PMS_MONITOR_VIOLATE_STATUS_ADDR</name>
              <description>recorded core1 iram0 address [25:2] status when core1 iram0 violated permission, the real address is 0x40000000+addr*4</description>
              <bitOffset>5</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_X_DRAM0_PMS_CONSTRAIN_0</name>
          <description>corex dram0 permission configuration register 0</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_X_DRAM0_PMS_CONSTRAIN_LOCK</name>
              <description>Set 1 to lock corex dram0 permission configuration register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_X_DRAM0_PMS_CONSTRAIN_1</name>
          <description>corex dram0 permission configuration register 1</description>
          <addressOffset>0x100</addressOffset>
          <size>0x20</size>
          <resetValue>0x0FFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0</name>
              <description>core0/core1's permission of data region0 of SRAM in world0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1</name>
              <description>core0/core1's permission of data region1 of SRAM in world0.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2</name>
              <description>core0/core1's permission of data region2 of SRAM in world0.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3</name>
              <description>core0/core1's permission of data region3 of SRAM in world0.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_CACHEDATAARRAY_PMS_0</name>
              <description>core0/core1's permission of dcache data sram block0 in world0.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_CACHEDATAARRAY_PMS_1</name>
              <description>core0/core1's permission of dcache data sram block1 in world0.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0</name>
              <description>core0/core1's permission of data region0 of SRAM in world1.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1</name>
              <description>core0/core1's permission of data region1 of SRAM in world1.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2</name>
              <description>core0/core1's permission of data region2 of SRAM in world1.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3</name>
              <description>core0/core1's permission of data region3 of SRAM in world1.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_CACHEDATAARRAY_PMS_0</name>
              <description>core0/core1's permission of dcache data sram block0 in world1.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_CACHEDATAARRAY_PMS_1</name>
              <description>core0/core1's permission of dcache data sram block1 in world1.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_DRAM0_PMS_CONSTRAIN_ROM_WORLD_0_PMS</name>
              <description>core0/core1's permission(sotre,load) of rom in world0.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_X_DRAM0_PMS_CONSTRAIN_ROM_WORLD_1_PMS</name>
              <description>core0/core1's permission(sotre,load) of rom in world1.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_DRAM0_PMS_MONITOR_0</name>
          <description>core0 dram0 permission monitor configuration register 0</description>
          <addressOffset>0x104</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_DRAM0_PMS_MONITOR_LOCK</name>
              <description>Set 1 to lock core0 dram0 permission monitor configuration register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_DRAM0_PMS_MONITOR_1</name>
          <description>core0 dram0 permission monitor configuration register 1</description>
          <addressOffset>0x108</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>CORE_0_DRAM0_PMS_MONITOR_VIOLATE_CLR</name>
              <description>Set 1 to clear core0 dram0 permission monior interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_DRAM0_PMS_MONITOR_VIOLATE_EN</name>
              <description>Set 1 to enable core0 dram0 permission monitor interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_DRAM0_PMS_MONITOR_2</name>
          <description>core0 dram0 permission monitor configuration register 2.</description>
          <addressOffset>0x10C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR</name>
              <description>recorded core0 dram0 permission monitor interrupt status.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_LOCK</name>
              <description>recorded core0 dram0 lock status, 1 means s32c1i access.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_WORLD</name>
              <description>recorded core0 dram0 world status, 0x1 means world0, 0x2 means world1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_ADDR</name>
              <description>recorded core0 dram0 address[25:4] status when core0 dram0 violated permission,the real address is 0x3c000000+addr*16</description>
              <bitOffset>4</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_DRAM0_PMS_MONITOR_3</name>
          <description>core0 dram0 permission monitor configuration register 3.</description>
          <addressOffset>0x110</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_WR</name>
              <description>recorded core0 dram0 wr status, 1 means store, 0 means load.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_BYTEEN</name>
              <description>recorded core0 dram0 byteen status.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_DRAM0_PMS_MONITOR_0</name>
          <description>core1 dram0 permission monitor configuration register 0</description>
          <addressOffset>0x114</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_DRAM0_PMS_MONITOR_LOCK</name>
              <description>Set 1 to lock core1 dram0 permission monitor configuration register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_DRAM0_PMS_MONITOR_1</name>
          <description>core1 dram0 permission monitor configuration register 1</description>
          <addressOffset>0x118</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>CORE_1_DRAM0_PMS_MONITOR_VIOLATE_CLR</name>
              <description>Set 1 to clear core1 dram0 permission monior interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_DRAM0_PMS_MONITOR_VIOLATE_EN</name>
              <description>Set 1 to enable core1 dram0 permission monitor interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_DRAM0_PMS_MONITOR_2</name>
          <description>core1 dram0 permission monitor configuration register 2.</description>
          <addressOffset>0x11C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_DRAM0_PMS_MONITOR_VIOLATE_INTR</name>
              <description>recorded core1 dram0 permission monitor interrupt status.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_DRAM0_PMS_MONITOR_VIOLATE_STATUS_LOCK</name>
              <description>recorded core1 dram0 lock status, 1 means s32c1i access.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_DRAM0_PMS_MONITOR_VIOLATE_STATUS_WORLD</name>
              <description>recorded core1 dram0 world status, 0x1 means world0, 0x2 means world1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_DRAM0_PMS_MONITOR_VIOLATE_STATUS_ADDR</name>
              <description>recorded core1 dram0 address[25:4] status when core1 dram0 violated permission,the real address is 0x3c000000+addr*16</description>
              <bitOffset>4</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_DRAM0_PMS_MONITOR_3</name>
          <description>core1 dram0 permission monitor configuration register 3.</description>
          <addressOffset>0x120</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_DRAM0_PMS_MONITOR_VIOLATE_STATUS_WR</name>
              <description>recorded core1 dram0 wr status, 1 means store, 0 means load.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_DRAM0_PMS_MONITOR_VIOLATE_STATUS_BYTEEN</name>
              <description>recorded core1 dram0 byteen status.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_CONSTRAIN_0</name>
          <description>Core0 access peripherals permission configuration register 0.</description>
          <addressOffset>0x124</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_LOCK</name>
              <description>Set 1 to lock core0 access peripherals permission Configuration Register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_CONSTRAIN_1</name>
          <description>Core0 access peripherals permission configuration register 1.</description>
          <addressOffset>0x128</addressOffset>
          <size>0x20</size>
          <resetValue>0xFF33CFFF</resetValue>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UART</name>
              <description>Core0 access uart permission in world0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_G0SPI_1</name>
              <description>Core0 access g0spi_1 permission in world0.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_G0SPI_0</name>
              <description>Core0 access g0spi_0 permission in world0.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_GPIO</name>
              <description>Core0 access gpio permission in world0.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_FE2</name>
              <description>Core0 access fe2 permission in world0.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_FE</name>
              <description>Core0 access fe permission in world0.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_RTC</name>
              <description>Core0 access rtc permission in world0.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_IO_MUX</name>
              <description>Core0 access io_mux permission in world0.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_HINF</name>
              <description>Core0 access hinf permission in world0.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_MISC</name>
              <description>Core0 access misc permission in world0.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2C</name>
              <description>Core0 access i2c permission in world0.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2S0</name>
              <description>Core0 access i2s0 permission in world0.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UART1</name>
              <description>Core0 access uart1 permission in world0.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_CONSTRAIN_2</name>
          <description>Core0 access peripherals permission configuration register 2.</description>
          <addressOffset>0x12C</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFCFFFF3</resetValue>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BT</name>
              <description>Core0 access bt permission in world0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2C_EXT0</name>
              <description>Core0 access i2c_ext0 permission in world0.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UHCI0</name>
              <description>Core0 access uhci0 permission in world0.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SLCHOST</name>
              <description>Core0 access slchost permission in world0.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_RMT</name>
              <description>Core0 access rmt permission in world0.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_PCNT</name>
              <description>Core0 access pcnt permission in world0.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SLC</name>
              <description>Core0 access slc permission in world0.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_LEDC</name>
              <description>Core0 access ledc permission in world0.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BACKUP</name>
              <description>Core0 access backup permission in world0.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BB</name>
              <description>Core0 access bb permission in world0.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_PWM0</name>
              <description>Core0 access pwm0 permission in world0.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_TIMERGROUP</name>
              <description>Core0 access timergroup permission in world0.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_TIMERGROUP1</name>
              <description>Core0 access timergroup1 permission in world0.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SYSTIMER</name>
              <description>Core0 access systimer permission in world0.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_CONSTRAIN_3</name>
          <description>Core0 access peripherals permission configuration register 3.</description>
          <addressOffset>0x130</addressOffset>
          <size>0x20</size>
          <resetValue>0x3CC3FFFF</resetValue>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SPI_2</name>
              <description>Core0 access spi_2 permission in world0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SPI_3</name>
              <description>Core0 access spi_3 permission in world0.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_APB_CTRL</name>
              <description>Core0 access apb_ctrl permission in world0.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2C_EXT1</name>
              <description>Core0 access i2c_ext1 permission in world0.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SDIO_HOST</name>
              <description>Core0 access sdio_host permission in world0.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CAN</name>
              <description>Core0 access can permission in world0.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_PWM1</name>
              <description>Core0 access pwm1 permission in world0.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2S1</name>
              <description>Core0 access i2s1 permission in world0.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UART2</name>
              <description>Core0 access uart2 permission in world0.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_RWBT</name>
              <description>Core0 access rwbt permission in world0.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_WIFIMAC</name>
              <description>Core0 access wifimac permission in world0.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_PWR</name>
              <description>Core0 access pwr permission in world0.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_CONSTRAIN_4</name>
          <description>Core0 access peripherals permission configuration register 4.</description>
          <addressOffset>0x134</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_USB_DEVICE</name>
              <description>Core0 access usb_device permission in world0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_USB_WRAP</name>
              <description>Core0 access usb_wrap permission in world0.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CRYPTO_PERI</name>
              <description>Core0 access crypto_peri permission in world0.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CRYPTO_DMA</name>
              <description>Core0 access crypto_dma permission in world0.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_APB_ADC</name>
              <description>Core0 access apb_adc permission in world0.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_LCD_CAM</name>
              <description>Core0 access lcd_cam permission in world0.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BT_PWR</name>
              <description>Core0 access bt_pwr permission in world0.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_USB</name>
              <description>Core0 access usb permission in world0.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SYSTEM</name>
              <description>Core0 access system permission in world0.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SENSITIVE</name>
              <description>Core0 access sensitive permission in world0.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_INTERRUPT</name>
              <description>Core0 access interrupt permission in world0.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_DMA_COPY</name>
              <description>Core0 access dma_copy permission in world0.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CACHE_CONFIG</name>
              <description>Core0 access cache_config permission in world0.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_AD</name>
              <description>Core0 access ad permission in world0.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_DIO</name>
              <description>Core0 access dio permission in world0.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_WORLD_CONTROLLER</name>
              <description>Core0 access world_controller permission in world0.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_CONSTRAIN_5</name>
          <description>Core0 access peripherals permission configuration register 5.</description>
          <addressOffset>0x138</addressOffset>
          <size>0x20</size>
          <resetValue>0xFF33CFFF</resetValue>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UART</name>
              <description>Core0 access uart permission in world1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_G0SPI_1</name>
              <description>Core0 access g0spi_1 permission in world1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_G0SPI_0</name>
              <description>Core0 access g0spi_0 permission in world1.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_GPIO</name>
              <description>Core0 access gpio permission in world1.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_FE2</name>
              <description>Core0 access fe2 permission in world1.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_FE</name>
              <description>Core0 access fe permission in world1.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_RTC</name>
              <description>Core0 access rtc permission in world1.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_IO_MUX</name>
              <description>Core0 access io_mux permission in world1.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_HINF</name>
              <description>Core0 access hinf permission in world1.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_MISC</name>
              <description>Core0 access misc permission in world1.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2C</name>
              <description>Core0 access i2c permission in world1.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2S0</name>
              <description>Core0 access i2s0 permission in world1.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UART1</name>
              <description>Core0 access uart1 permission in world1.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_CONSTRAIN_6</name>
          <description>Core0 access peripherals permission configuration register 6.</description>
          <addressOffset>0x13C</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFCFFFF3</resetValue>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BT</name>
              <description>Core0 access bt permission in world1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2C_EXT0</name>
              <description>Core0 access i2c_ext0 permission in world1.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UHCI0</name>
              <description>Core0 access uhci0 permission in world1.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SLCHOST</name>
              <description>Core0 access slchost permission in world1.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_RMT</name>
              <description>Core0 access rmt permission in world1.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_PCNT</name>
              <description>Core0 access pcnt permission in world1.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SLC</name>
              <description>Core0 access slc permission in world1.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_LEDC</name>
              <description>Core0 access ledc permission in world1.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BACKUP</name>
              <description>Core0 access backup permission in world1.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BB</name>
              <description>Core0 access bb permission in world1.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_PWM0</name>
              <description>Core0 access pwm0 permission in world1.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_TIMERGROUP</name>
              <description>Core0 access timergroup permission in world1.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_TIMERGROUP1</name>
              <description>Core0 access timergroup1 permission in world1.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SYSTIMER</name>
              <description>Core0 access systimer permission in world1.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_CONSTRAIN_7</name>
          <description>Core0 access peripherals permission configuration register 7.</description>
          <addressOffset>0x140</addressOffset>
          <size>0x20</size>
          <resetValue>0x3CC3FFFF</resetValue>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SPI_2</name>
              <description>Core0 access spi_2 permission in world1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SPI_3</name>
              <description>Core0 access spi_3 permission in world1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_APB_CTRL</name>
              <description>Core0 access apb_ctrl permission in world1.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2C_EXT1</name>
              <description>Core0 access i2c_ext1 permission in world1.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SDIO_HOST</name>
              <description>Core0 access sdio_host permission in world1.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CAN</name>
              <description>Core0 access can permission in world1.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_PWM1</name>
              <description>Core0 access pwm1 permission in world1.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2S1</name>
              <description>Core0 access i2s1 permission in world1.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UART2</name>
              <description>Core0 access uart2 permission in world1.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_RWBT</name>
              <description>Core0 access rwbt permission in world1.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_WIFIMAC</name>
              <description>Core0 access wifimac permission in world1.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_PWR</name>
              <description>Core0 access pwr permission in world1.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_CONSTRAIN_8</name>
          <description>Core0 access peripherals permission configuration register 8.</description>
          <addressOffset>0x144</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_USB_DEVICE</name>
              <description>Core0 access usb_device permission in world1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_USB_WRAP</name>
              <description>Core0 access usb_wrap permission in world1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CRYPTO_PERI</name>
              <description>Core0 access crypto_peri permission in world1.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CRYPTO_DMA</name>
              <description>Core0 access crypto_dma permission in world1.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_APB_ADC</name>
              <description>Core0 access apb_adc permission in world1.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_LCD_CAM</name>
              <description>Core0 access lcd_cam permission in world1.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BT_PWR</name>
              <description>Core0 access bt_pwr permission in world1.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_USB</name>
              <description>Core0 access usb permission in world1.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SYSTEM</name>
              <description>Core0 access system permission in world1.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SENSITIVE</name>
              <description>Core0 access sensitive permission in world1.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_INTERRUPT</name>
              <description>Core0 access interrupt permission in world1.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_DMA_COPY</name>
              <description>Core0 access dma_copy permission in world1.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CACHE_CONFIG</name>
              <description>Core0 access cache_config permission in world1.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_AD</name>
              <description>Core0 access ad permission in world1.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_DIO</name>
              <description>Core0 access dio permission in world1.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_WORLD_CONTROLLER</name>
              <description>Core0 access world_controller permission in world1.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_CONSTRAIN_9</name>
          <description>Core0 access peripherals permission configuration register 9.</description>
          <addressOffset>0x148</addressOffset>
          <size>0x20</size>
          <resetValue>0x003FFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_SPLTADDR_WORLD_0</name>
              <description>RTCFast memory split address in world 0 for core0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_SPLTADDR_WORLD_1</name>
              <description>RTCFast memory split address in world 1 for core0.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_CONSTRAIN_10</name>
          <description>Core0 access peripherals permission configuration register 10.</description>
          <addressOffset>0x14C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_0_L</name>
              <description>RTCFast memory low region permission in world 0 for core0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_0_H</name>
              <description>RTCFast memory high region permission in world 0 for core0.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_1_L</name>
              <description>RTCFast memory low region permission in world 1 for core0.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_1_H</name>
              <description>RTCFast memory high region permission in world 1 for core0.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_CONSTRAIN_11</name>
          <description>Core0 access peripherals permission configuration register 11.</description>
          <addressOffset>0x150</addressOffset>
          <size>0x20</size>
          <resetValue>0x003FFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_RTCSLOW_0_SPLTADDR_WORLD_0</name>
              <description>RTCSlow_0 memory split address in world 0 for core0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_RTCSLOW_0_SPLTADDR_WORLD_1</name>
              <description>RTCSlow_0 memory split address in world 1 for core0.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_CONSTRAIN_12</name>
          <description>Core0 access peripherals permission configuration register 12.</description>
          <addressOffset>0x154</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_RTCSLOW_0_WORLD_0_L</name>
              <description>RTCSlow_0 memory low region permission in world 0 for core0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_RTCSLOW_0_WORLD_0_H</name>
              <description>RTCSlow_0 memory high region permission in world 0 for core0.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_RTCSLOW_0_WORLD_1_L</name>
              <description>RTCSlow_0 memory low region permission in world 1 for core0.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_RTCSLOW_0_WORLD_1_H</name>
              <description>RTCSlow_0 memory high region permission in world 1 for core0.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_CONSTRAIN_13</name>
          <description>Core0 access peripherals permission configuration register 13.</description>
          <addressOffset>0x158</addressOffset>
          <size>0x20</size>
          <resetValue>0x003FFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_RTCSLOW_1_SPLTADDR_WORLD_0</name>
              <description>RTCSlow_1 memory split address in world 0 for core0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_RTCSLOW_1_SPLTADDR_WORLD_1</name>
              <description>RTCSlow_1 memory split address in world 1 for core0.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_CONSTRAIN_14</name>
          <description>Core0 access peripherals permission configuration register 14.</description>
          <addressOffset>0x15C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_RTCSLOW_1_WORLD_0_L</name>
              <description>RTCSlow_1 memory low region permission in world 0 for core0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_RTCSLOW_1_WORLD_0_H</name>
              <description>RTCSlow_1 memory high region permission in world 0 for core0.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_RTCSLOW_1_WORLD_1_L</name>
              <description>RTCSlow_1 memory low region permission in world 1 for core0.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_CONSTRAIN_RTCSLOW_1_WORLD_1_H</name>
              <description>RTCSlow_1 memory high region permission in world 1 for core0.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_REGION_PMS_CONSTRAIN_0</name>
          <description>Core0 region permission register 0.</description>
          <addressOffset>0x160</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_LOCK</name>
              <description>Set 1 to lock core0 region permission registers.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_REGION_PMS_CONSTRAIN_1</name>
          <description>Core0 region permission register 1.</description>
          <addressOffset>0x164</addressOffset>
          <size>0x20</size>
          <resetValue>0x003FFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_WORLD_0_AREA_0</name>
              <description>Region 0 permission in world 0 for core0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_WORLD_0_AREA_1</name>
              <description>Region 1 permission in world 0 for core0.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_WORLD_0_AREA_2</name>
              <description>Region 2 permission in world 0 for core0.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_WORLD_0_AREA_3</name>
              <description>Region 3 permission in world 0 for core0.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_WORLD_0_AREA_4</name>
              <description>Region 4 permission in world 0 for core0.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_WORLD_0_AREA_5</name>
              <description>Region 5 permission in world 0 for core0.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_WORLD_0_AREA_6</name>
              <description>Region 6 permission in world 0 for core0.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_WORLD_0_AREA_7</name>
              <description>Region 7 permission in world 0 for core0.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_WORLD_0_AREA_8</name>
              <description>Region 8 permission in world 0 for core0.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_WORLD_0_AREA_9</name>
              <description>Region 9 permission in world 0 for core0.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_WORLD_0_AREA_10</name>
              <description>Region 10 permission in world 0 for core0.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_REGION_PMS_CONSTRAIN_2</name>
          <description>Core0 region permission register 2.</description>
          <addressOffset>0x168</addressOffset>
          <size>0x20</size>
          <resetValue>0x003FFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_WORLD_1_AREA_0</name>
              <description>Region 0 permission in world 1 for core0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_WORLD_1_AREA_1</name>
              <description>Region 1 permission in world 1 for core0.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_WORLD_1_AREA_2</name>
              <description>Region 2 permission in world 1 for core0.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_WORLD_1_AREA_3</name>
              <description>Region 3 permission in world 1 for core0.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_WORLD_1_AREA_4</name>
              <description>Region 4 permission in world 1 for core0.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_WORLD_1_AREA_5</name>
              <description>Region 5 permission in world 1 for core0.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_WORLD_1_AREA_6</name>
              <description>Region 6 permission in world 1 for core0.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_WORLD_1_AREA_7</name>
              <description>Region 7 permission in world 1 for core0.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_WORLD_1_AREA_8</name>
              <description>Region 8 permission in world 1 for core0.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_WORLD_1_AREA_9</name>
              <description>Region 9 permission in world 1 for core0.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_WORLD_1_AREA_10</name>
              <description>Region 10 permission in world 1 for core0.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_REGION_PMS_CONSTRAIN_3</name>
          <description>Core0 region permission register 3.</description>
          <addressOffset>0x16C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_ADDR_0</name>
              <description>Region 0 start address for core0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_REGION_PMS_CONSTRAIN_4</name>
          <description>Core0 region permission register 4.</description>
          <addressOffset>0x170</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_ADDR_1</name>
              <description>Region 0 end address and Region 1 start address for core0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_REGION_PMS_CONSTRAIN_5</name>
          <description>Core0 region permission register 5.</description>
          <addressOffset>0x174</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_ADDR_2</name>
              <description>Region 1 end address and Region 2 start address for core0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_REGION_PMS_CONSTRAIN_6</name>
          <description>Core0 region permission register 6.</description>
          <addressOffset>0x178</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_ADDR_3</name>
              <description>Region 2 end address and Region 3 start address for core0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_REGION_PMS_CONSTRAIN_7</name>
          <description>Core0 region permission register 7.</description>
          <addressOffset>0x17C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_ADDR_4</name>
              <description>Region 3 end address and Region 4 start address for core0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_REGION_PMS_CONSTRAIN_8</name>
          <description>Core0 region permission register 8.</description>
          <addressOffset>0x180</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_ADDR_5</name>
              <description>Region 4 end address and Region 5 start address for core0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_REGION_PMS_CONSTRAIN_9</name>
          <description>Core0 region permission register 9.</description>
          <addressOffset>0x184</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_ADDR_6</name>
              <description>Region 5 end address and Region 6 start address for core0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_REGION_PMS_CONSTRAIN_10</name>
          <description>Core0 region permission register 10.</description>
          <addressOffset>0x188</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_ADDR_7</name>
              <description>Region 6 end address and Region 7 start address for core0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_REGION_PMS_CONSTRAIN_11</name>
          <description>Core0 region permission register 11.</description>
          <addressOffset>0x18C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_ADDR_8</name>
              <description>Region 7 end address and Region 8 start address for core0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_REGION_PMS_CONSTRAIN_12</name>
          <description>Core0 region permission register 12.</description>
          <addressOffset>0x190</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_ADDR_9</name>
              <description>Region 8 end address and Region 9 start address for core0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_REGION_PMS_CONSTRAIN_13</name>
          <description>Core0 region permission register 13.</description>
          <addressOffset>0x194</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_ADDR_10</name>
              <description>Region 9 end address and Region 10 start address for core0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_REGION_PMS_CONSTRAIN_14</name>
          <description>Core0 region permission register 14.</description>
          <addressOffset>0x198</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_REGION_PMS_CONSTRAIN_ADDR_11</name>
              <description>Region 10 end address for core0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_MONITOR_0</name>
          <description>Core0 permission report register 0.</description>
          <addressOffset>0x19C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_MONITOR_LOCK</name>
              <description>Set 1 to lock core0 permission report registers.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_MONITOR_1</name>
          <description>Core0 permission report register 1.</description>
          <addressOffset>0x1A0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_CLR</name>
              <description>Set 1 to clear interrupt that core0 initiate illegal PIF bus access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_EN</name>
              <description>Set 1 to enable interrupt that core0 initiate illegal PIF bus access.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_MONITOR_2</name>
          <description>Core0 permission report register 2.</description>
          <addressOffset>0x1A4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR</name>
              <description>Record core0 illegal access interrupt state.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HPORT_0</name>
              <description>Record hport information when core0 initiate illegal access.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HSIZE</name>
              <description>Record access type when core0 initate illegal access.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HWRITE</name>
              <description>Record access direction when core0 initiate illegal access.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HWORLD</name>
              <description>Record world information when core0 initiate illegal access.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_MONITOR_3</name>
          <description>Core0 permission report register 3.</description>
          <addressOffset>0x1A8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HADDR</name>
              <description>Record address information when core0 initiate illegal access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_MONITOR_4</name>
          <description>Core0 permission report register 4.</description>
          <addressOffset>0x1AC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_CLR</name>
              <description>Set 1 to clear interrupt that core0 initiate unsupported access type.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_EN</name>
              <description>Set 1 to enable interrupt that core0 initiate unsupported access type.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_MONITOR_5</name>
          <description>Core0 permission report register 5.</description>
          <addressOffset>0x1B0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_INTR</name>
              <description>Record core0 unsupported access type interrupt state.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HSIZE</name>
              <description>Record access type when core0 initiate unsupported access type.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HWORLD</name>
              <description>Record world information when core0 initiate unsupported access type.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_PIF_PMS_MONITOR_6</name>
          <description>Core0 permission report register 6.</description>
          <addressOffset>0x1B4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HADDR</name>
              <description>Record address information when core0 initiate unsupported access type.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_VECBASE_OVERRIDE_LOCK</name>
          <description>core0 vecbase override configuration register 0</description>
          <addressOffset>0x1B8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_VECBASE_OVERRIDE_LOCK</name>
              <description>Set 1 to lock core0 vecbase configuration register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_VECBASE_OVERRIDE_0</name>
          <description>core0 vecbase override configuration register 0</description>
          <addressOffset>0x1BC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>CORE_0_VECBASE_WORLD_MASK</name>
              <description>Set 1 to mask world, then only world0_value will work.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_VECBASE_OVERRIDE_1</name>
          <description>core0 vecbase override configuration register 1</description>
          <addressOffset>0x1C0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_VECBASE_OVERRIDE_WORLD0_VALUE</name>
              <description>world0 vecbase_override register, when core0 in world0 use this register to override vecbase register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_VECBASE_OVERRIDE_SEL</name>
              <description>Set 0x3 to sel vecbase_override to override vecbase register.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_VECBASE_OVERRIDE_2</name>
          <description>core0 vecbase override configuration register 1</description>
          <addressOffset>0x1C4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_VECBASE_OVERRIDE_WORLD1_VALUE</name>
              <description>world1 vecbase_override register, when core0 in world1 use this register to override vecbase register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_TOOMANYEXCEPTIONS_M_OVERRIDE_0</name>
          <description>core0 toomanyexception override configuration register 0.</description>
          <addressOffset>0x1C8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_TOOMANYEXCEPTIONS_M_OVERRIDE_LOCK</name>
              <description>Set 1 to lock core0 toomanyexception override configuration register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_0_TOOMANYEXCEPTIONS_M_OVERRIDE_1</name>
          <description>core0 toomanyexception override configuration register 1.</description>
          <addressOffset>0x1CC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>CORE_0_TOOMANYEXCEPTIONS_M_OVERRIDE</name>
              <description>Set 1 to mask toomanyexception.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_PIF_PMS_CONSTRAIN_0</name>
          <description>Core1 access peripherals permission configuration register 0.</description>
          <addressOffset>0x1D0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_LOCK</name>
              <description>Set 1 to lock core1 pif permission configuration register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_PIF_PMS_CONSTRAIN_1</name>
          <description>Core1 access peripherals permission configuration register 1.</description>
          <addressOffset>0x1D4</addressOffset>
          <size>0x20</size>
          <resetValue>0xFF33CFFF</resetValue>
          <fields>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_UART</name>
              <description>Core1 access uart permission in world0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_G0SPI_1</name>
              <description>Core1 access g0spi_1 permission in world0.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_G0SPI_0</name>
              <description>Core1 access g0spi_0 permission in world0.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_GPIO</name>
              <description>Core1 access gpio permission in world0.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_FE2</name>
              <description>Core1 access fe2 permission in world0.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_FE</name>
              <description>Core1 access fe permission in world0.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_RTC</name>
              <description>Core1 access rtc permission in world0.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_IO_MUX</name>
              <description>Core1 access io_mux permission in world0.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_HINF</name>
              <description>Core1 access hinf permission in world0.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_MISC</name>
              <description>Core1 access misc permission in world0.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_I2C</name>
              <description>Core1 access i2c permission in world0.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_I2S0</name>
              <description>Core1 access i2s0 permission in world0.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_UART1</name>
              <description>Core1 access uart1 permission in world0.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_PIF_PMS_CONSTRAIN_2</name>
          <description>Core1 access peripherals permission configuration register 2.</description>
          <addressOffset>0x1D8</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFCFFFF3</resetValue>
          <fields>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_BT</name>
              <description>Core1 access bt permission in world0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_I2C_EXT0</name>
              <description>Core1 access i2c_ext0 permission in world0.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_UHCI0</name>
              <description>Core1 access uhci0 permission in world0.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_SLCHOST</name>
              <description>Core1 access slchost permission in world0.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_RMT</name>
              <description>Core1 access rmt permission in world0.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_PCNT</name>
              <description>Core1 access pcnt permission in world0.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_SLC</name>
              <description>Core1 access slc permission in world0.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_LEDC</name>
              <description>Core1 access ledc permission in world0.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_BACKUP</name>
              <description>Core1 access backup permission in world0.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_BB</name>
              <description>Core1 access bb permission in world0.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_PWM0</name>
              <description>Core1 access pwm0 permission in world0.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_TIMERGROUP</name>
              <description>Core1 access timergroup permission in world0.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_TIMERGROUP1</name>
              <description>Core1 access timergroup1 permission in world0.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_SYSTIMER</name>
              <description>Core1 access systimer permission in world0.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_PIF_PMS_CONSTRAIN_3</name>
          <description>Core1 access peripherals permission configuration register 3.</description>
          <addressOffset>0x1DC</addressOffset>
          <size>0x20</size>
          <resetValue>0x3CC3FFFF</resetValue>
          <fields>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_SPI_2</name>
              <description>Core1 access spi_2 permission in world0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_SPI_3</name>
              <description>Core1 access spi_3 permission in world0.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_APB_CTRL</name>
              <description>Core1 access apb_ctrl permission in world0.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_I2C_EXT1</name>
              <description>Core1 access i2c_ext1 permission in world0.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_SDIO_HOST</name>
              <description>Core1 access sdio_host permission in world0.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_CAN</name>
              <description>Core1 access can permission in world0.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_PWM1</name>
              <description>Core1 access pwm1 permission in world0.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_I2S1</name>
              <description>Core1 access i2s1 permission in world0.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_UART2</name>
              <description>Core1 access uart2 permission in world0.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_RWBT</name>
              <description>Core1 access rwbt permission in world0.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_WIFIMAC</name>
              <description>Core1 access wifimac permission in world0.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_PWR</name>
              <description>Core1 access pwr permission in world0.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_PIF_PMS_CONSTRAIN_4</name>
          <description>Core1 access peripherals permission configuration register 4.</description>
          <addressOffset>0x1E0</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_USB_DEVICE</name>
              <description>Core1 access usb_device permission in world0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_USB_WRAP</name>
              <description>Core1 access usb_wrap permission in world0.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_CRYPTO_PERI</name>
              <description>Core1 access crypto_peri permission in world0.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_CRYPTO_DMA</name>
              <description>Core1 access crypto_dma permission in world0.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_APB_ADC</name>
              <description>Core1 access apb_adc permission in world0.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_LCD_CAM</name>
              <description>Core1 access lcd_cam permission in world0.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_BT_PWR</name>
              <description>Core1 access bt_pwr permission in world0.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_USB</name>
              <description>Core1 access usb permission in world0.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_SYSTEM</name>
              <description>Core1 access system permission in world0.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_SENSITIVE</name>
              <description>Core1 access sensitive permission in world0.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_INTERRUPT</name>
              <description>Core1 access interrupt permission in world0.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_DMA_COPY</name>
              <description>Core1 access dma_copy permission in world0.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_CACHE_CONFIG</name>
              <description>Core1 access cache_config permission in world0.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_AD</name>
              <description>Core1 access ad permission in world0.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_DIO</name>
              <description>Core1 access dio permission in world0.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_0_WORLD_CONTROLLER</name>
              <description>Core1 access world_controller permission in world0.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_PIF_PMS_CONSTRAIN_5</name>
          <description>Core1 access peripherals permission configuration register 5.</description>
          <addressOffset>0x1E4</addressOffset>
          <size>0x20</size>
          <resetValue>0xFF33CFFF</resetValue>
          <fields>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_UART</name>
              <description>Core1 access uart permission in world1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_G0SPI_1</name>
              <description>Core1 access g0spi_1 permission in world1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_G0SPI_0</name>
              <description>Core1 access g0spi_0 permission in world1.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_GPIO</name>
              <description>Core1 access gpio permission in world1.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_FE2</name>
              <description>Core1 access fe2 permission in world1.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_FE</name>
              <description>Core1 access fe permission in world1.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_RTC</name>
              <description>Core1 access rtc permission in world1.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_IO_MUX</name>
              <description>Core1 access io_mux permission in world1.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_HINF</name>
              <description>Core1 access hinf permission in world1.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_MISC</name>
              <description>Core1 access misc permission in world1.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_I2C</name>
              <description>Core1 access i2c permission in world1.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_I2S0</name>
              <description>Core1 access i2s0 permission in world1.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_UART1</name>
              <description>Core1 access uart1 permission in world1.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_PIF_PMS_CONSTRAIN_6</name>
          <description>Core1 access peripherals permission configuration register 6.</description>
          <addressOffset>0x1E8</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFCFFFF3</resetValue>
          <fields>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_BT</name>
              <description>Core1 access bt permission in world1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_I2C_EXT0</name>
              <description>Core1 access i2c_ext0 permission in world1.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_UHCI0</name>
              <description>Core1 access uhci0 permission in world1.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_SLCHOST</name>
              <description>Core1 access slchost permission in world1.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_RMT</name>
              <description>Core1 access rmt permission in world1.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_PCNT</name>
              <description>Core1 access pcnt permission in world1.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_SLC</name>
              <description>Core1 access slc permission in world1.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_LEDC</name>
              <description>Core1 access ledc permission in world1.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_BACKUP</name>
              <description>Core1 access backup permission in world1.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_BB</name>
              <description>Core1 access bb permission in world1.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_PWM0</name>
              <description>Core1 access pwm0 permission in world1.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_TIMERGROUP</name>
              <description>Core1 access timergroup permission in world1.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_TIMERGROUP1</name>
              <description>Core1 access timergroup1 permission in world1.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_SYSTIMER</name>
              <description>Core1 access systimer permission in world1.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_PIF_PMS_CONSTRAIN_7</name>
          <description>Core1 access peripherals permission configuration register 7.</description>
          <addressOffset>0x1EC</addressOffset>
          <size>0x20</size>
          <resetValue>0x3CC3FFFF</resetValue>
          <fields>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_SPI_2</name>
              <description>Core1 access spi_2 permission in world1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_SPI_3</name>
              <description>Core1 access spi_3 permission in world1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_APB_CTRL</name>
              <description>Core1 access apb_ctrl permission in world1.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_I2C_EXT1</name>
              <description>Core1 access i2c_ext1 permission in world1.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_SDIO_HOST</name>
              <description>Core1 access sdio_host permission in world1.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_CAN</name>
              <description>Core1 access can permission in world1.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_PWM1</name>
              <description>Core1 access pwm1 permission in world1.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_I2S1</name>
              <description>Core1 access i2s1 permission in world1.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_UART2</name>
              <description>Core1 access uart2 permission in world1.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_RWBT</name>
              <description>Core1 access rwbt permission in world1.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_WIFIMAC</name>
              <description>Core1 access wifimac permission in world1.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_PWR</name>
              <description>Core1 access pwr permission in world1.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_PIF_PMS_CONSTRAIN_8</name>
          <description>Core1 access peripherals permission configuration register 8.</description>
          <addressOffset>0x1F0</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_USB_DEVICE</name>
              <description>Core1 access usb_device permission in world1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_USB_WRAP</name>
              <description>Core1 access usb_wrap permission in world1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_CRYPTO_PERI</name>
              <description>Core1 access crypto_peri permission in world1.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_CRYPTO_DMA</name>
              <description>Core1 access crypto_dma permission in world1.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_APB_ADC</name>
              <description>Core1 access apb_adc permission in world1.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_LCD_CAM</name>
              <description>Core1 access lcd_cam permission in world1.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_BT_PWR</name>
              <description>Core1 access bt_pwr permission in world1.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_USB</name>
              <description>Core1 access usb permission in world1.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_SYSTEM</name>
              <description>Core1 access system permission in world1.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_SENSITIVE</name>
              <description>Core1 access sensitive permission in world1.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_INTERRUPT</name>
              <description>Core1 access interrupt permission in world1.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_DMA_COPY</name>
              <description>Core1 access dma_copy permission in world1.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_CACHE_CONFIG</name>
              <description>Core1 access cache_config permission in world1.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_AD</name>
              <description>Core1 access ad permission in world1.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_DIO</name>
              <description>Core1 access dio permission in world1.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_WORLD_1_WORLD_CONTROLLER</name>
              <description>Core1 access world_controller permission in world1.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_PIF_PMS_CONSTRAIN_9</name>
          <description>Core1 access peripherals permission configuration register 9.</description>
          <addressOffset>0x1F4</addressOffset>
          <size>0x20</size>
          <resetValue>0x003FFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_RTCFAST_SPLTADDR_WORLD_0</name>
              <description>RTCFast memory split address in world 0 for core1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_RTCFAST_SPLTADDR_WORLD_1</name>
              <description>RTCFast memory split address in world 1 for core1.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_PIF_PMS_CONSTRAIN_10</name>
          <description>core1 access peripherals permission configuration register 10.</description>
          <addressOffset>0x1F8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_0_L</name>
              <description>RTCFast memory low region permission in world 0 for core1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_0_H</name>
              <description>RTCFast memory high region permission in world 0 for core1.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_1_L</name>
              <description>RTCFast memory low region permission in world 1 for core1.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_1_H</name>
              <description>RTCFast memory high region permission in world 1 for core1.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_PIF_PMS_CONSTRAIN_11</name>
          <description>core1 access peripherals permission configuration register 11.</description>
          <addressOffset>0x1FC</addressOffset>
          <size>0x20</size>
          <resetValue>0x003FFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_RTCSLOW_0_SPLTADDR_WORLD_0</name>
              <description>RTCSlow_0 memory split address in world 0 for core1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_RTCSLOW_0_SPLTADDR_WORLD_1</name>
              <description>RTCSlow_0 memory split address in world 1 for core1.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_PIF_PMS_CONSTRAIN_12</name>
          <description>core1 access peripherals permission configuration register 12.</description>
          <addressOffset>0x200</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_RTCSLOW_0_WORLD_0_L</name>
              <description>RTCSlow_0 memory low region permission in world 0 for core1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_RTCSLOW_0_WORLD_0_H</name>
              <description>RTCSlow_0 memory high region permission in world 0 for core1.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_RTCSLOW_0_WORLD_1_L</name>
              <description>RTCSlow_0 memory low region permission in world 1 for core1.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_RTCSLOW_0_WORLD_1_H</name>
              <description>RTCSlow_0 memory high region permission in world 1 for core1.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_PIF_PMS_CONSTRAIN_13</name>
          <description>core1 access peripherals permission configuration register 13.</description>
          <addressOffset>0x204</addressOffset>
          <size>0x20</size>
          <resetValue>0x003FFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_RTCSLOW_1_SPLTADDR_WORLD_0</name>
              <description>RTCSlow_1 memory split address in world 0 for core1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_RTCSLOW_1_SPLTADDR_WORLD_1</name>
              <description>RTCSlow_1 memory split address in world 1 for core1.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_PIF_PMS_CONSTRAIN_14</name>
          <description>core1 access peripherals permission configuration register 14.</description>
          <addressOffset>0x208</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_RTCSLOW_1_WORLD_0_L</name>
              <description>RTCSlow_1 memory low region permission in world 0 for core1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_RTCSLOW_1_WORLD_0_H</name>
              <description>RTCSlow_1 memory high region permission in world 0 for core1.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_RTCSLOW_1_WORLD_1_L</name>
              <description>RTCSlow_1 memory low region permission in world 1 for core1.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_CONSTRAIN_RTCSLOW_1_WORLD_1_H</name>
              <description>RTCSlow_1 memory high region permission in world 1 for core1.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_REGION_PMS_CONSTRAIN_0</name>
          <description>core1 region permission register 0.</description>
          <addressOffset>0x20C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_LOCK</name>
              <description>Set 1 to lock core1 region permission registers.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_REGION_PMS_CONSTRAIN_1</name>
          <description>core1 region permission register 1.</description>
          <addressOffset>0x210</addressOffset>
          <size>0x20</size>
          <resetValue>0x003FFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_WORLD_0_AREA_0</name>
              <description>Region 0 permission in world 0 for core1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_WORLD_0_AREA_1</name>
              <description>Region 1 permission in world 0 for core1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_WORLD_0_AREA_2</name>
              <description>Region 2 permission in world 0 for core1.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_WORLD_0_AREA_3</name>
              <description>Region 3 permission in world 0 for core1.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_WORLD_0_AREA_4</name>
              <description>Region 4 permission in world 0 for core1.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_WORLD_0_AREA_5</name>
              <description>Region 5 permission in world 0 for core1.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_WORLD_0_AREA_6</name>
              <description>Region 6 permission in world 0 for core1.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_WORLD_0_AREA_7</name>
              <description>Region 7 permission in world 0 for core1.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_WORLD_0_AREA_8</name>
              <description>Region 8 permission in world 0 for core1.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_WORLD_0_AREA_9</name>
              <description>Region 9 permission in world 0 for core1.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_WORLD_0_AREA_10</name>
              <description>Region 10 permission in world 0 for core1.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_REGION_PMS_CONSTRAIN_2</name>
          <description>core1 region permission register 2.</description>
          <addressOffset>0x214</addressOffset>
          <size>0x20</size>
          <resetValue>0x003FFFFF</resetValue>
          <fields>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_WORLD_1_AREA_0</name>
              <description>Region 0 permission in world 1 for core1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_WORLD_1_AREA_1</name>
              <description>Region 1 permission in world 1 for core1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_WORLD_1_AREA_2</name>
              <description>Region 2 permission in world 1 for core1.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_WORLD_1_AREA_3</name>
              <description>Region 3 permission in world 1 for core1.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_WORLD_1_AREA_4</name>
              <description>Region 4 permission in world 1 for core1.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_WORLD_1_AREA_5</name>
              <description>Region 5 permission in world 1 for core1.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_WORLD_1_AREA_6</name>
              <description>Region 6 permission in world 1 for core1.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_WORLD_1_AREA_7</name>
              <description>Region 7 permission in world 1 for core1.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_WORLD_1_AREA_8</name>
              <description>Region 8 permission in world 1 for core1.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_WORLD_1_AREA_9</name>
              <description>Region 9 permission in world 1 for core1.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_WORLD_1_AREA_10</name>
              <description>Region 10 permission in world 1 for core1.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_REGION_PMS_CONSTRAIN_3</name>
          <description>core1 region permission register 3.</description>
          <addressOffset>0x218</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_ADDR_0</name>
              <description>Region 0 start address for core1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_REGION_PMS_CONSTRAIN_4</name>
          <description>core1 region permission register 4.</description>
          <addressOffset>0x21C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_ADDR_1</name>
              <description>Region 0 end address and Region 1 start address for core1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_REGION_PMS_CONSTRAIN_5</name>
          <description>core1 region permission register 5.</description>
          <addressOffset>0x220</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_ADDR_2</name>
              <description>Region 1 end address and Region 2 start address for core1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_REGION_PMS_CONSTRAIN_6</name>
          <description>core1 region permission register 6.</description>
          <addressOffset>0x224</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_ADDR_3</name>
              <description>Region 2 end address and Region 3 start address for core1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_REGION_PMS_CONSTRAIN_7</name>
          <description>core1 region permission register 7.</description>
          <addressOffset>0x228</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_ADDR_4</name>
              <description>Region 3 end address and Region 4 start address for core1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_REGION_PMS_CONSTRAIN_8</name>
          <description>core1 region permission register 8.</description>
          <addressOffset>0x22C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_ADDR_5</name>
              <description>Region 4 end address and Region 5 start address for core1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_REGION_PMS_CONSTRAIN_9</name>
          <description>core1 region permission register 9.</description>
          <addressOffset>0x230</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_ADDR_6</name>
              <description>Region 5 end address and Region 6 start address for core1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_REGION_PMS_CONSTRAIN_10</name>
          <description>core1 region permission register 10.</description>
          <addressOffset>0x234</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_ADDR_7</name>
              <description>Region 6 end address and Region 7 start address for core1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_REGION_PMS_CONSTRAIN_11</name>
          <description>core1 region permission register 11.</description>
          <addressOffset>0x238</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_ADDR_8</name>
              <description>Region 7 end address and Region 8 start address for core1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_REGION_PMS_CONSTRAIN_12</name>
          <description>core1 region permission register 12.</description>
          <addressOffset>0x23C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_ADDR_9</name>
              <description>Region 8 end address and Region 9 start address for core1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_REGION_PMS_CONSTRAIN_13</name>
          <description>core1 region permission register 13.</description>
          <addressOffset>0x240</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_ADDR_10</name>
              <description>Region 9 end address and Region 10 start address for core1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_REGION_PMS_CONSTRAIN_14</name>
          <description>core1 region permission register 14.</description>
          <addressOffset>0x244</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_REGION_PMS_CONSTRAIN_ADDR_11</name>
              <description>Region 10 end address for core1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_PIF_PMS_MONITOR_0</name>
          <description>core1 permission report register 0.</description>
          <addressOffset>0x248</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_PIF_PMS_MONITOR_LOCK</name>
              <description>Set 1 to lock core1 permission report registers.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_PIF_PMS_MONITOR_1</name>
          <description>core1 permission report register 1.</description>
          <addressOffset>0x24C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>CORE_1_PIF_PMS_MONITOR_VIOLATE_CLR</name>
              <description>Set 1 to clear interrupt that core1 initiate illegal PIF bus access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_MONITOR_VIOLATE_EN</name>
              <description>Set 1 to enable interrupt that core1 initiate illegal PIF bus access.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_PIF_PMS_MONITOR_2</name>
          <description>core1 permission report register 2.</description>
          <addressOffset>0x250</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_PIF_PMS_MONITOR_VIOLATE_INTR</name>
              <description>Record core1 illegal access interrupt state.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_MONITOR_VIOLATE_STATUS_HPORT_0</name>
              <description>Record hport information when core1 initiate illegal access.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_MONITOR_VIOLATE_STATUS_HSIZE</name>
              <description>Record access type when core1 initate illegal access.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_MONITOR_VIOLATE_STATUS_HWRITE</name>
              <description>Record access direction when core1 initiate illegal access.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_MONITOR_VIOLATE_STATUS_HWORLD</name>
              <description>Record world information when core1 initiate illegal access.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_PIF_PMS_MONITOR_3</name>
          <description>core1 permission report register 3.</description>
          <addressOffset>0x254</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_PIF_PMS_MONITOR_VIOLATE_STATUS_HADDR</name>
              <description>Record address information when core1 initiate illegal access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_PIF_PMS_MONITOR_4</name>
          <description>core1 permission report register 4.</description>
          <addressOffset>0x258</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>CORE_1_PIF_PMS_MONITOR_NONWORD_VIOLATE_CLR</name>
              <description>Set 1 to clear interrupt that core1 initiate unsupported access type.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_MONITOR_NONWORD_VIOLATE_EN</name>
              <description>Set 1 to enable interrupt that core1 initiate unsupported access type.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_PIF_PMS_MONITOR_5</name>
          <description>core1 permission report register 5.</description>
          <addressOffset>0x25C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_PIF_PMS_MONITOR_NONWORD_VIOLATE_INTR</name>
              <description>Record core1 unsupported access type interrupt state.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HSIZE</name>
              <description>Record access type when core1 initiate unsupported access type.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HWORLD</name>
              <description>Record world information when core1 initiate unsupported access type.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_PIF_PMS_MONITOR_6</name>
          <description>core1 permission report register 6.</description>
          <addressOffset>0x260</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HADDR</name>
              <description>Record address information when core1 initiate unsupported access type.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_VECBASE_OVERRIDE_LOCK</name>
          <description>core1 vecbase override configuration register 0</description>
          <addressOffset>0x264</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_VECBASE_OVERRIDE_LOCK</name>
              <description>Set 1 to lock core1 vecbase configuration register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_VECBASE_OVERRIDE_0</name>
          <description>core1 vecbase override configuration register 0</description>
          <addressOffset>0x268</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>CORE_1_VECBASE_WORLD_MASK</name>
              <description>Set 1 to mask world, then only world0_value will work.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_VECBASE_OVERRIDE_1</name>
          <description>core1 vecbase override configuration register 1</description>
          <addressOffset>0x26C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_VECBASE_OVERRIDE_WORLD0_VALUE</name>
              <description>world0 vecbase_override register, when core1 in world0 use this register to override vecbase register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_VECBASE_OVERRIDE_SEL</name>
              <description>Set 0x3 to sel vecbase_override to override vecbase register.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_VECBASE_OVERRIDE_2</name>
          <description>core1 vecbase override configuration register 1</description>
          <addressOffset>0x270</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_VECBASE_OVERRIDE_WORLD1_VALUE</name>
              <description>world1 vecbase_override register, when core1 in world1 use this register to override vecbase register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_TOOMANYEXCEPTIONS_M_OVERRIDE_0</name>
          <description>core1 toomanyexception override configuration register 0.</description>
          <addressOffset>0x274</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_TOOMANYEXCEPTIONS_M_OVERRIDE_LOCK</name>
              <description>Set 1 to lock core1 toomanyexception override configuration register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_TOOMANYEXCEPTIONS_M_OVERRIDE_1</name>
          <description>core1 toomanyexception override configuration register 1.</description>
          <addressOffset>0x278</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>CORE_1_TOOMANYEXCEPTIONS_M_OVERRIDE</name>
              <description>Set 1 to mask toomanyexception.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BACKUP_BUS_PMS_CONSTRAIN_0</name>
          <description>BackUp access peripherals permission configuration register 0.</description>
          <addressOffset>0x27C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_LOCK</name>
              <description>Set 1 to lock BackUp permission configuration registers.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BACKUP_BUS_PMS_CONSTRAIN_1</name>
          <description>BackUp access peripherals permission configuration register 1.</description>
          <addressOffset>0x280</addressOffset>
          <size>0x20</size>
          <resetValue>0xFF33CFFF</resetValue>
          <fields>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_UART</name>
              <description>BackUp access uart permission.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_G0SPI_1</name>
              <description>BackUp access g0spi_1 permission.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_G0SPI_0</name>
              <description>BackUp access g0spi_0 permission.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_GPIO</name>
              <description>BackUp access gpio permission.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_FE2</name>
              <description>BackUp access fe2 permission.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_FE</name>
              <description>BackUp access fe permission.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_RTC</name>
              <description>BackUp access rtc permission.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_IO_MUX</name>
              <description>BackUp access io_mux permission.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_HINF</name>
              <description>BackUp access hinf permission.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_MISC</name>
              <description>BackUp access misc permission.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_I2C</name>
              <description>BackUp access i2c permission.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_I2S0</name>
              <description>BackUp access i2s0 permission.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_UART1</name>
              <description>BackUp access uart1 permission.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BACKUP_BUS_PMS_CONSTRAIN_2</name>
          <description>BackUp access peripherals permission configuration register 2.</description>
          <addressOffset>0x284</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFCFFFF3</resetValue>
          <fields>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_BT</name>
              <description>BackUp access bt permission.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_I2C_EXT0</name>
              <description>BackUp access i2c_ext0 permission.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_UHCI0</name>
              <description>BackUp access uhci0 permission.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_SLCHOST</name>
              <description>BackUp access slchost permission.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_RMT</name>
              <description>BackUp access rmt permission.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_PCNT</name>
              <description>BackUp access pcnt permission.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_SLC</name>
              <description>BackUp access slc permission.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_LEDC</name>
              <description>BackUp access ledc permission.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_BACKUP</name>
              <description>BackUp access backup permission.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_BB</name>
              <description>BackUp access bb permission.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_PWM0</name>
              <description>BackUp access pwm0 permission.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_TIMERGROUP</name>
              <description>BackUp access timergroup permission.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_TIMERGROUP1</name>
              <description>BackUp access timergroup1 permission.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_SYSTIMER</name>
              <description>BackUp access systimer permission.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BACKUP_BUS_PMS_CONSTRAIN_3</name>
          <description>BackUp access peripherals permission configuration register 3.</description>
          <addressOffset>0x288</addressOffset>
          <size>0x20</size>
          <resetValue>0x3CC3FFFF</resetValue>
          <fields>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_SPI_2</name>
              <description>BackUp access spi_2 permission.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_SPI_3</name>
              <description>BackUp access spi_3 permission.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_APB_CTRL</name>
              <description>BackUp access apb_ctrl permission.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_I2C_EXT1</name>
              <description>BackUp access i2c_ext1 permission.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_SDIO_HOST</name>
              <description>BackUp access sdio_host permission.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_CAN</name>
              <description>BackUp access can permission.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_PWM1</name>
              <description>BackUp access pwm1 permission.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_I2S1</name>
              <description>BackUp access i2s1 permission.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_UART2</name>
              <description>BackUp access uart2 permission.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_RWBT</name>
              <description>BackUp access rwbt permission.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_WIFIMAC</name>
              <description>BackUp access wifimac permission.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_PWR</name>
              <description>BackUp access pwr permission.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BACKUP_BUS_PMS_CONSTRAIN_4</name>
          <description>BackUp access peripherals permission configuration register 4.</description>
          <addressOffset>0x28C</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_USB_DEVICE</name>
              <description>BackUp access usb_device permission.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_USB_WRAP</name>
              <description>BackUp access usb_wrap permission.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_CRYPTO_PERI</name>
              <description>BackUp access crypto_peri permission.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_CRYPTO_DMA</name>
              <description>BackUp access crypto_dma permission.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_APB_ADC</name>
              <description>BackUp access apb_adc permission.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_LCD_CAM</name>
              <description>BackUp access lcd_cam permission.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_BT_PWR</name>
              <description>BackUp access bt_pwr permission.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_USB</name>
              <description>BackUp access usb permission.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_SYSTEM</name>
              <description>BackUp access system permission.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_SENSITIVE</name>
              <description>BackUp access sensitive permission.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_INTERRUPT</name>
              <description>BackUp access interrupt permission.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_DMA_COPY</name>
              <description>BackUp access dma_copy permission.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_CACHE_CONFIG</name>
              <description>BackUp access cache_config permission.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_AD</name>
              <description>BackUp access ad permission.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_DIO</name>
              <description>BackUp access dio permission.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_WORLD_CONTROLLER</name>
              <description>BackUp access world_controller permission.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BACKUP_BUS_PMS_CONSTRAIN_5</name>
          <description>BackUp access peripherals permission configuration register 5.</description>
          <addressOffset>0x290</addressOffset>
          <size>0x20</size>
          <resetValue>0x000007FF</resetValue>
          <fields>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_RTCFAST_SPLTADDR</name>
              <description>BackUp access rtcfast_spltaddr permission.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BACKUP_BUS_PMS_CONSTRAIN_6</name>
          <description>BackUp access peripherals permission configuration register 6.</description>
          <addressOffset>0x294</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000003F</resetValue>
          <fields>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_RTCFAST_L</name>
              <description>BackUp access rtcfast_l permission.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_CONSTRAIN_RTCFAST_H</name>
              <description>BackUp access rtcfast_h permission.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BACKUP_BUS_PMS_MONITOR_0</name>
          <description>BackUp permission report register 0.</description>
          <addressOffset>0x298</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BACKUP_BUS_PMS_MONITOR_LOCK</name>
              <description>Set 1 to lock BackUp permission report registers.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BACKUP_BUS_PMS_MONITOR_1</name>
          <description>BackUp permission report register 1.</description>
          <addressOffset>0x29C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>BACKUP_BUS_PMS_MONITOR_VIOLATE_CLR</name>
              <description>Set 1 to clear interrupt that BackUp initiate illegal access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_MONITOR_VIOLATE_EN</name>
              <description>Set 1 to enable interrupt that BackUp initiate illegal access.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BACKUP_BUS_PMS_MONITOR_2</name>
          <description>BackUp permission report register 2.</description>
          <addressOffset>0x2A0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BACKUP_BUS_PMS_MONITOR_VIOLATE_INTR</name>
              <description>Record BackUp illegal access interrupt state.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HTRANS</name>
              <description>Record htrans when BackUp initate illegal access.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HSIZE</name>
              <description>Record access type when BackUp initate illegal access.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HWRITE</name>
              <description>Record access direction when BackUp initiate illegal access.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BACKUP_BUS_PMS_MONITOR_3</name>
          <description>BackUp permission report register 3.</description>
          <addressOffset>0x2A4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BACKUP_BUS_PMS_MONITOR_VIOLATE_HADDR</name>
              <description>Record address information when BackUp initiate illegal access.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EDMA_BOUNDARY_LOCK</name>
          <description>EDMA boundary lock register.</description>
          <addressOffset>0x2A8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EDMA_BOUNDARY_LOCK</name>
              <description>Set 1 to lock EDMA boundary registers.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EDMA_BOUNDARY_0</name>
          <description>EDMA boundary 0 configuration</description>
          <addressOffset>0x2AC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EDMA_BOUNDARY_0</name>
              <description>This field is used to configure the boundary 0 of external RAM. The unit is 4K. For example, set this field to 0x80, then the address boundary 0 would be 0x3C080000 (0x3C000000 + 0x80 * 4K).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EDMA_BOUNDARY_1</name>
          <description>EDMA boundary 1 configuration</description>
          <addressOffset>0x2B0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00002000</resetValue>
          <fields>
            <field>
              <name>EDMA_BOUNDARY_1</name>
              <description>This field is used to configure the boundary 1 of external RAM. The unit is 4K. For example, set this field to 0x80, then the address boundary 0 would be 0x3C080000 (0x3C000000 + 0x80 * 4K).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EDMA_BOUNDARY_2</name>
          <description>EDMA boundary 2 configuration</description>
          <addressOffset>0x2B4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00002000</resetValue>
          <fields>
            <field>
              <name>EDMA_BOUNDARY_2</name>
              <description>This field is used to configure the boundary 2 of external RAM. The unit is 4K. For example, set this field to 0x80, then the address boundary 0 would be 0x3C080000 (0x3C000000 + 0x80 * 4K).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EDMA_PMS_SPI2_LOCK</name>
          <description>EDMA-SPI2 permission lock register.</description>
          <addressOffset>0x2B8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EDMA_PMS_SPI2_LOCK</name>
              <description>Set 1 to lock EDMA-SPI2 permission control registers.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EDMA_PMS_SPI2</name>
          <description>EDMA-SPI2 permission control register.</description>
          <addressOffset>0x2BC</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000000F</resetValue>
          <fields>
            <field>
              <name>ATTR1</name>
              <description>This field is used to configure the permission of SPI2 accessing address, which is larger than boundary 0 and less than boundary 1, through EDMA. Bit 0: set this bit to enable read permission. Bit 1: set this bit to enable write permission.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ATTR2</name>
              <description>This field is used to configure the permission of SPI2 accessing address, which is larger than boundary 1 and less than boundary 2, through EDMA. Bit 0: set this bit to enable read permission. Bit 1: set this bit to enable write permission.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EDMA_PMS_SPI3_LOCK</name>
          <description>EDMA-SPI3 permission lock register.</description>
          <addressOffset>0x2C0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EDMA_PMS_SPI3_LOCK</name>
              <description>Set 1 to lock EDMA-SPI3 permission control registers.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EDMA_PMS_SPI3</name>
          <description>EDMA-SPI3 permission control register.</description>
          <addressOffset>0x2C4</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000000F</resetValue>
          <fields>
            <field>
              <name>ATTR1</name>
              <description>This field is used to configure the permission of SPI3 accessing address, which is larger than boundary 0 and less than boundary 1, through EDMA. Bit 0: set this bit to enable read permission. Bit 1: set this bit to enable write permission.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ATTR2</name>
              <description>This field is used to configure the permission of SPI3 accessing address, which is larger than boundary 1 and less than boundary 2, through EDMA. Bit 0: set this bit to enable read permission. Bit 1: set this bit to enable write permission.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EDMA_PMS_UHCI0_LOCK</name>
          <description>EDMA-UHCI0 permission lock register.</description>
          <addressOffset>0x2C8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EDMA_PMS_UHCI0_LOCK</name>
              <description>Set 1 to lock EDMA-UHCI0 permission control registers.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EDMA_PMS_UHCI0</name>
          <description>EDMA-UHCI0 permission control register.</description>
          <addressOffset>0x2CC</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000000F</resetValue>
          <fields>
            <field>
              <name>ATTR1</name>
              <description>This field is used to configure the permission of UHCI0 accessing address, which is larger than boundary 0 and less than boundary 1, through EDMA. Bit 0: set this bit to enable read permission. Bit 1: set this bit to enable write permission.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ATTR2</name>
              <description>This field is used to configure the permission of UHCI0 accessing address, which is larger than boundary 1 and less than boundary 2, through EDMA. Bit 0: set this bit to enable read permission. Bit 1: set this bit to enable write permission.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EDMA_PMS_I2S0_LOCK</name>
          <description>EDMA-I2S0 permission lock register.</description>
          <addressOffset>0x2D0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EDMA_PMS_I2S0_LOCK</name>
              <description>Set 1 to lock EDMA-I2S0 permission control registers.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EDMA_PMS_I2S0</name>
          <description>EDMA-I2S0 permission control register.</description>
          <addressOffset>0x2D4</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000000F</resetValue>
          <fields>
            <field>
              <name>ATTR1</name>
              <description>This field is used to configure the permission of I2S0 accessing address, which is larger than boundary 0 and less than boundary 1, through EDMA. Bit 0: set this bit to enable read permission. Bit 1: set this bit to enable write permission.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ATTR2</name>
              <description>This field is used to configure the permission of I2S0 accessing address, which is larger than boundary 1 and less than boundary 2, through EDMA. Bit 0: set this bit to enable read permission. Bit 1: set this bit to enable write permission.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EDMA_PMS_I2S1_LOCK</name>
          <description>EDMA-I2S1 permission lock register.</description>
          <addressOffset>0x2D8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EDMA_PMS_I2S1_LOCK</name>
              <description>Set 1 to lock EDMA-I2S1 permission control registers.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EDMA_PMS_I2S1</name>
          <description>EDMA-I2S1 permission control register.</description>
          <addressOffset>0x2DC</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000000F</resetValue>
          <fields>
            <field>
              <name>ATTR1</name>
              <description>This field is used to configure the permission of I2S1 accessing address, which is larger than boundary 0 and less than boundary 1, through EDMA. Bit 0: set this bit to enable read permission. Bit 1: set this bit to enable write permission.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ATTR2</name>
              <description>This field is used to configure the permission of I2S1 accessing address, which is larger than boundary 1 and less than boundary 2, through EDMA. Bit 0: set this bit to enable read permission. Bit 1: set this bit to enable write permission.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EDMA_PMS_LCD_CAM_LOCK</name>
          <description>EDMA-LCD/CAM permission lock register.</description>
          <addressOffset>0x2E0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EDMA_PMS_LCD_CAM_LOCK</name>
              <description>Set 1 to lock EDMA-LCD/CAM permission control registers.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EDMA_PMS_LCD_CAM</name>
          <description>EDMA-LCD/CAM permission control register.</description>
          <addressOffset>0x2E4</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000000F</resetValue>
          <fields>
            <field>
              <name>ATTR1</name>
              <description>This field is used to configure the permission of LCD/CAM accessing address, which is larger than boundary 0 and less than boundary 1, through EDMA. Bit 0: set this bit to enable read permission. Bit 1: set this bit to enable write permission.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ATTR2</name>
              <description>This field is used to configure the permission of LCD/CAM accessing address, which is larger than boundary 1 and less than boundary 2, through EDMA. Bit 0: set this bit to enable read permission. Bit 1: set this bit to enable write permission.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EDMA_PMS_AES_LOCK</name>
          <description>EDMA-AES permission lock register.</description>
          <addressOffset>0x2E8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EDMA_PMS_AES_LOCK</name>
              <description>Set 1 to lock EDMA-AES permission control registers.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EDMA_PMS_AES</name>
          <description>EDMA-AES permission control register.</description>
          <addressOffset>0x2EC</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000000F</resetValue>
          <fields>
            <field>
              <name>ATTR1</name>
              <description>This field is used to configure the permission of AES accessing address, which is larger than boundary 0 and less than boundary 1, through EDMA. Bit 0: set this bit to enable read permission. Bit 1: set this bit to enable write permission.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ATTR2</name>
              <description>This field is used to configure the permission of AES accessing address, which is larger than boundary 1 and less than boundary 2, through EDMA. Bit 0: set this bit to enable read permission. Bit 1: set this bit to enable write permission.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EDMA_PMS_SHA_LOCK</name>
          <description>EDMA-SHA permission lock register.</description>
          <addressOffset>0x2F0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EDMA_PMS_SHA_LOCK</name>
              <description>Set 1 to lock EDMA-SHA permission control registers.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EDMA_PMS_SHA</name>
          <description>EDMA-SHA permission control register.</description>
          <addressOffset>0x2F4</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000000F</resetValue>
          <fields>
            <field>
              <name>ATTR1</name>
              <description>This field is used to configure the permission of SHA accessing address, which is larger than boundary 0 and less than boundary 1, through EDMA. Bit 0: set this bit to enable read permission. Bit 1: set this bit to enable write permission.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ATTR2</name>
              <description>This field is used to configure the permission of SHA accessing address, which is larger than boundary 1 and less than boundary 2, through EDMA. Bit 0: set this bit to enable read permission. Bit 1: set this bit to enable write permission.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EDMA_PMS_ADC_DAC_LOCK</name>
          <description>EDMA-ADC/DAC permission lock register.</description>
          <addressOffset>0x2F8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EDMA_PMS_ADC_DAC_LOCK</name>
              <description>Set 1 to lock EDMA-ADC/DAC permission control registers.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EDMA_PMS_ADC_DAC</name>
          <description>EDMA-ADC/DAC permission control register.</description>
          <addressOffset>0x2FC</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000000F</resetValue>
          <fields>
            <field>
              <name>ATTR1</name>
              <description>This field is used to configure the permission of ADC/DAC accessing address, which is larger than boundary 0 and less than boundary 1, through EDMA. Bit 0: set this bit to enable read permission. Bit 1: set this bit to enable write permission.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ATTR2</name>
              <description>This field is used to configure the permission of ADC/DAC accessing address, which is larger than boundary 1 and less than boundary 2, through EDMA. Bit 0: set this bit to enable read permission. Bit 1: set this bit to enable write permission.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EDMA_PMS_RMT_LOCK</name>
          <description>EDMA-RMT permission lock register.</description>
          <addressOffset>0x300</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EDMA_PMS_RMT_LOCK</name>
              <description>Set 1 to lock EDMA-RMT permission control registers.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EDMA_PMS_RMT</name>
          <description>EDMA-RMT permission control register.</description>
          <addressOffset>0x304</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000000F</resetValue>
          <fields>
            <field>
              <name>ATTR1</name>
              <description>This field is used to configure the permission of RMT accessing address, which is larger than boundary 0 and less than boundary 1, through EDMA. Bit 0: set this bit to enable read permission. Bit 1: set this bit to enable write permission.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ATTR2</name>
              <description>This field is used to configure the permission of RMT accessing address, which is larger than boundary 1 and less than boundary 2, through EDMA. Bit 0: set this bit to enable read permission. Bit 1: set this bit to enable write permission.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLOCK_GATE_REG</name>
          <description>Sensitive module clock gate configuration register.</description>
          <addressOffset>0x308</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>REG_CLK_EN</name>
              <description>Set 1 to enable clock gate function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_PMS</name>
          <description>RTC coprocessor permission register.</description>
          <addressOffset>0x30C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DIS_RTC_CPU</name>
              <description>Set 1 to disable rtc coprocessor.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>Sensitive version register.</description>
          <addressOffset>0xFFC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02101280</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>Sensitive Date register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SHA</name>
      <description>SHA (Secure Hash Algorithm) Accelerator</description>
      <groupName>SHA</groupName>
      <baseAddress>0x6003B000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xB0</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>SHA</name>
        <value>78</value>
      </interrupt>
      <registers>
        <register>
          <name>MODE</name>
          <description>Initial configuration register.</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MODE</name>
              <description>sha mode</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>T_STRING</name>
          <description>SHA 512/t configuration register 0.</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>T_STRING</name>
              <description>sha t_string(used if and only if mode == sha_256/t)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>T_LENGTH</name>
          <description>SHA 512/t configuration register 1.</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>T_LENGTH</name>
              <description>sha t_length(used if and only if mode == sha_256/t)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_BLOCK_NUM</name>
          <description>DMA configuration register 0.</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_BLOCK_NUM</name>
              <description>dma-sha block number</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>START</name>
          <description>Typical SHA configuration register 0.</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>START</name>
              <description>reserved.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONTINUE</name>
          <description>Typical SHA configuration register 1.</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CONTINUE</name>
              <description>reserved.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BUSY</name>
          <description>Busy register.</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>STATE</name>
              <description>sha busy state. 1'b0: idle 1'b1: busy</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_START</name>
          <description>DMA configuration register 1.</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_START</name>
              <description>start dma-sha</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CONTINUE</name>
          <description>DMA configuration register 2.</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_CONTINUE</name>
              <description>continue dma-sha</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLEAR_IRQ</name>
          <description>Interrupt clear register.</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CLEAR_INTERRUPT</name>
              <description>clear sha interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IRQ_ENA</name>
          <description>Interrupt enable register.</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INTERRUPT_ENA</name>
              <description>sha interrupt enable register. 1'b0: disable(default) 1'b1: enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>Date register.</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <resetValue>0x20190402</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>sha date information/ sha version information</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>64</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>H_MEM[%s]</name>
          <description>Sha H memory which contains intermediate hash or finial hash.</description>
          <addressOffset>0x40</addressOffset>
          <size>0x8</size>
        </register>
        <register>
          <dim>64</dim>
          <dimIncrement>0x1</dimIncrement>
          <name>M_MEM[%s]</name>
          <description>Sha M memory which contains message.</description>
          <addressOffset>0x80</addressOffset>
          <size>0x8</size>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SPI0</name>
      <description>SPI (Serial Peripheral Interface) Controller</description>
      <groupName>SPI0</groupName>
      <baseAddress>0x60003000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x98</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>SPI_MEM_REJECT</name>
        <value>60</value>
      </interrupt>
      <registers>
        <register>
          <name>CTRL</name>
          <description>SPI0 control register.</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <resetValue>0x002C2000</resetValue>
          <fields>
            <field>
              <name>FDUMMY_OUT</name>
              <description>In the DUMMY phase the signal level of SPI bus is output by the SPI0 controller.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FDOUT_OCT</name>
              <description>Set this bit to enable 8-bit-mode(8-bm) in DOUT phase.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FDIN_OCT</name>
              <description>Set this bit to enable 8-bit-mode(8-bm) in DIN phase.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FADDR_OCT</name>
              <description>Set this bit to enable 8-bit-mode(8-bm) in ADDR phase.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FCMD_DUAL</name>
              <description>Set this bit to enable 2-bit-mode(2-bm) in CMD phase.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FCMD_QUAD</name>
              <description>Set this bit to enable 4-bit-mode(4-bm) in CMD phase.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FCMD_OCT</name>
              <description>Set this bit to enable 8-bit-mode(8-bm) in CMD phase.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FASTRD_MODE</name>
              <description>This bit should be set when SPI_MEM_FREAD_QIO, SPI_MEM_FREAD_DIO, SPI_MEM_FREAD_QUAD or SPI_MEM_FREAD_DUAL is set.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FREAD_DUAL</name>
              <description>In hardware 0x3B read operation, DIN phase apply 2 signals. 1: enable 0: disable.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>Q_POL</name>
              <description>The bit is used to set MISO line polarity, 1: high 0, low</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_POL</name>
              <description>The bit is used to set MOSI line polarity, 1: high 0, low</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FREAD_QUAD</name>
              <description>In hardware 0x6B read operation, DIN phase apply 4 signals(4-bit-mode). 1: enable 0: disable.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WP</name>
              <description>Write protect signal output when SPI is idle.  1: output high, 0: output low.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FREAD_DIO</name>
              <description>In hardware 0xBB read operation, ADDR phase and DIN phase apply 2 signals(2-bit-mode). 1: enable 0: disable.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FREAD_QIO</name>
              <description>In hardware 0xEB read operation, ADDR phase and DIN phase apply 4 signals(4-bit-mode). 1: enable 0: disable.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTRL1</name>
          <description>SPI0 control 1 register.</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CLK_MODE</name>
              <description>SPI Bus clock (SPI_CLK) mode bits. 0: SPI Bus clock (SPI_CLK) is off when CS inactive 1: SPI_CLK is delayed one cycle after SPI_CS inactive 2: SPI_CLK is delayed two cycles after SPI_CS inactive 3: SPI_CLK is always on.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFO_RST</name>
              <description>SPI0 RX FIFO reset signal. Set this bit and clear it before SPI0 transfer starts.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTRL2</name>
          <description>SPI0 control 2 register.</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <resetValue>0x00002C21</resetValue>
          <fields>
            <field>
              <name>CS_SETUP_TIME</name>
              <description>(cycles-1) of PREP phase by SPI_CLK, which is the SPI_CS setup time. These bits are combined with SPI_MEM_CS_SETUP bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CS_HOLD_TIME</name>
              <description>SPI Bus CS (SPI_CS) signal is delayed to inactive by SPI Bus clock (SPI_CLK), which is the SPI_CS hold time in non-ECC mode. These bits are combined with SPI_MEM_CS_HOLD bit.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ECC_CS_HOLD_TIME</name>
              <description>SPI_MEM_CS_HOLD_TIME + SPI_MEM_ECC_CS_HOLD_TIME is the SPI_CS hold cycle in ECC mode when accessed flash.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ECC_SKIP_PAGE_CORNER</name>
              <description>1: MSPI skips page corner when accesses flash. 0: Not skip page corner when accesses flash.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ECC_16TO18_BYTE_EN</name>
              <description>Set this bit to enable MSPI ECC 16 bytes data with 2 ECC bytes mode when accesses flash.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CS_HOLD_DELAY</name>
              <description>These bits are used to set the minimum CS high time tSHSL between SPI burst transfer when accesses to flash. tSHSL is (SPI_MEM_CS_HOLD_DELAY[5:0] + 1) MSPI core clock cycles.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNC_RESET</name>
              <description>The FSM will be reset.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLOCK</name>
          <description>SPI_CLK clock division register when SPI0 accesses to flash.</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <resetValue>0x00030103</resetValue>
          <fields>
            <field>
              <name>CLKCNT_L</name>
              <description>It must equal to the value of SPI_MEM_CLKCNT_N.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKCNT_H</name>
              <description>It must be a floor value of ((SPI_MEM_CLKCNT_N+1)/2-1).</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKCNT_N</name>
              <description>When SPI0 accesses flash, f_SPI_CLK = f_MSPI_CORE_CLK/(SPI_MEM_CLKCNT_N+1)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EQU_SYSCLK</name>
              <description>When SPI0 accesses flash, set this bit in 1-division mode, f_SPI_CLK = f_MSPI_CORE_CLK.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER</name>
          <description>SPI0 user register.</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CS_HOLD</name>
              <description>Set this bit to keep SPI_CS low when MSPI is in DONE state.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CS_SETUP</name>
              <description>Set this bit to keep SPI_CS low when MSPI is in PREP state.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK_OUT_EDGE</name>
              <description>This bit, combined with SPI_MEM_CK_IDLE_EDGE bit, is used to change the clock mode 0~3 of SPI_CLK.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_DUMMY_IDLE</name>
              <description>SPI_CLK is disabled(No clock edges) in DUMMY phase when the bit is enable.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_DUMMY</name>
              <description>This bit enable the DUMMY phase of an SPI transfer.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER1</name>
          <description>SPI0 user1 register.</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <resetValue>0x5C000007</resetValue>
          <fields>
            <field>
              <name>USR_DUMMY_CYCLELEN</name>
              <description>The SPI_CLK cycle length minus 1 of DUMMY phase.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_ADDR_BITLEN</name>
              <description>The length in bits of ADDR phase. The register value shall be (bit_num-1).</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER2</name>
          <description>SPI0 user2 register.</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <resetValue>0x70000000</resetValue>
          <fields>
            <field>
              <name>USR_COMMAND_VALUE</name>
              <description>The value of user defined(USR) command.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_COMMAND_BITLEN</name>
              <description>The length in bits of CMD phase. The register value shall be (bit_num-1)</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_STATUS</name>
          <description>SPI0 read control register.</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>WB_MODE</name>
              <description>Mode bits in the flash fast read mode  it is combined with SPI_MEM_FASTRD_MODE bit.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXT_ADDR</name>
          <description>SPI0 extended address register.</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EXT_ADDR</name>
              <description>The register are the higher 32bits in the 64 bits address mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MISC</name>
          <description>SPI0 misc register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>FSUB_PIN</name>
              <description>Flash is connected to SPI SUBPIN bus.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SSUB_PIN</name>
              <description>Ext_RAM is connected to SPI SUBPIN bus.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK_IDLE_EDGE</name>
              <description>1: SPI_CLK line is high when idle. 0: SPI_CLK line is low when idle</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CS_KEEP_ACTIVE</name>
              <description>SPI_CS line keep low when the bit is set.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_FCTRL</name>
          <description>SPI0 external RAM bit mode control register.</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CACHE_REQ_EN</name>
              <description>Set this bit to enable Cache's access and SPI0's transfer.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CACHE_USR_CMD_4BYTE</name>
              <description>Set this bit to enable SPI0 read flash with 32 bits address. The value of SPI_MEM_USR_ADDR_BITLEN should be 31.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CACHE_FLASH_USR_CMD</name>
              <description>1: The command value of SPI0 reads flash is SPI_MEM_USR_COMMAND_VALUE. 0: Hardware read command value, controlled by SPI_MEM_FREAD_QIO, SPI_MEM_FREAD_DIO, SPI_MEM_FREAD_QUAD, SPI_MEM_FREAD_DUAL and SPI_MEM_FASTRD_MODE bits.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FDIN_DUAL</name>
              <description>When SPI0 accesses to flash, set this bit to enable 2-bm in DIN phase.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FDOUT_DUAL</name>
              <description>When SPI0 accesses to flash, set this bit to enable 2-bm in DOUT phase.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FADDR_DUAL</name>
              <description>When SPI0 accesses to flash, set this bit to enable 2-bm in ADDR phase.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FDIN_QUAD</name>
              <description>When SPI0 accesses to flash, set this bit to enable 4-bm in DIN phase.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FDOUT_QUAD</name>
              <description>When SPI0 accesses to flash, set this bit to enable 4-bm in DOUT phase.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FADDR_QUAD</name>
              <description>When SPI0 accesses to flash, set this bit to enable 4-bm in ADDR phase.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_SCTRL</name>
          <description>SPI0 external RAM control register</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <resetValue>0x0055C070</resetValue>
          <fields>
            <field>
              <name>CACHE_USR_SCMD_4BYTE</name>
              <description>Set this bit to enable SPI0 read Ext_RAM with 32 bits address. The value of SPI_MEM_SRAM_ADDR_BITLEN should be 31.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_SRAM_DIO</name>
              <description>Set the bit to enable 2-bm in all the phases of SPI0 Ext_RAM transfer.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_SRAM_QIO</name>
              <description>Set the bit to enable QPI mode in all SPI0 Ext_RAM transfer.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_WR_SRAM_DUMMY</name>
              <description>When SPI0 accesses to Ext_RAM, set this bit to enable DUMMY phase in write operations.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_RD_SRAM_DUMMY</name>
              <description>When SPI0 accesses to Ext_RAM, set this bit to enable DUMMY phase in read operations.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CACHE_SRAM_USR_RCMD</name>
              <description>1: The command value of SPI0 read Ext_RAM is SPI_MEM_CACHE_SRAM_USR_WR_CMD_VALUE. 0: The value is 0x2.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SRAM_RDUMMY_CYCLELEN</name>
              <description>When SPI0 accesses to Ext_RAM, it is the SPI_CLK cycles minus 1 of DUMMY phase in read data transfer.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SRAM_ADDR_BITLEN</name>
              <description>When SPI0 accesses to Ext_RAM, it is the length in bits of ADDR phase. The register value shall be (bit_num-1).</description>
              <bitOffset>14</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CACHE_SRAM_USR_WCMD</name>
              <description>1: The command value of SPI0 write Ext_RAM is SPI_MEM_CACHE_SRAM_USR_RD_CMD_VALUE. 0: The value is 0x3.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SRAM_OCT</name>
              <description>Set the bit to enable OPI mode in all SPI0 Ext_RAM transfer.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SRAM_WDUMMY_CYCLELEN</name>
              <description>When SPI0 accesses to Ext_RAM, it is the SPI_CLK cycles minus 1 of DUMMY phase in write data transfer.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRAM_CMD</name>
          <description>SPI0 external RAM mode control register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SCLK_MODE</name>
              <description>SPI_CLK mode bits  when SPI0 accesses to Ext_RAM. 0: SPI_CLK is off when CS inactive 1: SPI_CLK is delayed one cycle after CS inactive 2: SPI_CLK is delayed two cycles after CS inactive 3: SPI_CLK is always on.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SWB_MODE</name>
              <description>Mode bits when SPI0 accesses to Ext_RAM.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIN_DUAL</name>
              <description>When SPI0 accesses to Ext_RAM, set this bit to enable 2-bm in DIN phase.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDOUT_DUAL</name>
              <description>When SPI0 accesses to Ext_RAM, set this bit to enable 2-bm in DOUT phase.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SADDR_DUAL</name>
              <description>When SPI0 accesses to Ext_RAM, set this bit to enable 2-bm in ADDR phase.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCMD_DUAL</name>
              <description>When SPI0 accesses to Ext_RAM, set this bit to enable 2-bm in CMD phase.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIN_QUAD</name>
              <description>When SPI0 accesses to Ext_RAM, set this bit to enable 4-bm in DIN phase.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDOUT_QUAD</name>
              <description>When SPI0 accesses to Ext_RAM, set this bit to enable 4-bm in DOUT phase.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SADDR_QUAD</name>
              <description>When SPI0 accesses to Ext_RAM, set this bit to enable 4-bm in ADDR phase.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCMD_QUAD</name>
              <description>When SPI0 accesses to Ext_RAM, set this bit to enable 4-bm in CMD phase.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIN_OCT</name>
              <description>When SPI0 accesses to Ext_RAM, set this bit to enable 8-bm in DIN phase.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDOUT_OCT</name>
              <description>When SPI0 accesses to Ext_RAM, set this bit to enable 8-bm in DOUT phase.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SADDR_OCT</name>
              <description>When SPI0 accesses to Ext_RAM, set this bit to enable 8-bm in ADDR phase.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCMD_OCT</name>
              <description>When SPI0 accesses to Ext_RAM, set this bit to enable 8-bm in CMD phase.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDUMMY_OUT</name>
              <description>When SPI0 accesses to Ext_RAM, in the DUMMY phase the signal level of SPI bus is output by the SPI0 controller.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRAM_DRD_CMD</name>
          <description>SPI0 external RAM DDR read command control register</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CACHE_SRAM_USR_RD_CMD_VALUE</name>
              <description>When SPI0 reads Ext_RAM, it is the command value of CMD phase.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CACHE_SRAM_USR_RD_CMD_BITLEN</name>
              <description>When SPI0 reads Ext_RAM, it is the length in bits of CMD phase. The register value shall be (bit_num-1).</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRAM_DWR_CMD</name>
          <description>SPI0 external RAM DDR write command control register</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CACHE_SRAM_USR_WR_CMD_VALUE</name>
              <description>When SPI0 writes Ext_RAM, it is the command value of CMD phase.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CACHE_SRAM_USR_WR_CMD_BITLEN</name>
              <description>When SPI0 writes Ext_RAM, it is the length in bits of CMD phase. The register value shall be (bit_num-1).</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRAM_CLK</name>
          <description>SPI_CLK clock division register when SPI0 accesses to Ext_RAM.</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <resetValue>0x00030103</resetValue>
          <fields>
            <field>
              <name>SCLKCNT_L</name>
              <description>It must equal to the value of SPI_MEM_SCLKCNT_N.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLKCNT_H</name>
              <description>It must be a floor value of ((SPI_MEM_SCLKCNT_N+1)/2-1).</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLKCNT_N</name>
              <description>When SPI0 accesses to Ext_RAM, f_SPI_CLK = f_MSPI_CORE_CLK/(SPI_MEM_SCLKCNT_N+1)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLK_EQU_SYSCLK</name>
              <description>When SPI0 accesses to Ext_RAM, set this bit in 1-division mode, f_SPI_CLK = f_MSPI_CORE_CLK.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FSM</name>
          <description>SPI0 state machine(FSM) status register.</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ST</name>
              <description>The status of SPI0 state machine. 0: idle state(IDLE), 1: preparation state(PREP), 2: send command state(CMD), 3: send address state(ADDR), 4: red data state(DIN), 5:write data state(DOUT), 6: wait state(DUMMY), 7: done state(DONE).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMING_CALI</name>
          <description>SPI0 timing compensation register when accesses to flash.</description>
          <addressOffset>0xA8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMING_CLK_ENA</name>
              <description>Set this bit to power on HCLK. When PLL is powered on, the frequency of HCLK equals to that of PLL. Otherwise, the frequency equals to that of XTAL.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMING_CALI</name>
              <description>Set this bit to add extra SPI_CLK cycles in DUMMY phase for all reading operations.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EXTRA_DUMMY_CYCLELEN</name>
              <description>Extra SPI_CLK cycles added in DUMMY phase for timing compensation, when SPI0 accesses to flash. Active when SPI_MEM_TIMING_CALI bit is set.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIN_MODE</name>
          <description>MSPI input timing delay mode control register when accesses to flash.</description>
          <addressOffset>0xAC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DIN0_MODE</name>
              <description>SPI_D input delay mode. 0: No delay. 1: Delay for (SPI_MEM_DIN0_NUM+1) cycles at MSPI_CORE_CLK negative edge. 2: Delay for (SPI_MEM_DIN0_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK positive edge. 3: Delay for (SPI_MEM_DIN0_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK negative edge. 4: Delay for (SPI_MEM_DIN0_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK positive edge. 5: Delay for (SPI_MEM_DIN0_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN1_MODE</name>
              <description>SPI_Q input delay mode. 0: No delay. 1: Delay for (SPI_MEM_DIN3_NUM+1) cycles at MSPI_CORE_CLK negative edge. 2: Delay for (SPI_MEM_DIN3_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK positive edge. 3: Delay for (SPI_MEM_DIN3_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK negative edge. 4: Delay for (SPI_MEM_DIN3_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK positive edge. 5: Delay for (SPI_MEM_DIN3_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN2_MODE</name>
              <description>SPI_WP input delay mode. 0: No delay. 1: Delay for (SPI_MEM_DIN6_NUM+1) cycles at MSPI_CORE_CLK negative edge. 2: Delay for (SPI_MEM_DIN6_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK positive edge. 3: Delay for (SPI_MEM_DIN6_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK negative edge. 4: Delay for (SPI_MEM_DIN6_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK positive edge. 5: Delay for (SPI_MEM_DIN6_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN3_MODE</name>
              <description>SPI_HD input delay mode. 0: No delay. 1: Delay for (SPI_MEM_DIN9_NUM+1) cycles at MSPI_CORE_CLK negative edge. 2: Delay for (SPI_MEM_DIN9_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK positive edge. 3: Delay for (SPI_MEM_DIN9_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK negative edge. 4: Delay for (SPI_MEM_DIN9_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK positive edge. 5: Delay for (SPI_MEM_DIN9_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN4_MODE</name>
              <description>SPI_IO4 input delay mode. 0: No delay. 1: Delay for (SPI_MEM_DIN12_NUM+1) cycles at MSPI_CORE_CLK negative edge. 2: Delay for (SPI_MEM_DIN12_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK positive edge. 3: Delay for (SPI_MEM_DIN12_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK negative edge. 4: Delay for (SPI_MEM_DIN12_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK positive edge. 5: Delay for (SPI_MEM_DIN12_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN5_MODE</name>
              <description>SPI_IO5 input delay mode. 0: No delay. 1: Delay for (SPI_MEM_DIN15_NUM+1) cycles at MSPI_CORE_CLK negative edge. 2: Delay for (SPI_MEM_DIN15_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK positive edge. 3: Delay for (SPI_MEM_DIN15_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK negative edge. 4: Delay for (SPI_MEM_DIN15_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK positive edge. 5: Delay for (SPI_MEM_DIN15_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN6_MODE</name>
              <description>SPI_IO6 input delay mode. 0: No delay. 1: Delay for (SPI_MEM_DIN18_NUM+1) cycles at MSPI_CORE_CLK negative edge. 2: Delay for (SPI_MEM_DIN18_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK positive edge. 3: Delay for (SPI_MEM_DIN18_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK negative edge. 4: Delay for (SPI_MEM_DIN18_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK positive edge. 5: Delay for (SPI_MEM_DIN18_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN7_MODE</name>
              <description>SPI_IO7 input delay mode. 0: No delay. 1: Delay for (SPI_MEM_DIN21_NUM+1) cycles at MSPI_CORE_CLK negative edge. 2: Delay for (SPI_MEM_DIN21_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK positive edge. 3: Delay for (SPI_MEM_DIN21_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK negative edge. 4: Delay for (SPI_MEM_DIN21_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK positive edge. 5: Delay for (SPI_MEM_DIN21_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DINS_MODE</name>
              <description>SPI_DQS input delay mode. 0: No delay. 1: Delay for (SPI_MEM_DINS_NUM+1) cycles at MSPI_CORE_CLK negative edge. 2: Delay for (SPI_MEM_DINS_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK positive edge. 3: Delay for (SPI_MEM_DINS_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK negative edge. 4: Delay for (SPI_MEM_DINS_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK positive edge. 5: Delay for (SPI_MEM_DINS_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIN_NUM</name>
          <description>MSPI input timing delay number control register when accesses to flash.</description>
          <addressOffset>0xB0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DIN0_NUM</name>
              <description>SPI_D input delay number.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN1_NUM</name>
              <description>SPI_Q input delay number.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN2_NUM</name>
              <description>SPI_WP input delay number.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN3_NUM</name>
              <description>SPI_HD input delay number.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN4_NUM</name>
              <description>SPI_IO4 input delay number.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN5_NUM</name>
              <description>SPI_IO5 input delay number.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN6_NUM</name>
              <description>SPI_IO6 input delay number.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN7_NUM</name>
              <description>SPI_IO7 input delay number.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DINS_NUM</name>
              <description>SPI_DQS input delay number.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOUT_MODE</name>
          <description>MSPI output timing delay mode control register when accesses to flash.</description>
          <addressOffset>0xB4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DOUT0_MODE</name>
              <description>SPI_D output delay mode. 0: No delay. 1: Delay one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT1_MODE</name>
              <description>SPI_Q output delay mode. 0: No delay. 1: Delay one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT2_MODE</name>
              <description>SPI_WP output delay mode. 0: No delay. 1: Delay one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT3_MODE</name>
              <description>SPI_HD output delay mode. 0: No delay. 1: Delay one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT4_MODE</name>
              <description>SPI_IO4 output delay mode. 0: No delay. 1: Delay one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT5_MODE</name>
              <description>SPI_IO5 output delay mode. 0: No delay. 1: Delay one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT6_MODE</name>
              <description>SPI_IO6 output delay mode. 0: No delay. 1: Delay one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT7_MODE</name>
              <description>SPI_IO7 output delay mode. 0: No delay. 1: Delay one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUTS_MODE</name>
              <description>SPI_DQS output delay mode. 0: No delay. 1: Delay one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_SMEM_TIMING_CALI</name>
          <description>SPI0 Ext_RAM timing compensation register.</description>
          <addressOffset>0xBC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SPI_SMEM_TIMING_CLK_ENA</name>
              <description>Set this bit to power on HCLK. When PLL is powered on, the frequency of HCLK equals to that of PLL. Otherwise, the frequency equals to that of XTAL.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_TIMING_CALI</name>
              <description>Set this bit to add extra SPI_CLK cycles in DUMMY phase for all reading operations.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_EXTRA_DUMMY_CYCLELEN</name>
              <description>Extra SPI_CLK cycles added in DUMMY phase for timing compensation, when SPI0 accesses to Ext_RAM. Active when SPI_SMEM_TIMING_CALI bit is set.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_SMEM_DIN_MODE</name>
          <description>MSPI input timing delay mode control register when accesses to Ext_RAM.</description>
          <addressOffset>0xC0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SPI_SMEM_DIN0_MODE</name>
              <description>SPI_D input delay mode. 0: No delay. 1: Delay for (SPI_SMEM_DIN0_NUM+1) cycles at MSPI_CORE_CLK negative edge. 2: Delay for (SPI_SMEM_DIN0_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK positive edge. 3: Delay for (SPI_SMEM_DIN0_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK negative edge. 4: Delay for (SPI_SMEM_DIN0_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK positive edge. 5: Delay for (SPI_SMEM_DIN0_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_DIN1_MODE</name>
              <description>SPI_Q input delay mode. 0: No delay. 1: Delay for (SPI_SMEM_DIN3_NUM+1) cycles at MSPI_CORE_CLK negative edge. 2: Delay for (SPI_SMEM_DIN3_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK positive edge. 3: Delay for (SPI_SMEM_DIN3_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK negative edge. 4: Delay for (SPI_SMEM_DIN3_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK positive edge. 5: Delay for (SPI_SMEM_DIN3_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_DIN2_MODE</name>
              <description>SPI_WP input delay mode. 0: No delay. 1: Delay for (SPI_SMEM_DIN6_NUM+1) cycles at MSPI_CORE_CLK negative edge. 2: Delay for (SPI_SMEM_DIN6_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK positive edge. 3: Delay for (SPI_SMEM_DIN6_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK negative edge. 4: Delay for (SPI_SMEM_DIN6_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK positive edge. 5: Delay for (SPI_SMEM_DIN6_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_DIN3_MODE</name>
              <description>SPI_HD input delay mode. 0: No delay. 1: Delay for (SPI_SMEM_DIN9_NUM+1) cycles at MSPI_CORE_CLK negative edge. 2: Delay for (SPI_SMEM_DIN9_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK positive edge. 3: Delay for (SPI_SMEM_DIN9_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK negative edge. 4: Delay for (SPI_SMEM_DIN9_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK positive edge. 5: Delay for (SPI_SMEM_DIN9_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_DIN4_MODE</name>
              <description>SPI_IO4 input delay mode. 0: No delay. 1: Delay for (SPI_SMEM_DIN12_NUM+1) cycles at MSPI_CORE_CLK negative edge. 2: Delay for (SPI_SMEM_DIN12_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK positive edge. 3: Delay for (SPI_SMEM_DIN12_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK negative edge. 4: Delay for (SPI_SMEM_DIN12_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK positive edge. 5: Delay for (SPI_SMEM_DIN12_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_DIN5_MODE</name>
              <description>SPI_IO5 input delay mode. 0: No delay. 1: Delay for (SPI_SMEM_DIN15_NUM+1) cycles at MSPI_CORE_CLK negative edge. 2: Delay for (SPI_SMEM_DIN15_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK positive edge. 3: Delay for (SPI_SMEM_DIN15_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK negative edge. 4: Delay for (SPI_SMEM_DIN15_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK positive edge. 5: Delay for (SPI_SMEM_DIN15_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_DIN6_MODE</name>
              <description>SPI_IO6 input delay mode. 0: No delay. 1: Delay for (SPI_SMEM_DIN18_NUM+1) cycles at MSPI_CORE_CLK negative edge. 2: Delay for (SPI_SMEM_DIN18_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK positive edge. 3: Delay for (SPI_SMEM_DIN18_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK negative edge. 4: Delay for (SPI_SMEM_DIN18_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK positive edge. 5: Delay for (SPI_SMEM_DIN18_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_DIN7_MODE</name>
              <description>SPI_IO7 input delay mode. 0: No delay. 1: Delay for (SPI_SMEM_DIN21_NUM+1) cycles at MSPI_CORE_CLK negative edge. 2: Delay for (SPI_SMEM_DIN21_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK positive edge. 3: Delay for (SPI_SMEM_DIN21_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK negative edge. 4: Delay for (SPI_SMEM_DIN21_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK positive edge. 5: Delay for (SPI_SMEM_DIN21_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_DINS_MODE</name>
              <description>SPI_DQS input delay mode. 0: No delay. 1: Delay for (SPI_SMEM_DINS_NUM+1) cycles at MSPI_CORE_CLK negative edge. 2: Delay for (SPI_SMEM_DINS_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK positive edge. 3: Delay for (SPI_SMEM_DINS_NUM+1) cycles at HCLK positive edge and one cycle at MSPI_CORE_CLK negative edge. 4: Delay for (SPI_SMEM_DINS_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK positive edge. 5: Delay for (SPI_SMEM_DINS_NUM+1) cycles at HCLK negative edge and one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_SMEM_DIN_NUM</name>
          <description>MSPI input timing delay number control register when accesses to Ext_RAM.</description>
          <addressOffset>0xC4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SPI_SMEM_DIN0_NUM</name>
              <description>SPI_D input delay number.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_DIN1_NUM</name>
              <description>SPI_Q input delay number.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_DIN2_NUM</name>
              <description>SPI_WP input delay number.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_DIN3_NUM</name>
              <description>SPI_HD input delay number.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_DIN4_NUM</name>
              <description>SPI_IO4 input delay number.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_DIN5_NUM</name>
              <description>SPI_IO5 input delay number.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_DIN6_NUM</name>
              <description>SPI_IO6 input delay number.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_DIN7_NUM</name>
              <description>SPI_IO7 input delay number.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_DINS_NUM</name>
              <description>SPI_DQS input delay number.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_SMEM_DOUT_MODE</name>
          <description>MSPI output timing delay mode control register when accesses to Ext_RAM.</description>
          <addressOffset>0xC8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SPI_SMEM_DOUT0_MODE</name>
              <description>SPI_D output delay mode. 0: No delay. 1: Delay one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_DOUT1_MODE</name>
              <description>SPI_Q output delay mode. 0: No delay. 1: Delay one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_DOUT2_MODE</name>
              <description>SPI_WP output delay mode. 0: No delay. 1: Delay one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_DOUT3_MODE</name>
              <description>SPI_HD output delay mode. 0: No delay. 1: Delay one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_DOUT4_MODE</name>
              <description>SPI_IO4 output delay mode. 0: No delay. 1: Delay one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_DOUT5_MODE</name>
              <description>SPI_IO5 output delay mode. 0: No delay. 1: Delay one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_DOUT6_MODE</name>
              <description>SPI_IO6 output delay mode. 0: No delay. 1: Delay one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_DOUT7_MODE</name>
              <description>SPI_IO7 output delay mode. 0: No delay. 1: Delay one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_DOUTS_MODE</name>
              <description>SPI_DQS output delay mode. 0: No delay. 1: Delay one cycle at MSPI_CORE_CLK negative edge.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ECC_CTRL</name>
          <description>MSPI ECC control register</description>
          <addressOffset>0xCC</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000000A</resetValue>
          <fields>
            <field>
              <name>ECC_ERR_INT_NUM</name>
              <description>Set the error times of MSPI ECC read to generate MSPI SPI_MEM_ECC_ERR_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_ECC_ERR_INT_EN</name>
              <description>Set this bit to calculate the error times of MSPI ECC read when accesses to flash.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ECC_ERR_ADDR</name>
          <description>MSPI ECC error address register</description>
          <addressOffset>0xD0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ECC_ERR_ADDR</name>
              <description>These bits show the first MSPI ECC error address when SPI_FMEM_ECC_ERR_INT_EN/SPI_SMEM_ECC_ERR_INT_EN is set and accessed to flash/Ext_RAM, including ECC byte error and data error. It is cleared by when  SPI_MEM_ECC_ERR_INT_CLR bit is set.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ECC_ERR_BIT</name>
          <description>MSPI ECC error bits register</description>
          <addressOffset>0xD4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ECC_DATA_ERR_BIT</name>
              <description>It records the first ECC data error bit number when SPI_FMEM_ECC_ERR_INT_EN/SPI_SMEM_ECC_ERR_INT_EN is set and accessed to flash/Ext_RAM. The value ranges from 0~127, corresponding to the bit number in 16 data bytes. It is cleared by SPI_MEM_ECC_ERR_INT_CLR bit.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_CHK_ERR_BIT</name>
              <description>When SPI_MEM_ECC_BYTE_ERR is set, these bits show the error bit number of ECC byte.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_BYTE_ERR</name>
              <description>It records the first ECC byte error when SPI_FMEM_ECC_ERR_INT_EN/SPI_SMEM_ECC_ERR_INT_EN is set and accessed to flash/Ext_RAM. It is cleared by SPI_MEM_ECC_ERR_INT_CLR bit.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_ERR_CNT</name>
              <description>This bits show the error times of MSPI ECC read, including ECC byte error and data byte error. It is cleared by when  SPI_MEM_ECC_ERR_INT_CLR bit is set.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_SMEM_AC</name>
          <description>MSPI external RAM ECC and SPI CS timing control register</description>
          <addressOffset>0xDC</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000B084</resetValue>
          <fields>
            <field>
              <name>SPI_SMEM_CS_SETUP</name>
              <description>Set this bit to keep SPI_CS low when MSPI is in PREP state.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_CS_HOLD</name>
              <description>Set this bit to keep SPI_CS low when MSPI is in DONE state.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_CS_SETUP_TIME</name>
              <description>(cycles-1) of PREP phase by SPI_CLK, which is the SPI_CS setup time. These bits are combined with SPI_MEM_CS_SETUP bit.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_CS_HOLD_TIME</name>
              <description>SPI Bus CS (SPI_CS) signal is delayed to inactive by SPI Bus clock (SPI_CLK), which is the SPI_CS hold time in non-ECC mode. These bits are combined with SPI_MEM_CS_HOLD bit.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_ECC_CS_HOLD_TIME</name>
              <description>SPI_SMEM_CS_HOLD_TIME + SPI_SMEM_ECC_CS_HOLD_TIME is the MSPI CS hold cycles in ECC mode when accesses to external RAM.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_ECC_SKIP_PAGE_CORNER</name>
              <description>1: MSPI skips page corner when accesses to external RAM. 0: Not skip page corner when accesses to external RAM.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_ECC_16TO18_BYTE_EN</name>
              <description>Set this bit to enable MSPI ECC 16 bytes data with 2 ECC bytes mode when accesses to external RAM.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_ECC_ERR_INT_EN</name>
              <description>Set this bit to calculate the error times of MSPI ECC read when accesses to external RAM.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_CS_HOLD_DELAY</name>
              <description>These bits are used to set the minimum CS high time tSHSL between SPI burst transfer when accesses to external RAM. tSHSL is (SPI_SMEM_CS_HOLD_DELAY[5:0] + 1) MSPI core clock cycles.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DDR</name>
          <description>SPI0 flash DDR mode control register</description>
          <addressOffset>0xE0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00003020</resetValue>
          <fields>
            <field>
              <name>SPI_FMEM_DDR_EN</name>
              <description>1: in ddr mode,  0 in sdr mode</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_VAR_DUMMY</name>
              <description>Set the bit to enable variable dummy cycle in DDR mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_DDR_RDAT_SWP</name>
              <description>Set the bit to reorder RX data of the word in DDR mode.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_DDR_WDAT_SWP</name>
              <description>Set the bit to swap TX data of a word in DDR mode.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_DDR_CMD_DIS</name>
              <description>the bit is used to disable dual edge in CMD phase when ddr mode.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_OUTMINBYTELEN</name>
              <description>It is the minimum output data length in the panda device.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_TX_DDR_MSK_EN</name>
              <description>Set this bit to mask the first or the last byte in MSPI ECC DDR write mode, when accesses to flash.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_RX_DDR_MSK_EN</name>
              <description>Set this bit to mask the first or the last byte in MSPI ECC DDR read mode, when accesses to flash.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_USR_DDR_DQS_THD</name>
              <description>The delay number of data strobe which from memory based on SPI_CLK.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_DDR_DQS_LOOP</name>
              <description>1: Use internal signal  as data strobe, the strobe can not be delayed by input timing module. 0: Use input SPI_DQS signal from PAD as data strobe, the strobe can be delayed by input timing module</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_DDR_DQS_LOOP_MODE</name>
              <description>When SPI_FMEM_DDR_DQS_LOOP and SPI_FMEM_DDR_EN are set, 1: Use internal SPI_CLK  as data strobe. 0: Use internal ~SPI_CLK  as data strobe. Otherwise this bit is not active.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_CLK_DIFF_EN</name>
              <description>Set this bit to enable the differential SPI_CLK#.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_HYPERBUS_MODE</name>
              <description>Set this bit to enable the SPI HyperBus mode.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_DQS_CA_IN</name>
              <description>Set this bit to enable the input of SPI_DQS signal in SPI phases of CMD and ADDR.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_HYPERBUS_DUMMY_2X</name>
              <description>Set this bit to enable the vary dummy function in SPI HyperBus mode, when SPI0 accesses to flash or SPI1 accesses flash or sram.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_CLK_DIFF_INV</name>
              <description>Set this bit to invert SPI_DIFF when accesses to flash. .</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_OCTA_RAM_ADDR</name>
              <description>Set this bit to enable octa_ram address out when accesses to flash, which means ADDR_OUT[31:0] = {spi_usr_addr_value[25:4], 6'd0, spi_usr_addr_value[3:1], 1'b0}.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_HYPERBUS_CA</name>
              <description>Set this bit to enable HyperRAM address out when accesses to flash, which means ADDR_OUT[31:0] = {spi_usr_addr_value[19:4], 13'd0, spi_usr_addr_value[3:1]}.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_SMEM_DDR</name>
          <description>SPI0 external RAM DDR mode control register</description>
          <addressOffset>0xE4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00003020</resetValue>
          <fields>
            <field>
              <name>EN</name>
              <description>1: in ddr mode,  0 in sdr mode</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_VAR_DUMMY</name>
              <description>Set the bit to enable variable dummy cycle in spi ddr mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RDAT_SWP</name>
              <description>Set the bit to reorder rx data of the word in spi ddr mode.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDAT_SWP</name>
              <description>Set the bit to reorder tx data of the word in spi ddr mode.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMD_DIS</name>
              <description>the bit is used to disable dual edge in CMD phase when ddr mode.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_OUTMINBYTELEN</name>
              <description>It is the minimum output data length in the ddr psram.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_TX_DDR_MSK_EN</name>
              <description>Set this bit to mask the first or the last byte in MSPI ECC DDR write mode, when accesses to external RAM.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_RX_DDR_MSK_EN</name>
              <description>Set this bit to mask the first or the last byte in MSPI ECC DDR read mode, when accesses to external RAM.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_USR_DDR_DQS_THD</name>
              <description>The delay number of data strobe which from memory based on SPI_CLK.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DQS_LOOP</name>
              <description>1: Use internal signal  as data strobe, the strobe can not be delayed by input timing module. 0: Use input SPI_DQS signal from PAD as data strobe, the strobe can be delayed by input timing module</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DQS_LOOP_MODE</name>
              <description>When SPI_SMEM_DDR_DQS_LOOP and SPI_SMEM_DDR_EN are set, 1: Use internal SPI_CLK  as data strobe. 0: Use internal ~SPI_CLK  as data strobe. Otherwise this bit is not active.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_CLK_DIFF_EN</name>
              <description>Set this bit to enable the differential SPI_CLK#.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_HYPERBUS_MODE</name>
              <description>Set this bit to enable the SPI HyperBus mode.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_DQS_CA_IN</name>
              <description>Set this bit to enable the input of SPI_DQS signal in SPI phases of CMD and ADDR.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_HYPERBUS_DUMMY_2X</name>
              <description>Set this bit to enable the vary dummy function in SPI HyperBus mode, when SPI0 accesses to flash or SPI1 accesses flash or sram.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_CLK_DIFF_INV</name>
              <description>Set this bit to invert SPI_DIFF when accesses to external RAM. .</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_OCTA_RAM_ADDR</name>
              <description>Set this bit to enable octa_ram address out when accesses to external RAM, which means ADDR_OUT[31:0] = {spi_usr_addr_value[25:4], 6'd0, spi_usr_addr_value[3:1], 1'b0}.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SMEM_HYPERBUS_CA</name>
              <description>Set this bit to enable HyperRAM address out when accesses to external RAM, which means ADDR_OUT[31:0] = {spi_usr_addr_value[19:4], 13'd0, spi_usr_addr_value[3:1]}.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLOCK_GATE</name>
          <description>SPI0 clk_gate register</description>
          <addressOffset>0xE8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>CLK_EN</name>
              <description>Register clock gate enable signal. 1: Enable. 0: Disable.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_CLK_SEL</name>
          <description>SPI0 module clock select register</description>
          <addressOffset>0xEC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_CLK_SEL</name>
              <description>When the digital system clock selects PLL clock and the frequency of PLL clock is 480MHz, the value of SPI_MEM_CORE_CLK_SEL:  0: SPI0/1 module clock (MSPI_CORE_CLK) is 80MHz. 1: MSPI_CORE_CLK is 120MHz.  2: MSPI_CORE_CLK is 160MHz. 3: MSPI_CORE_CLK is 240MHz. When the digital system clock selects PLL clock and the frequency of PLL clock is 320MHz, the value of SPI_MEM_CORE_CLK_SEL:  0: MSPI_CORE_CLK is 80MHz. 1: MSPI_CORE_CLK is 80MHz.  2: MSPI_CORE_CLK 160MHz. 3: Not used.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>SPI1 interrupt enable register</description>
          <addressOffset>0xF0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOTAL_TRANS_END_INT_ENA</name>
              <description>The enable bit for SPI_MEM_TOTAL_TRANS_END_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ECC_ERR_INT_ENA</name>
              <description>The enable bit for SPI_MEM_ECC_ERR_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>SPI1 interrupt clear register</description>
          <addressOffset>0xF4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOTAL_TRANS_END_INT_CLR</name>
              <description>The clear bit for SPI_MEM_TOTAL_TRANS_END_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ECC_ERR_INT_CLR</name>
              <description>The clear bit for SPI_MEM_ECC_ERR_INT interrupt. SPI_MEM_ECC_ERR_ADDR and SPI_MEM_ECC_ERR_CNT will be cleared by the pulse of this bit.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW</name>
          <description>SPI1 interrupt raw register</description>
          <addressOffset>0xF8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOTAL_TRANS_END_INT_RAW</name>
              <description>The raw bit for SPI_MEM_TOTAL_TRANS_END_INT interrupt. 1: Triggered when SPI1 transfer is done and flash is already idle. When WRSR/PP/SE/BE/CE is sent and PES/PER command is sent, this bit is set when WRSR/PP/SE/BE/CE is success.  0: Others.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_ERR_INT_RAW</name>
              <description>The raw bit for SPI_MEM_ECC_ERR_INT interrupt. When APB_CTRL_FECC_ERR_INT_EN is set and  APB_CTRL_SECC_ERR_INT_EN is cleared, this bit is triggered when the error times of SPI0/1 ECC read flash are equal or bigger than APB_CTRL_ECC_ERR_INT_NUM. When APB_CTRL_FECC_ERR_INT_EN is cleared and  APB_CTRL_SECC_ERR_INT_EN is set, this bit is triggered when the error times of SPI0/1 ECC read external RAM are equal or bigger than APB_CTRL_ECC_ERR_INT_NUM. When APB_CTRL_FECC_ERR_INT_EN and  APB_CTRL_SECC_ERR_INT_EN are set, this bit is triggered when the total error times of SPI0/1 ECC read external RAM and flash are equal or bigger than APB_CTRL_ECC_ERR_INT_NUM. When APB_CTRL_FECC_ERR_INT_EN and  APB_CTRL_SECC_ERR_INT_EN are cleared, this bit will not be triggered.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST</name>
          <description>SPI1 interrupt status register</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOTAL_TRANS_END_INT_ST</name>
              <description>The status bit for SPI_MEM_TOTAL_TRANS_END_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_ERR_INT_ST</name>
              <description>The status bit for SPI_MEM_ECC_ERR_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>SPI0 version control register</description>
          <addressOffset>0x3FC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02101040</resetValue>
          <fields>
            <field>
              <name>SPI_SMEM_SPICLK_FUN_DRV</name>
              <description>The driver of SPI_CLK PAD  is controlled by the bits SPI_SMEM_SPICLK_FUN_DRV[1:0] when the bit SPI_SPICLK_PAD_DRV_CTL_EN is set and MSPI accesses to external RAM.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_SPICLK_FUN_DRV</name>
              <description>The driver of SPI_CLK PAD  is controlled by the bits SPI_FMEM_SPICLK_FUN_DRV[1:0] when the bit SPI_SPICLK_PAD_DRV_CTL_EN is set and MSPI accesses to flash.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_SPICLK_PAD_DRV_CTL_EN</name>
              <description>SPI_CLK PAD driver control signal. 1: The driver of SPI_CLK PAD  is controlled by the bits SPI_FMEM_SPICLK_FUN_DRV[1:0] and SPI_SMEM_SPICLK_FUN_DRV[1:0]. 0: The driver of SPI_CLK PAD  is controlled by the bits IO_MUX_FUNC_DRV[1:0] of SPICLK PAD.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DATE</name>
              <description>SPI register version.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>23</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SPI1</name>
      <description>SPI (Serial Peripheral Interface) Controller</description>
      <groupName>SPI1</groupName>
      <baseAddress>0x60002000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xB4</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>SPI1</name>
        <value>20</value>
      </interrupt>
      <registers>
        <register>
          <name>CMD</name>
          <description>SPI1 memory command register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>FLASH_PE</name>
              <description>In user mode, it is set to indicate that program/erase operation will be triggered. The bit is combined with SPI_MEM_USR bit. The bit will be cleared once the operation done.1: enable 0: disable.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR</name>
              <description>User define command enable.  An operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_HPM</name>
              <description>Drive Flash into high performance mode.  The bit will be cleared once the operation done.1: enable 0: disable.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_RES</name>
              <description>This bit combined with SPI_MEM_RESANDRES bit releases Flash from the power-down state or high performance mode and obtains the devices ID. The bit will be cleared once the operation done.1: enable 0: disable.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_DP</name>
              <description>Drive Flash into power down.  An operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_CE</name>
              <description>Chip erase enable. Chip erase operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_BE</name>
              <description>Block erase enable(32KB) .  Block erase operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_SE</name>
              <description>Sector erase enable(4KB). Sector erase operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_PP</name>
              <description>Page program enable(1 byte ~64 bytes data to be programmed). Page program operation  will be triggered when the bit is set. The bit will be cleared once the operation done .1: enable 0: disable.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_WRSR</name>
              <description>Write status register enable.   Write status operation  will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_RDSR</name>
              <description>Read status register-1.  Read status operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_RDID</name>
              <description>Read JEDEC ID . Read ID command will be sent when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_WRDI</name>
              <description>Write flash disable. Write disable command will be sent when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_WREN</name>
              <description>Write flash enable.  Write enable command will be sent when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_READ</name>
              <description>Read flash enable. Read flash operation will be triggered when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADDR</name>
          <description>SPI1 address register</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>USR_ADDR_VALUE</name>
              <description>In user mode, it is the memory address. other then the bit0-bit23 is the memory address, the bit24-bit31 are the byte length of a transfer.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTRL</name>
          <description>SPI1 control register</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <resetValue>0x002CA000</resetValue>
          <fields>
            <field>
              <name>FDUMMY_OUT</name>
              <description>In the DUMMY phase the signal level of SPI bus is output by the SPI0 controller.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FDOUT_OCT</name>
              <description>Set this bit to enable 8-bit-mode(8-bm) in DOUT phase.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FDIN_OCT</name>
              <description>Set this bit to enable 8-bit-mode(8-bm) in DIN phase.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FADDR_OCT</name>
              <description>Set this bit to enable 8-bit-mode(8-bm) in ADDR phase.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FCMD_DUAL</name>
              <description>Set this bit to enable 2-bit-mode(2-bm) in CMD phase.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FCMD_QUAD</name>
              <description>Set this bit to enable 4-bit-mode(4-bm) in CMD phase.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FCMD_OCT</name>
              <description>Set this bit to enable 8-bit-mode(8-bm) in CMD phase.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FCS_CRC_EN</name>
              <description>For SPI1,  initialize crc32 module before writing encrypted data to flash. Active low.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_CRC_EN</name>
              <description>For SPI1,  enable crc32 when writing encrypted data to flash. 1: enable 0:disable</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FASTRD_MODE</name>
              <description>This bit should be set when SPI_MEM_FREAD_QIO, SPI_MEM_FREAD_DIO, SPI_MEM_FREAD_QUAD or SPI_MEM_FREAD_DUAL is set.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FREAD_DUAL</name>
              <description>In hardware 0x3B read operation, DIN phase apply 2 signals. 1: enable 0: disable.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESANDRES</name>
              <description>The Device ID is read out to SPI_MEM_RD_STATUS register,  this bit combine with spi_mem_flash_res bit. 1: enable 0: disable.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>Q_POL</name>
              <description>The bit is used to set MISO line polarity, 1: high 0, low</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_POL</name>
              <description>The bit is used to set MOSI line polarity, 1: high 0, low</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FREAD_QUAD</name>
              <description>In hardware 0x6B read operation, DIN phase apply 4 signals(4-bit-mode). 1: enable 0: disable.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WP</name>
              <description>Write protect signal output when SPI is idle.  1: output high, 0: output low.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WRSR_2B</name>
              <description>Two bytes data will be written to status register when it is set. 1: enable 0: disable.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FREAD_DIO</name>
              <description>In hardware 0xBB read operation, ADDR phase and DIN phase apply 2 signals(2-bit-mode). 1: enable 0: disable.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FREAD_QIO</name>
              <description>In hardware 0xEB read operation, ADDR phase and DIN phase apply 4 signals(4-bit-mode). 1: enable 0: disable.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTRL1</name>
          <description>SPI1 control1 register</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFC</resetValue>
          <fields>
            <field>
              <name>CLK_MODE</name>
              <description>SPI Bus clock (SPI_CLK) mode bits. 0: SPI Bus clock (SPI_CLK) is off when CS inactive 1: SPI_CLK is delayed one cycle after SPI_CS inactive 2: SPI_CLK is delayed two cycles after SPI_CS inactive 3: SPI_CLK is always on.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CS_HOLD_DLY_RES</name>
              <description>After RES/DP/HPM/PES/PER command is sent, SPI1 may waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 4 or * 256) SPI_CLK cycles.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTRL2</name>
          <description>SPI1 control2 register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SYNC_RESET</name>
              <description>The FSM will be reset.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLOCK</name>
          <description>SPI_CLK clock division register when SPI1 accesses to flash or Ext_RAM.</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <resetValue>0x00030103</resetValue>
          <fields>
            <field>
              <name>CLKCNT_L</name>
              <description>It must equal to the value of SPI_MEM_CLKCNT_N.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKCNT_H</name>
              <description>It must be a floor value of ((SPI_MEM_CLKCNT_N+1)/2-1).</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKCNT_N</name>
              <description>When SPI1 accesses to flash or Ext_RAM, f_SPI_CLK = f_MSPI_CORE_CLK/(SPI_MEM_CLKCNT_N+1)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EQU_SYSCLK</name>
              <description>When SPI1 access to flash or Ext_RAM, set this bit in 1-division mode, f_SPI_CLK = f_MSPI_CORE_CLK.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER</name>
          <description>SPI1 user register.</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <resetValue>0x80000000</resetValue>
          <fields>
            <field>
              <name>CK_OUT_EDGE</name>
              <description>This bit, combined with SPI_MEM_CK_IDLE_EDGE bit, is used to change the clock mode 0~3 of SPI_CLK.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FWRITE_DUAL</name>
              <description>Set this bit to enable 2-bm in DOUT phase in SPI1 write operation.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FWRITE_QUAD</name>
              <description>Set this bit to enable 4-bm in DOUT phase in SPI1 write operation.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FWRITE_DIO</name>
              <description>Set this bit to enable 2-bm in ADDR and DOUT phase in SPI1 write operation.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FWRITE_QIO</name>
              <description>Set this bit to enable 4-bit-mode(4-bm) in ADDR and DOUT phase in SPI1 write operation.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_MISO_HIGHPART</name>
              <description>DIN phase only access to high-part of the buffer SPI_MEM_W8_REG~SPI_MEM_W15_REG. 1: enable 0: disable.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_MOSI_HIGHPART</name>
              <description>DOUT phase only access to high-part of the buffer SPI_MEM_W8_REG~SPI_MEM_W15_REG. 1: enable 0: disable.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_DUMMY_IDLE</name>
              <description>SPI_CLK is disabled(No clock edges) in DUMMY phase when the bit is enable.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_MOSI</name>
              <description>Set this bit to enable the DOUT phase of an write-data operation.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_MISO</name>
              <description>Set this bit to enable enable the DIN phase of a read-data operation.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_DUMMY</name>
              <description>Set this bit to enable enable the DUMMY phase of an operation.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_ADDR</name>
              <description>Set this bit to enable enable the ADDR phase of an operation.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_COMMAND</name>
              <description>Set this bit to enable enable the CMD phase of an operation.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER1</name>
          <description>SPI1 user1 register.</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <resetValue>0x5C000007</resetValue>
          <fields>
            <field>
              <name>USR_DUMMY_CYCLELEN</name>
              <description>The SPI_CLK cycle length minus 1 of DUMMY phase.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_ADDR_BITLEN</name>
              <description>The length in bits of ADDR phase. The register value shall be (bit_num-1).</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER2</name>
          <description>SPI1 user2 register.</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <resetValue>0x70000000</resetValue>
          <fields>
            <field>
              <name>USR_COMMAND_VALUE</name>
              <description>The value of user defined(USR) command.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_COMMAND_BITLEN</name>
              <description>The length in bits of CMD phase. The register value shall be (bit_num-1)</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MOSI_DLEN</name>
          <description>SPI1 write-data bit length register.</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>USR_MOSI_DBITLEN</name>
              <description>The length in bits of DOUT phase. The register value shall be (bit_num-1).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MISO_DLEN</name>
          <description>SPI1 read-data bit length register.</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>USR_MISO_DBITLEN</name>
              <description>The length in bits of DIN phase. The register value shall be (bit_num-1).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RD_STATUS</name>
          <description>SPI1 read control register.</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>STATUS</name>
              <description>The value is stored when set SPI_MEM_FLASH_RDSR bit and SPI_MEM_FLASH_RES bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WB_MODE</name>
              <description>Mode bits in the flash fast read mode  it is combined with SPI_MEM_FASTRD_MODE bit.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXT_ADDR</name>
          <description>SPI1 extended address register.</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EXT_ADDR</name>
              <description>The register are the higher 32bits in the 64 bits address mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MISC</name>
          <description>SPI1 misc register.</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000002</resetValue>
          <fields>
            <field>
              <name>CS0_DIS</name>
              <description>Set this bit to raise high SPI_CS pin, which means that the SPI device(flash) connected to SPI_CS is in low level when SPI1 transfer starts.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CS1_DIS</name>
              <description>Set this bit to raise high SPI_CS1 pin, which means that the SPI device(Ext_RAM) connected to SPI_CS1 is in low level when SPI1 transfer starts.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK_IDLE_EDGE</name>
              <description>1: SPI_CLK line is high when MSPI is idle. 0: SPI_CLK line is low when MSPI is idle.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CS_KEEP_ACTIVE</name>
              <description>SPI_CS line keep low when the bit is set.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AUTO_PER</name>
              <description>Set this bit to enable auto PER function. Hardware will sent out PER command if PES command is sent.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_CRC</name>
          <description>SPI1 CRC data register.</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>DATA</name>
              <description>For SPI1, the value of crc32.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_FCTRL</name>
          <description>SPI1 bit mode control register.</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CACHE_USR_CMD_4BYTE</name>
              <description>Set this bit to enable SPI1 transfer with 32 bits address. The value of SPI_MEM_USR_ADDR_BITLEN should be 31.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FDIN_DUAL</name>
              <description>When SPI1 accesses to flash or Ext_RAM, set this bit to enable 2-bm in DIN phase.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FDOUT_DUAL</name>
              <description>When SPI1 accesses to flash or Ext_RAM, set this bit to enable 2-bm in DOUT phase.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FADDR_DUAL</name>
              <description>When SPI1 accesses to flash or Ext_RAM, set this bit to enable 2-bm in ADDR phase.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FDIN_QUAD</name>
              <description>When SPI1 accesses to flash or Ext_RAM, set this bit to enable 4-bm in DIN phase.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FDOUT_QUAD</name>
              <description>When SPI1 accesses to flash or Ext_RAM, set this bit to enable 4-bm in DOUT phase.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FADDR_QUAD</name>
              <description>When SPI1 accesses to flash or Ext_RAM, set this bit to enable 4-bm in ADDR phase.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FSM</name>
          <description>SPI1 state machine(FSM) status register.</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ST</name>
              <description>The status of SPI1 state machine. 0: idle state(IDLE), 1: preparation state(PREP), 2: send command state(CMD), 3: send address state(ADDR), 4: red data state(DIN), 5:write data state(DOUT), 6: wait state(DUMMY), 7: done state(DONE).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0</name>
          <description>SPI1 memory data buffer0</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF0</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W1</name>
          <description>SPI1 memory data buffer1</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF1</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W2</name>
          <description>SPI1 memory data buffer2</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF2</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W3</name>
          <description>SPI1 memory data buffer3</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF3</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W4</name>
          <description>SPI1 memory data buffer4</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF4</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W5</name>
          <description>SPI1 memory data buffer5</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF5</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W6</name>
          <description>SPI1 memory data buffer6</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF6</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W7</name>
          <description>SPI1 memory data buffer7</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF7</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W8</name>
          <description>SPI1 memory data buffer8</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF8</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W9</name>
          <description>SPI1 memory data buffer9</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF9</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W10</name>
          <description>SPI1 memory data buffer10</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF10</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W11</name>
          <description>SPI1 memory data buffer11</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF11</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W12</name>
          <description>SPI1 memory data buffer12</description>
          <addressOffset>0x88</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF12</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W13</name>
          <description>SPI1 memory data buffer13</description>
          <addressOffset>0x8C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF13</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W14</name>
          <description>SPI1 memory data buffer14</description>
          <addressOffset>0x90</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF14</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W15</name>
          <description>SPI1 memory data buffer15</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF15</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_WAITI_CTRL</name>
          <description>SPI1 wait idle control register</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000014</resetValue>
          <fields>
            <field>
              <name>WAITI_EN</name>
              <description>Set this bit to enable auto-waiting flash idle operation when PP/SE/BE/CE/WRSR/PES command is sent.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WAITI_DUMMY</name>
              <description>Set this bit to enable DUMMY phase in auto wait flash idle transfer(RDSR).</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WAITI_CMD</name>
              <description>The command value of auto wait flash idle transfer(RDSR).</description>
              <bitOffset>2</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WAITI_DUMMY_CYCLELEN</name>
              <description>The dummy cycle length when wait flash idle(RDSR).</description>
              <bitOffset>10</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_SUS_CMD</name>
          <description>SPI1 flash suspend control register</description>
          <addressOffset>0x9C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>FLASH_PER</name>
              <description>program erase resume bit, program erase suspend operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_PES</name>
              <description>program erase suspend bit, program erase suspend operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_PER_WAIT_EN</name>
              <description>Set this bit to add delay time after program erase resume(PER) is sent.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_PES_WAIT_EN</name>
              <description>Set this bit to add delay time after program erase suspend(PES) command is sent.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PES_PER_EN</name>
              <description>Set this bit to enable PES transfer trigger PES transfer option.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PESR_IDLE_EN</name>
              <description>1: Separate PER flash wait idle and PES flash wait idle. 0: Not separate.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASH_SUS_CTRL</name>
          <description>SPI1 flash suspend command register</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000EAF4</resetValue>
          <fields>
            <field>
              <name>FLASH_PES_EN</name>
              <description>Set this bit to enable auto-suspend function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_PER_COMMAND</name>
              <description>Program/Erase resume command value.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_PES_COMMAND</name>
              <description>Program/Erase suspend command value.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SUS_STATUS</name>
          <description>SPI1 flash suspend status register</description>
          <addressOffset>0xA4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>FLASH_SUS</name>
              <description>The status of flash suspend. This bit is set when PES command is sent, and cleared when PER is sent. Only used in SPI1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_HPM_DLY_256</name>
              <description>1: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 256) SPI_CLK cycles after HPM command is sent. 0: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 4) SPI_CLK cycles after HPM command is sent.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_RES_DLY_256</name>
              <description>1: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 256) SPI_CLK cycles after RES command is sent. 0: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 4) SPI_CLK cycles after RES command is sent.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_DP_DLY_256</name>
              <description>1: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 256) SPI_CLK cycles after DP command is sent. 0: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 4) SPI_CLK cycles after DP command is sent.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_PER_DLY_256</name>
              <description>Valid when SPI_MEM_FLASH_PER_WAIT_EN is 1. 1: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 256) SPI_CLK cycles after PER command is sent. 0: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 4) SPI_CLK cycles after PER command is sent.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_PES_DLY_256</name>
              <description>Valid when SPI_MEM_FLASH_PES_WAIT_EN is 1. 1: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 256) SPI_CLK cycles after PES command is sent. 0: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 4) SPI_CLK cycles after PES command is sent.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMING_CALI</name>
          <description>SPI1 timing compensation register when accesses to flash or Ext_RAM.</description>
          <addressOffset>0xA8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMING_CALI</name>
              <description>Set this bit to add extra SPI_CLK cycles in DUMMY phase for all reading operations.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EXTRA_DUMMY_CYCLELEN</name>
              <description>Extra SPI_CLK cycles added in DUMMY phase for timing compensation. Active when SPI_MEM_TIMING_CALI bit is set.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DDR</name>
          <description>SPI1 DDR control register</description>
          <addressOffset>0xE0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000020</resetValue>
          <fields>
            <field>
              <name>SPI_FMEM_DDR_EN</name>
              <description>1: in DDR mode,  0: in SDR mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_VAR_DUMMY</name>
              <description>Set the bit to enable variable dummy cycle in DDRmode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_DDR_RDAT_SWP</name>
              <description>Set the bit to reorder RX data of the word in DDR mode.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_DDR_WDAT_SWP</name>
              <description>Set the bit to reorder TX data of the word in DDR mode.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_DDR_CMD_DIS</name>
              <description>the bit is used to disable dual edge in command phase when DDR mode.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_OUTMINBYTELEN</name>
              <description>It is the minimum output data length in the panda device.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_USR_DDR_DQS_THD</name>
              <description>The delay number of data strobe which from memory based on SPI_CLK.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_DDR_DQS_LOOP</name>
              <description>1: Use internal signal  as data strobe, the strobe can not be delayed by input timing module. 0: Use input SPI_DQS signal from PAD as data strobe, the strobe can be delayed by input timing module</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_DDR_DQS_LOOP_MODE</name>
              <description>When SPI_FMEM_DDR_DQS_LOOP and SPI_FMEM_DDR_EN are set, 1: Use internal SPI_CLK  as data strobe. 0: Use internal ~SPI_CLK  as data strobe. Otherwise this bit is not active.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_CLK_DIFF_EN</name>
              <description>Set this bit to enable the differential SPI_CLK#.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_HYPERBUS_MODE</name>
              <description>Set this bit to enable the SPI HyperBus mode.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_DQS_CA_IN</name>
              <description>Set this bit to enable the input of SPI_DQS signal in SPI phases of CMD and ADDR.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_HYPERBUS_DUMMY_2X</name>
              <description>Set this bit to enable the vary dummy function in SPI HyperBus mode, when SPI0 accesses flash or SPI1 accesses flash or sram.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_CLK_DIFF_INV</name>
              <description>Set this bit to invert SPI_DIFF when accesses to flash. .</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_OCTA_RAM_ADDR</name>
              <description>Set this bit to enable octa_ram address out when accesses to flash, which means ADDR_OUT[31:0] = {spi_usr_addr_value[25:4], 6'd0, spi_usr_addr_value[3:1], 1'b0}.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_FMEM_HYPERBUS_CA</name>
              <description>Set this bit to enable HyperRAM address out when accesses to flash, which means ADDR_OUT[31:0] = {spi_usr_addr_value[19:4], 13'd0, spi_usr_addr_value[3:1]}.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLOCK_GATE</name>
          <description>SPI1 clk_gate register</description>
          <addressOffset>0xE8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>CLK_EN</name>
              <description>Register clock gate enable signal. 1: Enable. 0: Disable.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>SPI1 interrupt enable register</description>
          <addressOffset>0xF0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PER_END_INT_ENA</name>
              <description>The enable bit for SPI_MEM_PER_END_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PES_END_INT_ENA</name>
              <description>The enable bit for SPI_MEM_PES_END_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOTAL_TRANS_END_INT_ENA</name>
              <description>The enable bit for SPI_MEM_TOTAL_TRANS_END_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BROWN_OUT_INT_ENA</name>
              <description>The enable bit for SPI_MEM_BROWN_OUT_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>SPI1 interrupt clear register</description>
          <addressOffset>0xF4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PER_END_INT_CLR</name>
              <description>The clear bit for SPI_MEM_PER_END_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>PES_END_INT_CLR</name>
              <description>The clear bit for SPI_MEM_PES_END_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TOTAL_TRANS_END_INT_CLR</name>
              <description>The clear bit for SPI_MEM_TOTAL_TRANS_END_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BROWN_OUT_INT_CLR</name>
              <description>The status bit for SPI_MEM_BROWN_OUT_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW</name>
          <description>SPI1 interrupt raw register</description>
          <addressOffset>0xF8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PER_END_INT_RAW</name>
              <description>The raw bit for SPI_MEM_PER_END_INT interrupt. 1: Triggered when Auto Resume command (0x7A) is sent and flash is resumed successfully. 0: Others.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PES_END_INT_RAW</name>
              <description>The raw bit for SPI_MEM_PES_END_INT interrupt.1: Triggered when Auto Suspend command (0x75) is sent and flash is suspended successfully. 0: Others.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOTAL_TRANS_END_INT_RAW</name>
              <description>The raw bit for SPI_MEM_TOTAL_TRANS_END_INT interrupt. 1: Triggered when SPI1 transfer is done and flash is already idle. When WRSR/PP/SE/BE/CE is sent and PES/PER command is sent, this bit is set when WRSR/PP/SE/BE/CE is success.  0: Others.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BROWN_OUT_INT_RAW</name>
              <description>The raw bit for SPI_MEM_BROWN_OUT_INT interrupt. 1: Triggered condition is that chip is loosing power and RTC module sends out brown out close flash request to SPI1. After SPI1 sends out suspend command to flash, this interrupt is triggered and MSPI returns to idle state. 0: Others.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST</name>
          <description>SPI1 interrupt status register</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PER_END_INT_ST</name>
              <description>The status bit for SPI_MEM_PER_END_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PES_END_INT_ST</name>
              <description>The status bit for SPI_MEM_PES_END_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOTAL_TRANS_END_INT_ST</name>
              <description>The status bit for SPI_MEM_TOTAL_TRANS_END_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BROWN_OUT_INT_ST</name>
              <description>The status bit for SPI_MEM_BROWN_OUT_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>SPI0 version control register</description>
          <addressOffset>0x3FC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02101040</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>SPI register version.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SPI2</name>
      <description>SPI (Serial Peripheral Interface) Controller</description>
      <groupName>SPI2</groupName>
      <baseAddress>0x60024000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x98</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>SPI2</name>
        <value>21</value>
      </interrupt>
      <registers>
        <register>
          <name>CMD</name>
          <description>Command control register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CONF_BITLEN</name>
              <description>Define the APB cycles of  SPI_CONF state. Can be configured in CONF state.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UPDATE</name>
              <description>Set this bit to synchronize SPI registers from APB clock domain into SPI module clock domain, which is only used in SPI master mode.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR</name>
              <description>User define command enable.  An operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable. Can not be changed by CONF_buf.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADDR</name>
          <description>Address value register</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>USR_ADDR_VALUE</name>
              <description>Address to slave. Can be configured in CONF state.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTRL</name>
          <description>SPI control register</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <resetValue>0x003C0000</resetValue>
          <fields>
            <field>
              <name>DUMMY_OUT</name>
              <description>0: In the dummy phase, the FSPI bus signals are not output. 1: In the dummy phase, the FSPI bus signals are output. Can be configured in CONF state.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FADDR_DUAL</name>
              <description>Apply 2 signals during addr phase 1:enable 0: disable. Can be configured in CONF state.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FADDR_QUAD</name>
              <description>Apply 4 signals during addr phase 1:enable 0: disable. Can be configured in CONF state.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FADDR_OCT</name>
              <description>Apply 8 signals during addr phase 1:enable 0: disable. Can be configured in CONF state.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FCMD_DUAL</name>
              <description>Apply 2 signals during command phase 1:enable 0: disable. Can be configured in CONF state.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FCMD_QUAD</name>
              <description>Apply 4 signals during command phase 1:enable 0: disable. Can be configured in CONF state.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FCMD_OCT</name>
              <description>Apply 8 signals during command phase 1:enable 0: disable. Can be configured in CONF state.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FREAD_DUAL</name>
              <description>In the read operations, read-data phase apply 2 signals. 1: enable 0: disable. Can be configured in CONF state.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FREAD_QUAD</name>
              <description>In the read operations read-data phase apply 4 signals. 1: enable 0: disable.  Can be configured in CONF state.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FREAD_OCT</name>
              <description>In the read operations read-data phase apply 8 signals. 1: enable 0: disable.  Can be configured in CONF state.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>Q_POL</name>
              <description>The bit is used to set MISO line polarity, 1: high 0, low. Can be configured in CONF state.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_POL</name>
              <description>The bit is used to set MOSI line polarity, 1: high 0, low. Can be configured in CONF state.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HOLD_POL</name>
              <description>SPI_HOLD output value when SPI is idle. 1: output high, 0: output low. Can be configured in CONF state.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WP_POL</name>
              <description>Write protect signal output when SPI is idle.  1: output high, 0: output low.  Can be configured in CONF state.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RD_BIT_ORDER</name>
              <description>In read-data (MISO) phase 1: LSB first 0: MSB first. Can be configured in CONF state.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WR_BIT_ORDER</name>
              <description>In command address write-data (MOSI) phases 1: LSB firs 0: MSB first. Can be configured in CONF state.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLOCK</name>
          <description>SPI clock control register</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <resetValue>0x80003043</resetValue>
          <fields>
            <field>
              <name>CLKCNT_L</name>
              <description>In the master mode it must be equal to spi_clkcnt_N. In the slave mode it must be 0. Can be configured in CONF state.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKCNT_H</name>
              <description>In the master mode it must be floor((spi_clkcnt_N+1)/2-1). In the slave mode it must be 0. Can be configured in CONF state.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKCNT_N</name>
              <description>In the master mode it is the divider of spi_clk. So spi_clk frequency is system/(spi_clkdiv_pre+1)/(spi_clkcnt_N+1). Can be configured in CONF state.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKDIV_PRE</name>
              <description>In the master mode it is pre-divider of spi_clk.  Can be configured in CONF state.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EQU_SYSCLK</name>
              <description>In the master mode 1: spi_clk is eqaul to system 0: spi_clk is divided from system clock. Can be configured in CONF state.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER</name>
          <description>SPI USER control register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <resetValue>0x800000C0</resetValue>
          <fields>
            <field>
              <name>DOUTDIN</name>
              <description>Set the bit to enable full duplex communication. 1: enable 0: disable. Can be configured in CONF state.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>QPI_MODE</name>
              <description>Both for master mode and slave mode. 1: spi controller is in QPI mode. 0: others. Can be configured in CONF state.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OPI_MODE</name>
              <description>Just for master mode. 1: spi controller is in OPI mode (all in 8-b-m). 0: others. Can be configured in CONF state.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TSCK_I_EDGE</name>
              <description>In the slave mode, this bit can be used to change the polarity of tsck. 0: tsck = spi_ck_i. 1:tsck = !spi_ck_i.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CS_HOLD</name>
              <description>spi cs keep low when spi is in  done  phase. 1: enable 0: disable. Can be configured in CONF state.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CS_SETUP</name>
              <description>spi cs is enable when spi is in  prepare  phase. 1: enable 0: disable. Can be configured in CONF state.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RSCK_I_EDGE</name>
              <description>In the slave mode, this bit can be used to change the polarity of rsck. 0: rsck = !spi_ck_i. 1:rsck = spi_ck_i.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK_OUT_EDGE</name>
              <description>the bit combined with spi_mosi_delay_mode bits to set mosi signal delay mode. Can be configured in CONF state.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FWRITE_DUAL</name>
              <description>In the write operations read-data phase apply 2 signals. Can be configured in CONF state.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FWRITE_QUAD</name>
              <description>In the write operations read-data phase apply 4 signals. Can be configured in CONF state.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FWRITE_OCT</name>
              <description>In the write operations read-data phase apply 8 signals. Can be configured in CONF state.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_CONF_NXT</name>
              <description>1: Enable the DMA CONF phase of next seg-trans operation, which means seg-trans will continue. 0: The seg-trans will end after the current SPI seg-trans or this is not seg-trans mode. Can be configured in CONF state.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SIO</name>
              <description>Set the bit to enable 3-line half duplex communication mosi and miso signals share the same pin. 1: enable 0: disable. Can be configured in CONF state.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_MISO_HIGHPART</name>
              <description>read-data phase only access to high-part of the buffer spi_w8~spi_w15. 1: enable 0: disable. Can be configured in CONF state.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_MOSI_HIGHPART</name>
              <description>write-data phase only access to high-part of the buffer spi_w8~spi_w15. 1: enable 0: disable.  Can be configured in CONF state.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_DUMMY_IDLE</name>
              <description>spi clock is disable in dummy phase when the bit is enable. Can be configured in CONF state.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_MOSI</name>
              <description>This bit enable the write-data phase of an operation. Can be configured in CONF state.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_MISO</name>
              <description>This bit enable the read-data phase of an operation. Can be configured in CONF state.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_DUMMY</name>
              <description>This bit enable the dummy phase of an operation. Can be configured in CONF state.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_ADDR</name>
              <description>This bit enable the address phase of an operation. Can be configured in CONF state.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_COMMAND</name>
              <description>This bit enable the command phase of an operation. Can be configured in CONF state.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER1</name>
          <description>SPI USER control register 1</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <resetValue>0xB8410007</resetValue>
          <fields>
            <field>
              <name>USR_DUMMY_CYCLELEN</name>
              <description>The length in spi_clk cycles of dummy phase. The register value shall be (cycle_num-1). Can be configured in CONF state.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MST_WFULL_ERR_END_EN</name>
              <description>1: SPI transfer is ended when SPI RX AFIFO wfull error is valid in GP-SPI master FD/HD-mode. 0: SPI transfer is not ended when SPI RX AFIFO wfull error is valid in GP-SPI master FD/HD-mode.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CS_SETUP_TIME</name>
              <description>(cycles+1) of prepare phase by spi clock this bits are combined with spi_cs_setup bit. Can be configured in CONF state.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CS_HOLD_TIME</name>
              <description>delay cycles of cs pin by spi clock this bits are combined with spi_cs_hold bit. Can be configured in CONF state.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_ADDR_BITLEN</name>
              <description>The length in bits of address phase. The register value shall be (bit_num-1). Can be configured in CONF state.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER2</name>
          <description>SPI USER control register 2</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <resetValue>0x78000000</resetValue>
          <fields>
            <field>
              <name>USR_COMMAND_VALUE</name>
              <description>The value of  command. Can be configured in CONF state.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MST_REMPTY_ERR_END_EN</name>
              <description>1: SPI transfer is ended when SPI TX AFIFO read empty error is valid in GP-SPI master FD/HD-mode. 0: SPI transfer is not ended when SPI TX AFIFO read empty error is valid in GP-SPI master FD/HD-mode.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USR_COMMAND_BITLEN</name>
              <description>The length in bits of command phase. The register value shall be (bit_num-1). Can be configured in CONF state.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MS_DLEN</name>
          <description>SPI data bit length control register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MS_DATA_BITLEN</name>
              <description>The value of these bits is the configured SPI transmission data bit length in master mode DMA controlled transfer or CPU controlled transfer. The value is also the configured bit length in slave mode DMA RX controlled transfer. The register value shall be (bit_num-1). Can be configured in CONF state.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MISC</name>
          <description>SPI misc register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000003E</resetValue>
          <fields>
            <field>
              <name>CS0_DIS</name>
              <description>SPI CS0 pin enable, 1: disable CS0, 0: spi_cs0 signal is from/to CS0 pin. Can be configured in CONF state.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CS1_DIS</name>
              <description>SPI CS1 pin enable, 1: disable CS1, 0: spi_cs1 signal is from/to CS1 pin. Can be configured in CONF state.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CS2_DIS</name>
              <description>SPI CS2 pin enable, 1: disable CS2, 0: spi_cs2 signal is from/to CS2 pin. Can be configured in CONF state.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CS3_DIS</name>
              <description>SPI CS3 pin enable, 1: disable CS3, 0: spi_cs3 signal is from/to CS3 pin. Can be configured in CONF state.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CS4_DIS</name>
              <description>SPI CS4 pin enable, 1: disable CS4, 0: spi_cs4 signal is from/to CS4 pin. Can be configured in CONF state.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CS5_DIS</name>
              <description>SPI CS5 pin enable, 1: disable CS5, 0: spi_cs5 signal is from/to CS5 pin. Can be configured in CONF state.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK_DIS</name>
              <description>1: spi clk out disable,  0: spi clk out enable. Can be configured in CONF state.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MASTER_CS_POL</name>
              <description>In the master mode the bits are the polarity of spi cs line, the value is equivalent to spi_cs ^ spi_master_cs_pol. Can be configured in CONF state.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_DATA_DTR_EN</name>
              <description>1: SPI master DTR mode is applied to SPI clk, data and spi_dqs.  0: SPI master DTR mode is  only applied to spi_dqs. This bit should be used with bit 17/18/19.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DATA_DTR_EN</name>
              <description>1: SPI clk and data of SPI_DOUT and SPI_DIN state are in DTR mode, including master 1/2/4/8-bm.  0:  SPI clk and data of SPI_DOUT and SPI_DIN state are in STR mode. Can be configured in CONF state.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_DTR_EN</name>
              <description>1: SPI clk and data of SPI_SEND_ADDR state are in DTR mode, including master 1/2/4/8-bm.  0:  SPI clk and data of SPI_SEND_ADDR state are in STR mode. Can be configured in CONF state.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMD_DTR_EN</name>
              <description>1: SPI clk and data of SPI_SEND_CMD state are in DTR mode, including master 1/2/4/8-bm. 0:  SPI clk and data of SPI_SEND_CMD state are in STR mode. Can be configured in CONF state.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLAVE_CS_POL</name>
              <description>spi slave input cs polarity select. 1: inv  0: not change. Can be configured in CONF state.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DQS_IDLE_EDGE</name>
              <description>The default value of spi_dqs. Can be configured in CONF state.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK_IDLE_EDGE</name>
              <description>1: spi clk line is high when idle     0: spi clk line is low when idle. Can be configured in CONF state.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CS_KEEP_ACTIVE</name>
              <description>spi cs line keep low when the bit is set. Can be configured in CONF state.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>QUAD_DIN_PIN_SWAP</name>
              <description>1: SPI quad input swap enable, swap FSPID with FSPIQ, swap FSPIWP with FSPIHD. 0:  spi quad input swap disable. Can be configured in CONF state.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIN_MODE</name>
          <description>SPI input delay mode configuration</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DIN0_MODE</name>
              <description>the input signals are delayed by SPI module clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb, 3: input with the spi_clk. Can be configured in CONF state.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN1_MODE</name>
              <description>the input signals are delayed by SPI module clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb, 3: input with the spi_clk. Can be configured in CONF state.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN2_MODE</name>
              <description>the input signals are delayed by SPI module clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb, 3: input with the spi_clk. Can be configured in CONF state.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN3_MODE</name>
              <description>the input signals are delayed by SPI module clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb, 3: input with the spi_clk. Can be configured in CONF state.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN4_MODE</name>
              <description>the input signals are delayed by SPI module clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb, 3: input with the spi_clk. Can be configured in CONF state.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN5_MODE</name>
              <description>the input signals are delayed by SPI module clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb, 3: input with the spi_clk. Can be configured in CONF state.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN6_MODE</name>
              <description>the input signals are delayed by SPI module clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb, 3: input with the spi_clk. Can be configured in CONF state.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN7_MODE</name>
              <description>the input signals are delayed by SPI module clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb, 3: input with the spi_clk. Can be configured in CONF state.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMING_HCLK_ACTIVE</name>
              <description>1:enable hclk in SPI input timing module.  0: disable it. Can be configured in CONF state.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIN_NUM</name>
          <description>SPI input delay number configuration</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DIN0_NUM</name>
              <description>the input signals are delayed by SPI module clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...  Can be configured in CONF state.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN1_NUM</name>
              <description>the input signals are delayed by SPI module clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...  Can be configured in CONF state.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN2_NUM</name>
              <description>the input signals are delayed by SPI module clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...  Can be configured in CONF state.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN3_NUM</name>
              <description>the input signals are delayed by SPI module clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...  Can be configured in CONF state.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN4_NUM</name>
              <description>the input signals are delayed by SPI module clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...  Can be configured in CONF state.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN5_NUM</name>
              <description>the input signals are delayed by SPI module clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...  Can be configured in CONF state.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN6_NUM</name>
              <description>the input signals are delayed by SPI module clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...  Can be configured in CONF state.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIN7_NUM</name>
              <description>the input signals are delayed by SPI module clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...  Can be configured in CONF state.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOUT_MODE</name>
          <description>SPI output delay mode configuration</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DOUT0_MODE</name>
              <description>The output signal 0 is delayed by the SPI module clock, 0: output without delayed, 1: output delay for a SPI module clock cycle at its negative edge. Can be configured in CONF state.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT1_MODE</name>
              <description>The output signal 1 is delayed by the SPI module clock, 0: output without delayed, 1: output delay for a SPI module clock cycle at its negative edge. Can be configured in CONF state.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT2_MODE</name>
              <description>The output signal 2 is delayed by the SPI module clock, 0: output without delayed, 1: output delay for a SPI module clock cycle at its negative edge. Can be configured in CONF state.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT3_MODE</name>
              <description>The output signal 3 is delayed by the SPI module clock, 0: output without delayed, 1: output delay for a SPI module clock cycle at its negative edge. Can be configured in CONF state.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT4_MODE</name>
              <description>The output signal 4 is delayed by the SPI module clock, 0: output without delayed, 1: output delay for a SPI module clock cycle at its negative edge. Can be configured in CONF state.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT5_MODE</name>
              <description>The output signal 5 is delayed by the SPI module clock, 0: output without delayed, 1: output delay for a SPI module clock cycle at its negative edge. Can be configured in CONF state.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT6_MODE</name>
              <description>The output signal 6 is delayed by the SPI module clock, 0: output without delayed, 1: output delay for a SPI module clock cycle at its negative edge. Can be configured in CONF state.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DOUT7_MODE</name>
              <description>The output signal 7 is delayed by the SPI module clock, 0: output without delayed, 1: output delay for a SPI module clock cycle at its negative edge. Can be configured in CONF state.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_DQS_MODE</name>
              <description>The output signal SPI_DQS is delayed by the SPI module clock, 0: output without delayed, 1: output delay for a SPI module clock cycle at its negative edge. Can be configured in CONF state.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CONF</name>
          <description>SPI DMA control register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>DMA_OUTFIFO_EMPTY</name>
              <description>Records the status of DMA TX FIFO. 1: DMA TX FIFO is not ready for sending data. 0: DMA TX FIFO is ready for sending data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DMA_INFIFO_FULL</name>
              <description>Records the status of DMA RX FIFO. 1: DMA RX FIFO is not ready for receiving data. 0: DMA RX FIFO is ready for receiving data.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DMA_SLV_SEG_TRANS_EN</name>
              <description>Enable dma segment transfer in spi dma half slave mode. 1: enable. 0: disable.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLV_RX_SEG_TRANS_CLR_EN</name>
              <description>1: spi_dma_infifo_full_vld is cleared by spi slave cmd 5. 0: spi_dma_infifo_full_vld is cleared by spi_trans_done.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLV_TX_SEG_TRANS_CLR_EN</name>
              <description>1: spi_dma_outfifo_empty_vld is cleared by spi slave cmd 6. 0: spi_dma_outfifo_empty_vld is cleared by spi_trans_done.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_EOF_EN</name>
              <description>1: spi_dma_inlink_eof is set when the number of dma pushed data bytes is equal to the value of spi_slv/mst_dma_rd_bytelen[19:0] in spi dma transition.  0: spi_dma_inlink_eof is set by spi_trans_done in non-seg-trans or spi_dma_seg_trans_done in seg-trans.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_RX_ENA</name>
              <description>Set this bit to enable SPI DMA controlled receive data mode.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_TX_ENA</name>
              <description>Set this bit to enable SPI DMA controlled send data mode.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_AFIFO_RST</name>
              <description>Set this bit to reset RX AFIFO, which is used to receive data in SPI master and slave mode transfer.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BUF_AFIFO_RST</name>
              <description>Set this bit to reset BUF TX AFIFO, which is used send data out in SPI slave CPU controlled mode transfer and master mode transfer.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DMA_AFIFO_RST</name>
              <description>Set this bit to reset DMA TX AFIFO, which is used to send data out in SPI slave DMA controlled mode transfer.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_INT_ENA</name>
          <description>SPI interrupt enable register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_INFIFO_FULL_ERR_INT_ENA</name>
              <description>The enable bit for SPI_DMA_INFIFO_FULL_ERR_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_OUTFIFO_EMPTY_ERR_INT_ENA</name>
              <description>The enable bit for SPI_DMA_OUTFIFO_EMPTY_ERR_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLV_EX_QPI_INT_ENA</name>
              <description>The enable bit for SPI slave Ex_QPI interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLV_EN_QPI_INT_ENA</name>
              <description>The enable bit for SPI slave En_QPI interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLV_CMD7_INT_ENA</name>
              <description>The enable bit for SPI slave CMD7 interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLV_CMD8_INT_ENA</name>
              <description>The enable bit for SPI slave CMD8 interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLV_CMD9_INT_ENA</name>
              <description>The enable bit for SPI slave CMD9 interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLV_CMDA_INT_ENA</name>
              <description>The enable bit for SPI slave CMDA interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLV_RD_DMA_DONE_INT_ENA</name>
              <description>The enable bit for SPI_SLV_RD_DMA_DONE_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLV_WR_DMA_DONE_INT_ENA</name>
              <description>The enable bit for SPI_SLV_WR_DMA_DONE_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLV_RD_BUF_DONE_INT_ENA</name>
              <description>The enable bit for SPI_SLV_RD_BUF_DONE_INT interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLV_WR_BUF_DONE_INT_ENA</name>
              <description>The enable bit for SPI_SLV_WR_BUF_DONE_INT interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRANS_DONE_INT_ENA</name>
              <description>The enable bit for SPI_TRANS_DONE_INT interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_SEG_TRANS_DONE_INT_ENA</name>
              <description>The enable bit for SPI_DMA_SEG_TRANS_DONE_INT interrupt.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEG_MAGIC_ERR_INT_ENA</name>
              <description>The enable bit for SPI_SEG_MAGIC_ERR_INT interrupt.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLV_BUF_ADDR_ERR_INT_ENA</name>
              <description>The enable bit for SPI_SLV_BUF_ADDR_ERR_INT interrupt.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLV_CMD_ERR_INT_ENA</name>
              <description>The enable bit for SPI_SLV_CMD_ERR_INT interrupt.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MST_RX_AFIFO_WFULL_ERR_INT_ENA</name>
              <description>The enable bit for SPI_MST_RX_AFIFO_WFULL_ERR_INT interrupt.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MST_TX_AFIFO_REMPTY_ERR_INT_ENA</name>
              <description>The enable bit for SPI_MST_TX_AFIFO_REMPTY_ERR_INT interrupt.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APP2_INT_ENA</name>
              <description>The enable bit for SPI_APP2_INT interrupt.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APP1_INT_ENA</name>
              <description>The enable bit for SPI_APP1_INT interrupt.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_INT_CLR</name>
          <description>SPI interrupt clear register</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_INFIFO_FULL_ERR_INT_CLR</name>
              <description>The clear bit for SPI_DMA_INFIFO_FULL_ERR_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DMA_OUTFIFO_EMPTY_ERR_INT_CLR</name>
              <description>The clear bit for SPI_DMA_OUTFIFO_EMPTY_ERR_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLV_EX_QPI_INT_CLR</name>
              <description>The clear bit for SPI slave Ex_QPI interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLV_EN_QPI_INT_CLR</name>
              <description>The clear bit for SPI slave En_QPI interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLV_CMD7_INT_CLR</name>
              <description>The clear bit for SPI slave CMD7 interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLV_CMD8_INT_CLR</name>
              <description>The clear bit for SPI slave CMD8 interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLV_CMD9_INT_CLR</name>
              <description>The clear bit for SPI slave CMD9 interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLV_CMDA_INT_CLR</name>
              <description>The clear bit for SPI slave CMDA interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLV_RD_DMA_DONE_INT_CLR</name>
              <description>The clear bit for SPI_SLV_RD_DMA_DONE_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLV_WR_DMA_DONE_INT_CLR</name>
              <description>The clear bit for SPI_SLV_WR_DMA_DONE_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLV_RD_BUF_DONE_INT_CLR</name>
              <description>The clear bit for SPI_SLV_RD_BUF_DONE_INT interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLV_WR_BUF_DONE_INT_CLR</name>
              <description>The clear bit for SPI_SLV_WR_BUF_DONE_INT interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TRANS_DONE_INT_CLR</name>
              <description>The clear bit for SPI_TRANS_DONE_INT interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DMA_SEG_TRANS_DONE_INT_CLR</name>
              <description>The clear bit for SPI_DMA_SEG_TRANS_DONE_INT interrupt.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SEG_MAGIC_ERR_INT_CLR</name>
              <description>The clear bit for SPI_SEG_MAGIC_ERR_INT interrupt.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLV_BUF_ADDR_ERR_INT_CLR</name>
              <description>The clear bit for SPI_SLV_BUF_ADDR_ERR_INT interrupt.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLV_CMD_ERR_INT_CLR</name>
              <description>The clear bit for SPI_SLV_CMD_ERR_INT interrupt.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MST_RX_AFIFO_WFULL_ERR_INT_CLR</name>
              <description>The clear bit for SPI_MST_RX_AFIFO_WFULL_ERR_INT interrupt.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MST_TX_AFIFO_REMPTY_ERR_INT_CLR</name>
              <description>The clear bit for SPI_MST_TX_AFIFO_REMPTY_ERR_INT interrupt.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APP2_INT_CLR</name>
              <description>The clear bit for SPI_APP2_INT interrupt.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APP1_INT_CLR</name>
              <description>The clear bit for SPI_APP1_INT interrupt.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_INT_RAW</name>
          <description>SPI interrupt raw register</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_INFIFO_FULL_ERR_INT_RAW</name>
              <description>1: The current data rate of DMA Rx is smaller than that of SPI, which will lose the receive data.  0: Others.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DMA_OUTFIFO_EMPTY_ERR_INT_RAW</name>
              <description>1: The current data rate of DMA TX is smaller than that of SPI. SPI will stop in master mode and send out all 0 in slave mode.  0: Others.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLV_EX_QPI_INT_RAW</name>
              <description>The raw bit for SPI slave Ex_QPI interrupt. 1: SPI slave mode Ex_QPI transmission is ended. 0: Others.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLV_EN_QPI_INT_RAW</name>
              <description>The raw bit for SPI slave En_QPI interrupt. 1: SPI slave mode En_QPI transmission is ended. 0: Others.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLV_CMD7_INT_RAW</name>
              <description>The raw bit for SPI slave CMD7 interrupt. 1: SPI slave mode CMD7 transmission is ended. 0: Others.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLV_CMD8_INT_RAW</name>
              <description>The raw bit for SPI slave CMD8 interrupt. 1: SPI slave mode CMD8 transmission is ended. 0: Others.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLV_CMD9_INT_RAW</name>
              <description>The raw bit for SPI slave CMD9 interrupt. 1: SPI slave mode CMD9 transmission is ended. 0: Others.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLV_CMDA_INT_RAW</name>
              <description>The raw bit for SPI slave CMDA interrupt. 1: SPI slave mode CMDA transmission is ended. 0: Others.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLV_RD_DMA_DONE_INT_RAW</name>
              <description>The raw bit for SPI_SLV_RD_DMA_DONE_INT interrupt. 1: SPI slave mode Rd_DMA transmission is ended. 0: Others.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLV_WR_DMA_DONE_INT_RAW</name>
              <description>The raw bit for SPI_SLV_WR_DMA_DONE_INT interrupt. 1: SPI slave mode Wr_DMA transmission is ended. 0: Others.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLV_RD_BUF_DONE_INT_RAW</name>
              <description>The raw bit for SPI_SLV_RD_BUF_DONE_INT interrupt. 1: SPI slave mode Rd_BUF transmission is ended. 0: Others.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLV_WR_BUF_DONE_INT_RAW</name>
              <description>The raw bit for SPI_SLV_WR_BUF_DONE_INT interrupt. 1: SPI slave mode Wr_BUF transmission is ended. 0: Others.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TRANS_DONE_INT_RAW</name>
              <description>The raw bit for SPI_TRANS_DONE_INT interrupt. 1: SPI master mode transmission is ended. 0: others.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DMA_SEG_TRANS_DONE_INT_RAW</name>
              <description>The raw bit for SPI_DMA_SEG_TRANS_DONE_INT interrupt. 1:  spi master DMA full-duplex/half-duplex seg-conf-trans ends or slave half-duplex seg-trans ends. And data has been pushed to corresponding memory.  0:  seg-conf-trans or seg-trans is not ended or not occurred.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SEG_MAGIC_ERR_INT_RAW</name>
              <description>The raw bit for SPI_SEG_MAGIC_ERR_INT interrupt. 1: The magic value in CONF buffer is error in the DMA seg-conf-trans. 0: others.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLV_BUF_ADDR_ERR_INT_RAW</name>
              <description>The raw bit for SPI_SLV_BUF_ADDR_ERR_INT interrupt. 1: The accessing data address of the current SPI slave mode CPU controlled FD, Wr_BUF or Rd_BUF transmission is bigger than 63. 0: Others.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLV_CMD_ERR_INT_RAW</name>
              <description>The raw bit for SPI_SLV_CMD_ERR_INT interrupt. 1: The slave command value in the current SPI slave HD mode transmission is not supported. 0: Others.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MST_RX_AFIFO_WFULL_ERR_INT_RAW</name>
              <description>The raw bit for SPI_MST_RX_AFIFO_WFULL_ERR_INT interrupt. 1: There is a RX AFIFO write-full error when SPI inputs data in master mode. 0: Others.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MST_TX_AFIFO_REMPTY_ERR_INT_RAW</name>
              <description>The raw bit for SPI_MST_TX_AFIFO_REMPTY_ERR_INT interrupt. 1: There is a TX BUF AFIFO read-empty error when SPI outputs data in master mode. 0: Others.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APP2_INT_RAW</name>
              <description>The raw bit for SPI_APP2_INT interrupt. The value is only controlled by software.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APP1_INT_RAW</name>
              <description>The raw bit for SPI_APP1_INT interrupt. The value is only controlled by software.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_INT_ST</name>
          <description>SPI interrupt status register</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_INFIFO_FULL_ERR_INT_ST</name>
              <description>The status bit for SPI_DMA_INFIFO_FULL_ERR_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DMA_OUTFIFO_EMPTY_ERR_INT_ST</name>
              <description>The status bit for SPI_DMA_OUTFIFO_EMPTY_ERR_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLV_EX_QPI_INT_ST</name>
              <description>The status bit for SPI slave Ex_QPI interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLV_EN_QPI_INT_ST</name>
              <description>The status bit for SPI slave En_QPI interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLV_CMD7_INT_ST</name>
              <description>The status bit for SPI slave CMD7 interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLV_CMD8_INT_ST</name>
              <description>The status bit for SPI slave CMD8 interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLV_CMD9_INT_ST</name>
              <description>The status bit for SPI slave CMD9 interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLV_CMDA_INT_ST</name>
              <description>The status bit for SPI slave CMDA interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLV_RD_DMA_DONE_INT_ST</name>
              <description>The status bit for SPI_SLV_RD_DMA_DONE_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLV_WR_DMA_DONE_INT_ST</name>
              <description>The status bit for SPI_SLV_WR_DMA_DONE_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLV_RD_BUF_DONE_INT_ST</name>
              <description>The status bit for SPI_SLV_RD_BUF_DONE_INT interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLV_WR_BUF_DONE_INT_ST</name>
              <description>The status bit for SPI_SLV_WR_BUF_DONE_INT interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TRANS_DONE_INT_ST</name>
              <description>The status bit for SPI_TRANS_DONE_INT interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DMA_SEG_TRANS_DONE_INT_ST</name>
              <description>The status bit for SPI_DMA_SEG_TRANS_DONE_INT interrupt.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SEG_MAGIC_ERR_INT_ST</name>
              <description>The status bit for SPI_SEG_MAGIC_ERR_INT interrupt.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLV_BUF_ADDR_ERR_INT_ST</name>
              <description>The status bit for SPI_SLV_BUF_ADDR_ERR_INT interrupt.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLV_CMD_ERR_INT_ST</name>
              <description>The status bit for SPI_SLV_CMD_ERR_INT interrupt.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MST_RX_AFIFO_WFULL_ERR_INT_ST</name>
              <description>The status bit for SPI_MST_RX_AFIFO_WFULL_ERR_INT interrupt.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MST_TX_AFIFO_REMPTY_ERR_INT_ST</name>
              <description>The status bit for SPI_MST_TX_AFIFO_REMPTY_ERR_INT interrupt.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APP2_INT_ST</name>
              <description>The status bit for SPI_APP2_INT interrupt.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APP1_INT_ST</name>
              <description>The status bit for SPI_APP1_INT interrupt.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_INT_SET</name>
          <description>SPI interrupt software set register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMA_INFIFO_FULL_ERR_INT_SET</name>
              <description>The software set bit for SPI_DMA_INFIFO_FULL_ERR_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DMA_OUTFIFO_EMPTY_ERR_INT_SET</name>
              <description>The software set bit for SPI_DMA_OUTFIFO_EMPTY_ERR_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLV_EX_QPI_INT_SET</name>
              <description>The software set bit for SPI slave Ex_QPI interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLV_EN_QPI_INT_SET</name>
              <description>The software set bit for SPI slave En_QPI interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLV_CMD7_INT_SET</name>
              <description>The software set bit for SPI slave CMD7 interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLV_CMD8_INT_SET</name>
              <description>The software set bit for SPI slave CMD8 interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLV_CMD9_INT_SET</name>
              <description>The software set bit for SPI slave CMD9 interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLV_CMDA_INT_SET</name>
              <description>The software set bit for SPI slave CMDA interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLV_RD_DMA_DONE_INT_SET</name>
              <description>The software set bit for SPI_SLV_RD_DMA_DONE_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLV_WR_DMA_DONE_INT_SET</name>
              <description>The software set bit for SPI_SLV_WR_DMA_DONE_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLV_RD_BUF_DONE_INT_SET</name>
              <description>The software set bit for SPI_SLV_RD_BUF_DONE_INT interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLV_WR_BUF_DONE_INT_SET</name>
              <description>The software set bit for SPI_SLV_WR_BUF_DONE_INT interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TRANS_DONE_INT_SET</name>
              <description>The software set bit for SPI_TRANS_DONE_INT interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DMA_SEG_TRANS_DONE_INT_SET</name>
              <description>The software set bit for SPI_DMA_SEG_TRANS_DONE_INT interrupt.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SEG_MAGIC_ERR_INT_SET</name>
              <description>The software set bit for SPI_SEG_MAGIC_ERR_INT interrupt.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLV_BUF_ADDR_ERR_INT_SET</name>
              <description>The software set bit for SPI_SLV_BUF_ADDR_ERR_INT interrupt.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLV_CMD_ERR_INT_SET</name>
              <description>The software set bit for SPI_SLV_CMD_ERR_INT interrupt.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MST_RX_AFIFO_WFULL_ERR_INT_SET</name>
              <description>The software set bit for SPI_MST_RX_AFIFO_WFULL_ERR_INT interrupt.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MST_TX_AFIFO_REMPTY_ERR_INT_SET</name>
              <description>The software set bit for SPI_MST_TX_AFIFO_REMPTY_ERR_INT interrupt.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APP2_INT_SET</name>
              <description>The software set bit for SPI_APP2_INT interrupt.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APP1_INT_SET</name>
              <description>The software set bit for SPI_APP1_INT interrupt.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W0</name>
          <description>SPI CPU-controlled buffer0</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF0</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W1</name>
          <description>SPI CPU-controlled buffer1</description>
          <addressOffset>0x9C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF1</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W2</name>
          <description>SPI CPU-controlled buffer2</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF2</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W3</name>
          <description>SPI CPU-controlled buffer3</description>
          <addressOffset>0xA4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF3</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W4</name>
          <description>SPI CPU-controlled buffer4</description>
          <addressOffset>0xA8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF4</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W5</name>
          <description>SPI CPU-controlled buffer5</description>
          <addressOffset>0xAC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF5</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W6</name>
          <description>SPI CPU-controlled buffer6</description>
          <addressOffset>0xB0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF6</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W7</name>
          <description>SPI CPU-controlled buffer7</description>
          <addressOffset>0xB4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF7</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W8</name>
          <description>SPI CPU-controlled buffer8</description>
          <addressOffset>0xB8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF8</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W9</name>
          <description>SPI CPU-controlled buffer9</description>
          <addressOffset>0xBC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF9</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W10</name>
          <description>SPI CPU-controlled buffer10</description>
          <addressOffset>0xC0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF10</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W11</name>
          <description>SPI CPU-controlled buffer11</description>
          <addressOffset>0xC4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF11</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W12</name>
          <description>SPI CPU-controlled buffer12</description>
          <addressOffset>0xC8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF12</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W13</name>
          <description>SPI CPU-controlled buffer13</description>
          <addressOffset>0xCC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF13</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W14</name>
          <description>SPI CPU-controlled buffer14</description>
          <addressOffset>0xD0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF14</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>W15</name>
          <description>SPI CPU-controlled buffer15</description>
          <addressOffset>0xD4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BUF15</name>
              <description>data buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLAVE</name>
          <description>SPI slave control register</description>
          <addressOffset>0xE0</addressOffset>
          <size>0x20</size>
          <resetValue>0x02800000</resetValue>
          <fields>
            <field>
              <name>CLK_MODE</name>
              <description>SPI clock mode bits. 0: SPI clock is off when CS inactive 1: SPI clock is delayed one cycle after CS inactive 2: SPI clock is delayed two cycles after CS inactive 3: SPI clock is alwasy on. Can be configured in CONF state.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_MODE_13</name>
              <description>{CPOL, CPHA},1: support spi clk mode 1 and 3, first edge output data B[0]/B[7].  0: support spi clk mode 0 and 2, first edge output data B[1]/B[6].</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RSCK_DATA_OUT</name>
              <description>It saves half a cycle when tsck is the same as rsck. 1: output data at rsck posedge   0: output data at tsck posedge</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLV_RDDMA_BITLEN_EN</name>
              <description>1: SPI_SLV_DATA_BITLEN stores data bit length of master-read-slave data length in DMA controlled mode(Rd_DMA). 0: others</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLV_WRDMA_BITLEN_EN</name>
              <description>1: SPI_SLV_DATA_BITLEN stores data bit length of master-write-to-slave data length in DMA controlled mode(Wr_DMA). 0: others</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLV_RDBUF_BITLEN_EN</name>
              <description>1: SPI_SLV_DATA_BITLEN stores data bit length of master-read-slave data length in CPU controlled mode(Rd_BUF). 0: others</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLV_WRBUF_BITLEN_EN</name>
              <description>1: SPI_SLV_DATA_BITLEN stores data bit length of master-write-to-slave data length in CPU controlled mode(Wr_BUF). 0: others</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_SEG_MAGIC_VALUE</name>
              <description>The magic value of BM table in master DMA seg-trans.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE</name>
              <description>Set SPI work mode. 1: slave mode 0: master mode.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SOFT_RESET</name>
              <description>Software reset enable, reset the spi clock line cs line and data lines. Can be configured in CONF state.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>USR_CONF</name>
              <description>1: Enable the DMA CONF phase of current seg-trans operation, which means seg-trans will start. 0: This is not seg-trans mode.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLAVE1</name>
          <description>SPI slave control register 1</description>
          <addressOffset>0xE4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLV_DATA_BITLEN</name>
              <description>The transferred data bit length in SPI slave FD and HD mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>18</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLV_LAST_COMMAND</name>
              <description>In the slave mode it is the value of command.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLV_LAST_ADDR</name>
              <description>In the slave mode it is the value of address.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLK_GATE</name>
          <description>SPI module clock and register clock control</description>
          <addressOffset>0xE8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CLK_EN</name>
              <description>Set this bit to enable clk gate</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MST_CLK_ACTIVE</name>
              <description>Set this bit to power on the SPI module clock.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MST_CLK_SEL</name>
              <description>This bit is used to select SPI module clock source in master mode. 1: PLL_CLK_80M. 0: XTAL CLK.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>Version control</description>
          <addressOffset>0xF0</addressOffset>
          <size>0x20</size>
          <resetValue>0x02101190</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>SPI register version.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="SPI2">
      <name>SPI3</name>
      <description>SPI (Serial Peripheral Interface) Controller</description>
      <baseAddress>0x60025000</baseAddress>
      <interrupt>
        <name>SPI3</name>
        <value>22</value>
      </interrupt>
    </peripheral>
    <peripheral>
      <name>SYSTEM</name>
      <description>System</description>
      <groupName>SYSTEM</groupName>
      <baseAddress>0x600C0000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xA8</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>CORE_1_CONTROL_0</name>
          <description>Core0 control regiter 0</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000004</resetValue>
          <fields>
            <field>
              <name>CONTROL_CORE_1_RUNSTALL</name>
              <description>Set 1 to stall core1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CONTROL_CORE_1_CLKGATE_EN</name>
              <description>Set 1 to open core1 clock</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CONTROL_CORE_1_RESETING</name>
              <description>Set 1 to let core1 reset</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CORE_1_CONTROL_1</name>
          <description>Core0 control regiter 1</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CONTROL_CORE_1_MESSAGE</name>
              <description>it's only a R/W register, no function, software can write any value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_PERI_CLK_EN</name>
          <description>cpu_peripheral clock configuration register</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CLK_EN_ASSIST_DEBUG</name>
              <description>Set 1 to open assist_debug module clock</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EN_DEDICATED_GPIO</name>
              <description>Set 1 to open dedicated_gpio module clk</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_PERI_RST_EN</name>
          <description>cpu_peripheral reset configuration regsiter</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <resetValue>0x000000C0</resetValue>
          <fields>
            <field>
              <name>RST_EN_ASSIST_DEBUG</name>
              <description>Set 1 to let assist_debug module reset</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RST_EN_DEDICATED_GPIO</name>
              <description>Set 1 to let dedicated_gpio module reset</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_PER_CONF</name>
          <description>cpu peripheral clock configuration register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000000C</resetValue>
          <fields>
            <field>
              <name>CPUPERIOD_SEL</name>
              <description>This field used to sel cpu clock frequent.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FREQ_SEL</name>
              <description>This field used to sel pll frequent.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CPU_WAIT_MODE_FORCE_ON</name>
              <description>Set 1 to force cpu_waiti_clk enable.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CPU_WAITI_DELAY_NUM</name>
              <description>This field used to set delay cycle when cpu enter waiti mode, after delay waiti_clk will close</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MEM_PD_MASK</name>
          <description>memory power down mask configuration register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>LSLP_MEM_PD_MASK</name>
              <description>Set 1 to mask memory power down.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PERIP_CLK_EN0</name>
          <description>peripheral clock configuration regsiter 0</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <resetValue>0xF9C1E06F</resetValue>
          <fields>
            <field>
              <name>TIMERS_CLK_EN</name>
              <description>Set 1 to enable TIMERS clock</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI01_CLK_EN</name>
              <description>Set 1 to enable SPI01 clock</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UART_CLK_EN</name>
              <description>Set 1 to enable UART clock</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDG_CLK_EN</name>
              <description>Set 1 to enable WDG clock</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S0_CLK_EN</name>
              <description>Set 1 to enable I2S0 clock</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UART1_CLK_EN</name>
              <description>Set 1 to enable UART1 clock</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI2_CLK_EN</name>
              <description>Set 1 to enable SPI2 clock</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_EXT0_CLK_EN</name>
              <description>Set 1 to enable I2C_EXT0 clock</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UHCI0_CLK_EN</name>
              <description>Set 1 to enable UHCI0 clock</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RMT_CLK_EN</name>
              <description>Set 1 to enable RMT clock</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PCNT_CLK_EN</name>
              <description>Set 1 to enable PCNT clock</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LEDC_CLK_EN</name>
              <description>Set 1 to enable LEDC clock</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UHCI1_CLK_EN</name>
              <description>Set 1 to enable UHCI1 clock</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMERGROUP_CLK_EN</name>
              <description>Set 1 to enable TIMERGROUP clock</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EFUSE_CLK_EN</name>
              <description>Set 1 to enable EFUSE clock</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMERGROUP1_CLK_EN</name>
              <description>Set 1 to enable TIMERGROUP1 clock</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI3_CLK_EN</name>
              <description>Set 1 to enable SPI3 clock</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM0_CLK_EN</name>
              <description>Set 1 to enable PWM0 clock</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_EXT1_CLK_EN</name>
              <description>Set 1 to enable I2C_EXT1 clock</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAN_CLK_EN</name>
              <description>Set 1 to enable CAN clock</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM1_CLK_EN</name>
              <description>Set 1 to enable PWM1 clock</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S1_CLK_EN</name>
              <description>Set 1 to enable I2S1 clock</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI2_DMA_CLK_EN</name>
              <description>Set 1 to enable SPI2_DMA clock</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_CLK_EN</name>
              <description>Set 1 to enable USB clock</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UART_MEM_CLK_EN</name>
              <description>Set 1 to enable UART_MEM clock</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM2_CLK_EN</name>
              <description>Set 1 to enable PWM2 clock</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM3_CLK_EN</name>
              <description>Set 1 to enable PWM3 clock</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI3_DMA_CLK_EN</name>
              <description>Set 1 to enable SPI4 clock</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APB_SARADC_CLK_EN</name>
              <description>Set 1 to enable APB_SARADC clock</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SYSTIMER_CLK_EN</name>
              <description>Set 1 to enable SYSTEMTIMER clock</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC2_ARB_CLK_EN</name>
              <description>Set 1 to enable ADC2_ARB clock</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI4_CLK_EN</name>
              <description>Set 1 to enable SPI4 clock</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PERIP_CLK_EN1</name>
          <description>peripheral clock configuration regsiter 1</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000600</resetValue>
          <fields>
            <field>
              <name>PERI_BACKUP_CLK_EN</name>
              <description>Set 1 to enable BACKUP clock</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CRYPTO_AES_CLK_EN</name>
              <description>Set 1 to enable AES clock</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CRYPTO_SHA_CLK_EN</name>
              <description>Set 1 to enable SHA clock</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CRYPTO_RSA_CLK_EN</name>
              <description>Set 1 to enable RSA clock</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CRYPTO_DS_CLK_EN</name>
              <description>Set 1 to enable DS clock</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CRYPTO_HMAC_CLK_EN</name>
              <description>Set 1 to enable HMAC clock</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_CLK_EN</name>
              <description>Set 1 to enable DMA clock</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_HOST_CLK_EN</name>
              <description>Set 1 to enable SDIO_HOST clock</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_CAM_CLK_EN</name>
              <description>Set 1 to enable LCD_CAM clock</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UART2_CLK_EN</name>
              <description>Set 1 to enable UART2 clock</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_DEVICE_CLK_EN</name>
              <description>Set 1 to enable USB_DEVICE clock</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PERIP_RST_EN0</name>
          <description>peripheral reset configuration register0</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMERS_RST</name>
              <description>Set 1 to let TIMERS reset</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI01_RST</name>
              <description>Set 1 to let SPI01 reset</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UART_RST</name>
              <description>Set 1 to let UART reset</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDG_RST</name>
              <description>Set 1 to let WDG reset</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S0_RST</name>
              <description>Set 1 to let I2S0 reset</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UART1_RST</name>
              <description>Set 1 to let UART1 reset</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI2_RST</name>
              <description>Set 1 to let SPI2 reset</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_EXT0_RST</name>
              <description>Set 1 to let I2C_EXT0 reset</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UHCI0_RST</name>
              <description>Set 1 to let UHCI0 reset</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RMT_RST</name>
              <description>Set 1 to let RMT reset</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PCNT_RST</name>
              <description>Set 1 to let PCNT reset</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LEDC_RST</name>
              <description>Set 1 to let LEDC reset</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UHCI1_RST</name>
              <description>Set 1 to let UHCI1 reset</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMERGROUP_RST</name>
              <description>Set 1 to let TIMERGROUP reset</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EFUSE_RST</name>
              <description>Set 1 to let EFUSE reset</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMERGROUP1_RST</name>
              <description>Set 1 to let TIMERGROUP1 reset</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI3_RST</name>
              <description>Set 1 to let SPI3 reset</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM0_RST</name>
              <description>Set 1 to let PWM0 reset</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_EXT1_RST</name>
              <description>Set 1 to let I2C_EXT1 reset</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CAN_RST</name>
              <description>Set 1 to let CAN reset</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM1_RST</name>
              <description>Set 1 to let PWM1 reset</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2S1_RST</name>
              <description>Set 1 to let I2S1 reset</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI2_DMA_RST</name>
              <description>Set 1 to let SPI2 reset</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_RST</name>
              <description>Set 1 to let USB reset</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UART_MEM_RST</name>
              <description>Set 1 to let UART_MEM reset</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM2_RST</name>
              <description>Set 1 to let PWM2 reset</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM3_RST</name>
              <description>Set 1 to let PWM3 reset</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI3_DMA_RST</name>
              <description>Set 1 to let SPI3 reset</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APB_SARADC_RST</name>
              <description>Set 1 to let APB_SARADC reset</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SYSTIMER_RST</name>
              <description>Set 1 to let SYSTIMER reset</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC2_ARB_RST</name>
              <description>Set 1 to let ADC2_ARB reset</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI4_RST</name>
              <description>Set 1 to let SPI4 reset</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PERIP_RST_EN1</name>
          <description>peripheral reset configuration regsiter 1</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <resetValue>0x000001FE</resetValue>
          <fields>
            <field>
              <name>PERI_BACKUP_RST</name>
              <description>Set 1 to let BACKUP reset</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CRYPTO_AES_RST</name>
              <description>Set 1 to let CRYPTO_AES reset</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CRYPTO_SHA_RST</name>
              <description>Set 1 to let CRYPTO_SHA reset</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CRYPTO_RSA_RST</name>
              <description>Set 1 to let CRYPTO_RSA reset</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CRYPTO_DS_RST</name>
              <description>Set 1 to let CRYPTO_DS reset</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CRYPTO_HMAC_RST</name>
              <description>Set 1 to let CRYPTO_HMAC reset</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_RST</name>
              <description>Set 1 to let DMA reset</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_HOST_RST</name>
              <description>Set 1 to let SDIO_HOST reset</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_CAM_RST</name>
              <description>Set 1 to let LCD_CAM reset</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UART2_RST</name>
              <description>Set 1 to let UART2 reset</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_DEVICE_RST</name>
              <description>Set 1 to let USB_DEVICE reset</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BT_LPCK_DIV_INT</name>
          <description>low power clock frequent division factor configuration regsiter</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <resetValue>0x000000FF</resetValue>
          <fields>
            <field>
              <name>BT_LPCK_DIV_NUM</name>
              <description>This field is lower power clock frequent division factor</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BT_LPCK_DIV_FRAC</name>
          <description>low power clock configuration register</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <resetValue>0x02001001</resetValue>
          <fields>
            <field>
              <name>BT_LPCK_DIV_B</name>
              <description>This field is lower power clock frequent division factor b</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_LPCK_DIV_A</name>
              <description>This field is lower power clock frequent division factor a</description>
              <bitOffset>12</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LPCLK_SEL_RTC_SLOW</name>
              <description>Set 1 to select rtc-slow clock as rtc low power clock</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LPCLK_SEL_8M</name>
              <description>Set 1 to select 8m clock as rtc low power clock</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LPCLK_SEL_XTAL</name>
              <description>Set 1 to select xtal clock as rtc low power clock</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LPCLK_SEL_XTAL32K</name>
              <description>Set 1 to select xtal32k clock as low power clock</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LPCLK_RTC_EN</name>
              <description>Set 1 to enable RTC low power clock</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INTR_FROM_CPU_0</name>
          <description>interrupt source register 0</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_INTR_FROM_CPU_0</name>
              <description>Set 1 to generate cpu interrupt 0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INTR_FROM_CPU_1</name>
          <description>interrupt source register 1</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_INTR_FROM_CPU_1</name>
              <description>Set 1 to generate cpu interrupt 1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INTR_FROM_CPU_2</name>
          <description>interrupt source register 2</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_INTR_FROM_CPU_2</name>
              <description>Set 1 to generate cpu interrupt 2</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_INTR_FROM_CPU_3</name>
          <description>interrupt source register 3</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CPU_INTR_FROM_CPU_3</name>
              <description>Set 1 to generate cpu interrupt 3</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RSA_PD_CTRL</name>
          <description>rsa memory power control register</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>RSA_MEM_PD</name>
              <description>Set 1 to power down RSA memory. This bit has the lowest priority.When Digital Signature occupies the RSA, this bit is invalid.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RSA_MEM_FORCE_PU</name>
              <description>Set 1 to force power up RSA memory, this bit has the second highest priority.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RSA_MEM_FORCE_PD</name>
              <description>Set 1 to force power down RSA memory,this bit has the highest priority.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EDMA_CTRL</name>
          <description>EDMA control register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>EDMA_CLK_ON</name>
              <description>Set 1 to enable EDMA clock.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EDMA_RESET</name>
              <description>Set 1 to let EDMA reset</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_CONTROL</name>
          <description>Cache control register</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000005</resetValue>
          <fields>
            <field>
              <name>ICACHE_CLK_ON</name>
              <description>Set 1 to enable icache clock</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ICACHE_RESET</name>
              <description>Set 1 to let icache reset</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_CLK_ON</name>
              <description>Set 1 to enable dcache clock</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DCACHE_RESET</name>
              <description>Set 1 to let dcache reset</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXTERNAL_DEVICE_ENCRYPT_DECRYPT_CONTROL</name>
          <description>External memory encrypt and decrypt control register</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ENABLE_SPI_MANUAL_ENCRYPT</name>
              <description>Set 1 to enable the SPI manual encrypt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENABLE_DOWNLOAD_DB_ENCRYPT</name>
              <description>Set 1 to enable download DB encrypt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENABLE_DOWNLOAD_G0CB_DECRYPT</name>
              <description>Set 1 to enable download G0CB decrypt</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENABLE_DOWNLOAD_MANUAL_ENCRYPT</name>
              <description>Set 1 to enable download manual encrypt</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_FASTMEM_CONFIG</name>
          <description>RTC fast memory configuration register</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <resetValue>0x7FF00000</resetValue>
          <fields>
            <field>
              <name>RTC_MEM_CRC_START</name>
              <description>Set 1 to start the CRC of RTC memory</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_MEM_CRC_ADDR</name>
              <description>This field is used to set address of RTC memory for CRC.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_MEM_CRC_LEN</name>
              <description>This field is used to set length of RTC memory for CRC based on start address.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_MEM_CRC_FINISH</name>
              <description>This bit stores the status of RTC memory CRC.1 means finished.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_FASTMEM_CRC</name>
          <description>RTC fast memory CRC control register</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_MEM_CRC_RES</name>
              <description>This field stores the CRC result of RTC memory.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REDUNDANT_ECO_CTRL</name>
          <description>******* Description ***********</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>REDUNDANT_ECO_DRIVE</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>REDUNDANT_ECO_RESULT</name>
              <description>******* Description ***********</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLOCK_GATE</name>
          <description>******* Description ***********</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>CLK_EN</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYSCLK_CONF</name>
          <description>System clock configuration register.</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>PRE_DIV_CNT</name>
              <description>This field is used to set the count of prescaler of XTAL_CLK.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SOC_CLK_SEL</name>
              <description>This field is used to select soc clock.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_XTAL_FREQ</name>
              <description>This field is used to read xtal frequency in MHz.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CLK_DIV_EN</name>
              <description>Reserved.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MEM_PVT</name>
          <description>******* Description ***********</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>MEM_PATH_LEN</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_ERR_CNT_CLR</name>
              <description>******* Description ***********</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MONITOR_EN</name>
              <description>******* Description ***********</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_TIMING_ERR_CNT</name>
              <description>******* Description ***********</description>
              <bitOffset>6</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MEM_VT_SEL</name>
              <description>******* Description ***********</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMB_PVT_LVT_CONF</name>
          <description>******* Description ***********</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>COMB_PATH_LEN_LVT</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMB_ERR_CNT_CLR_LVT</name>
              <description>******* Description ***********</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>COMB_PVT_MONITOR_EN_LVT</name>
              <description>******* Description ***********</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMB_PVT_NVT_CONF</name>
          <description>******* Description ***********</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>COMB_PATH_LEN_NVT</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMB_ERR_CNT_CLR_NVT</name>
              <description>******* Description ***********</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>COMB_PVT_MONITOR_EN_NVT</name>
              <description>******* Description ***********</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMB_PVT_HVT_CONF</name>
          <description>******* Description ***********</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>COMB_PATH_LEN_HVT</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMB_ERR_CNT_CLR_HVT</name>
              <description>******* Description ***********</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>COMB_PVT_MONITOR_EN_HVT</name>
              <description>******* Description ***********</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMB_PVT_ERR_LVT_SITE0</name>
          <description>******* Description ***********</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>COMB_TIMING_ERR_CNT_LVT_SITE0</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMB_PVT_ERR_NVT_SITE0</name>
          <description>******* Description ***********</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>COMB_TIMING_ERR_CNT_NVT_SITE0</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMB_PVT_ERR_HVT_SITE0</name>
          <description>******* Description ***********</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>COMB_TIMING_ERR_CNT_HVT_SITE0</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMB_PVT_ERR_LVT_SITE1</name>
          <description>******* Description ***********</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>COMB_TIMING_ERR_CNT_LVT_SITE1</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMB_PVT_ERR_NVT_SITE1</name>
          <description>******* Description ***********</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>COMB_TIMING_ERR_CNT_NVT_SITE1</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMB_PVT_ERR_HVT_SITE1</name>
          <description>******* Description ***********</description>
          <addressOffset>0x88</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>COMB_TIMING_ERR_CNT_HVT_SITE1</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMB_PVT_ERR_LVT_SITE2</name>
          <description>******* Description ***********</description>
          <addressOffset>0x8C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>COMB_TIMING_ERR_CNT_LVT_SITE2</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMB_PVT_ERR_NVT_SITE2</name>
          <description>******* Description ***********</description>
          <addressOffset>0x90</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>COMB_TIMING_ERR_CNT_NVT_SITE2</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMB_PVT_ERR_HVT_SITE2</name>
          <description>******* Description ***********</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>COMB_TIMING_ERR_CNT_HVT_SITE2</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMB_PVT_ERR_LVT_SITE3</name>
          <description>******* Description ***********</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>COMB_TIMING_ERR_CNT_LVT_SITE3</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMB_PVT_ERR_NVT_SITE3</name>
          <description>******* Description ***********</description>
          <addressOffset>0x9C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>COMB_TIMING_ERR_CNT_NVT_SITE3</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMB_PVT_ERR_HVT_SITE3</name>
          <description>******* Description ***********</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>COMB_TIMING_ERR_CNT_HVT_SITE3</name>
              <description>******* Description ***********</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>version register</description>
          <addressOffset>0xFFC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02101220</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>version register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SYSTIMER</name>
      <description>System Timer</description>
      <groupName>SYSTIMER</groupName>
      <baseAddress>0x60023000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x90</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>SYSTIMER_TARGET0</name>
        <value>57</value>
      </interrupt>
      <interrupt>
        <name>SYSTIMER_TARGET1</name>
        <value>58</value>
      </interrupt>
      <interrupt>
        <name>SYSTIMER_TARGET2</name>
        <value>59</value>
      </interrupt>
      <registers>
        <register>
          <name>CONF</name>
          <description>Configure system timer clock</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x46000000</resetValue>
          <fields>
            <field>
              <name>SYSTIMER_CLK_FO</name>
              <description>systimer clock force on</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TARGET2_WORK_EN</name>
              <description>target2 work enable</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TARGET1_WORK_EN</name>
              <description>target1 work enable</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TARGET0_WORK_EN</name>
              <description>target0 work enable</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER_UNIT1_CORE1_STALL_EN</name>
              <description>If timer unit1 is stalled when core1 stalled</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER_UNIT1_CORE0_STALL_EN</name>
              <description>If timer unit1 is stalled when core0 stalled</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER_UNIT0_CORE1_STALL_EN</name>
              <description>If timer unit0 is stalled when core1 stalled</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER_UNIT0_CORE0_STALL_EN</name>
              <description>If timer unit0 is stalled when core0 stalled</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER_UNIT1_WORK_EN</name>
              <description>timer unit1 work enable</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER_UNIT0_WORK_EN</name>
              <description>timer unit0 work enable</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EN</name>
              <description>register file clk gating</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UNIT0_OP</name>
          <description>system timer unit0 value update register</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_UNIT0_VALUE_VALID</name>
              <description>timer value is sync and valid</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER_UNIT0_UPDATE</name>
              <description>update timer_unit0</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UNIT1_OP</name>
          <description>system timer unit1 value update register</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_UNIT1_VALUE_VALID</name>
              <description>timer value is sync and valid</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMER_UNIT1_UPDATE</name>
              <description>update timer unit1</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UNIT0_LOAD_HI</name>
          <description>system timer unit0 value high load register</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_UNIT0_LOAD_HI</name>
              <description>timer unit0 load high 20 bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UNIT0_LOAD_LO</name>
          <description>system timer unit0 value low load register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_UNIT0_LOAD_LO</name>
              <description>timer unit0 load low 32 bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UNIT1_LOAD_HI</name>
          <description>system timer unit1 value high load register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_UNIT1_LOAD_HI</name>
              <description>timer unit1 load high 20 bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UNIT1_LOAD_LO</name>
          <description>system timer unit1 value low load register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_UNIT1_LOAD_LO</name>
              <description>timer unit1 load low 32 bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TARGET0_HI</name>
          <description>system timer comp0 value high register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_TARGET0_HI</name>
              <description>timer taget0 high 20 bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TARGET0_LO</name>
          <description>system timer comp0 value low register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_TARGET0_LO</name>
              <description>timer taget0 low 32 bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TARGET1_HI</name>
          <description>system timer comp1 value high register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_TARGET1_HI</name>
              <description>timer taget1 high 20 bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TARGET1_LO</name>
          <description>system timer comp1 value low register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_TARGET1_LO</name>
              <description>timer taget1 low 32 bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TARGET2_HI</name>
          <description>system timer comp2 value high register</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_TARGET2_HI</name>
              <description>timer taget2 high 20 bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TARGET2_LO</name>
          <description>system timer comp2 value low register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_TARGET2_LO</name>
              <description>timer taget2 low 32 bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TARGET0_CONF</name>
          <description>system timer comp0 target mode register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TARGET0_PERIOD</name>
              <description>target0 period</description>
              <bitOffset>0</bitOffset>
              <bitWidth>26</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TARGET0_PERIOD_MODE</name>
              <description>Set target0 to period mode</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TARGET0_TIMER_UNIT_SEL</name>
              <description>select which unit to compare</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TARGET1_CONF</name>
          <description>system timer comp1 target mode register</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TARGET1_PERIOD</name>
              <description>target1 period</description>
              <bitOffset>0</bitOffset>
              <bitWidth>26</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TARGET1_PERIOD_MODE</name>
              <description>Set target1 to period mode</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TARGET1_TIMER_UNIT_SEL</name>
              <description>select which unit to compare</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TARGET2_CONF</name>
          <description>system timer comp2 target mode register</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TARGET2_PERIOD</name>
              <description>target2 period</description>
              <bitOffset>0</bitOffset>
              <bitWidth>26</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TARGET2_PERIOD_MODE</name>
              <description>Set target2 to period mode</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TARGET2_TIMER_UNIT_SEL</name>
              <description>select which unit to compare</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UNIT0_VALUE_HI</name>
          <description>system timer unit0 value high register</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_UNIT0_VALUE_HI</name>
              <description>timer read value high 20bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UNIT0_VALUE_LO</name>
          <description>system timer unit0 value low register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_UNIT0_VALUE_LO</name>
              <description>timer read value low 32bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UNIT1_VALUE_HI</name>
          <description>system timer unit1 value high register</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_UNIT1_VALUE_HI</name>
              <description>timer read value high 20bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UNIT1_VALUE_LO</name>
          <description>system timer unit1 value low register</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_UNIT1_VALUE_LO</name>
              <description>timer read value low 32bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMP0_LOAD</name>
          <description>system timer comp0 conf sync register</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_COMP0_LOAD</name>
              <description>timer comp0 sync enable signal</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMP1_LOAD</name>
          <description>system timer comp1 conf sync register</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_COMP1_LOAD</name>
              <description>timer comp1 sync enable signal</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMP2_LOAD</name>
          <description>system timer comp2 conf sync register</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_COMP2_LOAD</name>
              <description>timer comp2 sync enable signal</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UNIT0_LOAD</name>
          <description>system timer unit0 conf sync register</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_UNIT0_LOAD</name>
              <description>timer unit0 sync enable signal</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UNIT1_LOAD</name>
          <description>system timer unit1 conf sync register</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_UNIT1_LOAD</name>
              <description>timer unit1 sync enable signal</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>systimer interrupt enable register</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TARGET0_INT_ENA</name>
              <description>interupt0 enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TARGET1_INT_ENA</name>
              <description>interupt1 enable</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TARGET2_INT_ENA</name>
              <description>interupt2 enable</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW</name>
          <description>systimer interrupt raw register</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TARGET0_INT_RAW</name>
              <description>interupt0 raw</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TARGET1_INT_RAW</name>
              <description>interupt1 raw</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TARGET2_INT_RAW</name>
              <description>interupt2 raw</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>systimer interrupt clear register</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TARGET0_INT_CLR</name>
              <description>interupt0 clear</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TARGET1_INT_CLR</name>
              <description>interupt1 clear</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TARGET2_INT_CLR</name>
              <description>interupt2 clear</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST</name>
          <description>systimer interrupt status register</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TARGET0_INT_ST</name>
              <description>interupt0 status</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TARGET1_INT_ST</name>
              <description>interupt1 status</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TARGET2_INT_ST</name>
              <description>interupt2 status</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REAL_TARGET0_LO</name>
          <description>system timer comp0 actual target value low register</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TARGET0_LO_RO</name>
              <description>actual target value value low 32bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REAL_TARGET0_HI</name>
          <description>system timer comp0 actual target value high register</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TARGET0_HI_RO</name>
              <description>actual target value value high 20bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REAL_TARGET1_LO</name>
          <description>system timer comp1 actual target value low register</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TARGET1_LO_RO</name>
              <description>actual target value value low 32bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REAL_TARGET1_HI</name>
          <description>system timer comp1 actual target value high register</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TARGET1_HI_RO</name>
              <description>actual target value value high 20bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REAL_TARGET2_LO</name>
          <description>system timer comp2 actual target value low register</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TARGET2_LO_RO</name>
              <description>actual target value value low 32bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REAL_TARGET2_HI</name>
          <description>system timer comp2 actual target value high register</description>
          <addressOffset>0x88</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TARGET2_HI_RO</name>
              <description>actual target value value high 20bits</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>system timer version control register</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02012251</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>systimer register version</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TIMG0</name>
      <description>Timer Group</description>
      <groupName>TIMG</groupName>
      <baseAddress>0x6001F000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x8C</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>TG0_T0_LEVEL</name>
        <value>50</value>
      </interrupt>
      <interrupt>
        <name>TG0_T1_LEVEL</name>
        <value>51</value>
      </interrupt>
      <interrupt>
        <name>TG0_WDT_LEVEL</name>
        <value>52</value>
      </interrupt>
      <registers>
        <register>
          <dim>2</dim>
          <dimIncrement>0x24</dimIncrement>
          <name>T%sCONFIG</name>
          <description>Timer %s configuration register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x60002000</resetValue>
          <fields>
            <field>
              <name>USE_XTAL</name>
              <description>1: Use XTAL_CLK as the source clock of timer group. 0: Use APB_CLK as the source clock of timer group.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ALARM_EN</name>
              <description>When set, the alarm is enabled. This bit is automatically cleared once an
alarm occurs.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIVIDER</name>
              <description>Timer %s clock (T%s_clk) prescaler value.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AUTORELOAD</name>
              <description>When set, timer %s auto-reload at alarm is enabled.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INCREASE</name>
              <description>When set, the timer %s time-base counter will increment every clock tick. When
cleared, the timer %s time-base counter will decrement.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EN</name>
              <description>When set, the timer %s time-base counter is enabled.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x24</dimIncrement>
          <name>T%sLO</name>
          <description>Timer %s current value, low 32 bits</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LO</name>
              <description>After writing to TIMG_T%sUPDATE_REG, the low 32 bits of the time-base counter
of timer %s can be read here.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x24</dimIncrement>
          <name>T%sHI</name>
          <description>Timer %s current value, high 22 bits</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>HI</name>
              <description>After writing to TIMG_T%sUPDATE_REG, the high 22 bits of the time-base counter
of timer %s can be read here.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x24</dimIncrement>
          <name>T%sUPDATE</name>
          <description>Write to copy current timer value to TIMGn_T%s_(LO/HI)_REG</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>UPDATE</name>
              <description>After writing 0 or 1 to TIMG_T%sUPDATE_REG, the counter value is latched.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x24</dimIncrement>
          <name>T%sALARMLO</name>
          <description>Timer %s alarm value, low 32 bits</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ALARM_LO</name>
              <description>Timer %s alarm trigger time-base counter value, low 32 bits.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x24</dimIncrement>
          <name>T%sALARMHI</name>
          <description>Timer %s alarm value, high bits</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ALARM_HI</name>
              <description>Timer %s alarm trigger time-base counter value, high 22 bits.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x24</dimIncrement>
          <name>T%sLOADLO</name>
          <description>Timer %s reload value, low 32 bits</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LOAD_LO</name>
              <description>Low 32 bits of the value that a reload will load onto timer %s time-base
Counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x24</dimIncrement>
          <name>T%sLOADHI</name>
          <description>Timer %s reload value, high 22 bits</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LOAD_HI</name>
              <description>High 22 bits of the value that a reload will load onto timer %s time-base
counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>2</dim>
          <dimIncrement>0x24</dimIncrement>
          <name>T%sLOAD</name>
          <description>Write to reload timer from TIMG_T%s_(LOADLOLOADHI)_REG</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LOAD</name>
              <description>
Write any value to trigger a timer %s time-base counter reload.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDTCONFIG0</name>
          <description>Watchdog timer configuration register</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <resetValue>0x0004C000</resetValue>
          <fields>
            <field>
              <name>WDT_APPCPU_RESET_EN</name>
              <description>Reserved</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_PROCPU_RESET_EN</name>
              <description>WDT reset CPU enable.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_FLASHBOOT_MOD_EN</name>
              <description>When set, Flash boot protection is enabled.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_SYS_RESET_LENGTH</name>
              <description>System reset signal length selection. 0: 100 ns, 1: 200 ns,
2: 300 ns, 3: 400 ns, 4: 500 ns, 5: 800 ns, 6: 1.6 us, 7: 3.2 us.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_CPU_RESET_LENGTH</name>
              <description>CPU reset signal length selection. 0: 100 ns, 1: 200 ns,
2: 300 ns, 3: 400 ns, 4: 500 ns, 5: 800 ns, 6: 1.6 us, 7: 3.2 us.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_STG3</name>
              <description>Stage 3 configuration. 0: off, 1: interrupt, 2: reset CPU, 3: reset system.
</description>
              <bitOffset>23</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_STG2</name>
              <description>Stage 2 configuration. 0: off, 1: interrupt, 2: reset CPU, 3: reset system.
</description>
              <bitOffset>25</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_STG1</name>
              <description>Stage 1 configuration. 0: off, 1: interrupt, 2: reset CPU, 3: reset system.
</description>
              <bitOffset>27</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_STG0</name>
              <description>Stage 0 configuration. 0: off, 1: interrupt, 2: reset CPU, 3: reset system.
</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_EN</name>
              <description>When set, MWDT is enabled.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDTCONFIG1</name>
          <description>Watchdog timer prescaler register</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00010000</resetValue>
          <fields>
            <field>
              <name>WDT_CLK_PRESCALE</name>
              <description>MWDT clock prescaler value. MWDT clock period = 12.5 ns *
TIMG_WDT_CLK_PRESCALE.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDTCONFIG2</name>
          <description>Watchdog timer stage 0 timeout value</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <resetValue>0x018CBA80</resetValue>
          <fields>
            <field>
              <name>WDT_STG0_HOLD</name>
              <description>Stage 0 timeout value, in MWDT clock cycles.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDTCONFIG3</name>
          <description>Watchdog timer stage 1 timeout value</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <resetValue>0x07FFFFFF</resetValue>
          <fields>
            <field>
              <name>WDT_STG1_HOLD</name>
              <description>Stage 1 timeout value, in MWDT clock cycles.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDTCONFIG4</name>
          <description>Watchdog timer stage 2 timeout value</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <resetValue>0x000FFFFF</resetValue>
          <fields>
            <field>
              <name>WDT_STG2_HOLD</name>
              <description>Stage 2 timeout value, in MWDT clock cycles.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDTCONFIG5</name>
          <description>Watchdog timer stage 3 timeout value</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <resetValue>0x000FFFFF</resetValue>
          <fields>
            <field>
              <name>WDT_STG3_HOLD</name>
              <description>Stage 3 timeout value, in MWDT clock cycles.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDTFEED</name>
          <description>Write to feed the watchdog timer</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>WDT_FEED</name>
              <description>Write any value to feed the MWDT. (WO)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDTWPROTECT</name>
          <description>Watchdog write protect register</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <resetValue>0x50D83AA1</resetValue>
          <fields>
            <field>
              <name>WDT_WKEY</name>
              <description>If the register contains a different value than its reset value, write
protection is enabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTCCALICFG</name>
          <description>RTC calibration configure register</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <resetValue>0x00013000</resetValue>
          <fields>
            <field>
              <name>RTC_CALI_START_CYCLING</name>
              <description>Reserved</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_CALI_CLK_SEL</name>
              <description>0:rtc slow clock. 1:clk_80m.  2:xtal_32k.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_CALI_RDY</name>
              <description>Reserved</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_CALI_MAX</name>
              <description>Reserved</description>
              <bitOffset>16</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_CALI_START</name>
              <description>Reserved</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTCCALICFG1</name>
          <description>RTC calibration configure1 register</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_CALI_CYCLING_DATA_VLD</name>
              <description>Reserved</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_CALI_VALUE</name>
              <description>Reserved</description>
              <bitOffset>7</bitOffset>
              <bitWidth>25</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA_TIMERS</name>
          <description>Interrupt enable bits</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>T0_INT_ENA</name>
              <description>The interrupt enable bit for the TIMG_T0_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>T1_INT_ENA</name>
              <description>The interrupt enable bit for the TIMG_T1_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_INT_ENA</name>
              <description>The interrupt enable bit for the TIMG_WDT_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW_TIMERS</name>
          <description>Raw interrupt status</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>T0_INT_RAW</name>
              <description>The raw interrupt status bit for the TIMG_T0_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>T1_INT_RAW</name>
              <description>The raw interrupt status bit for the TIMG_T1_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>WDT_INT_RAW</name>
              <description>The raw interrupt status bit for the TIMG_WDT_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST_TIMERS</name>
          <description>Masked interrupt status</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>T0_INT_ST</name>
              <description>The masked interrupt status bit for the TIMG_T0_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>T1_INT_ST</name>
              <description>The masked interrupt status bit for the TIMG_T1_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>WDT_INT_ST</name>
              <description>The masked interrupt status bit for the TIMG_WDT_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR_TIMERS</name>
          <description>Interrupt clear bits</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>T0_INT_CLR</name>
              <description>Set this bit to clear the TIMG_T0_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>T1_INT_CLR</name>
              <description>Set this bit to clear the TIMG_T1_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>WDT_INT_CLR</name>
              <description>Set this bit to clear the TIMG_WDT_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTCCALICFG2</name>
          <description>Timer group calibration register</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFF98</resetValue>
          <fields>
            <field>
              <name>RTC_CALI_TIMEOUT</name>
              <description>RTC calibration timeout indicator</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_CALI_TIMEOUT_RST_CNT</name>
              <description>Cycles that release calibration timeout reset</description>
              <bitOffset>3</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_CALI_TIMEOUT_THRES</name>
              <description>Threshold value for the RTC calibration timer. If the calibration timer's value exceeds this threshold, a timeout is triggered.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>25</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NTIMERS_DATE</name>
          <description>Timer version control register</description>
          <addressOffset>0xF8</addressOffset>
          <size>0x20</size>
          <resetValue>0x02003071</resetValue>
          <fields>
            <field>
              <name>NTIMERS_DATE</name>
              <description>Timer version control register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REGCLK</name>
          <description>Timer group clock gate register</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CLK_EN</name>
              <description>Register clock gate signal. 1: The clock for software to read and write registers is always on. 0: The clock for software to read and write registers only exits when the operation happens.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="TIMG0">
      <name>TIMG1</name>
      <description>Timer Group</description>
      <baseAddress>0x60020000</baseAddress>
      <interrupt>
        <name>TG1_T0_LEVEL</name>
        <value>53</value>
      </interrupt>
      <interrupt>
        <name>TG1_T1_LEVEL</name>
        <value>54</value>
      </interrupt>
      <interrupt>
        <name>TG1_WDT_LEVEL</name>
        <value>55</value>
      </interrupt>
    </peripheral>
    <peripheral>
      <name>TWAI</name>
      <description>Two-Wire Automotive Interface</description>
      <groupName>TWAI</groupName>
      <baseAddress>0x6002B000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x6C</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>TWAI</name>
        <value>45</value>
      </interrupt>
      <registers>
        <register>
          <name>MODE</name>
          <description>Mode Register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>RESET_MODE</name>
              <description>This bit is used to configure the operating mode of the TWAI Controller. 1: Reset mode; 0: Operating mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LISTEN_ONLY_MODE</name>
              <description>1: Listen only mode. In this mode the nodes will only receive messages from the bus, without generating the acknowledge signal nor updating the RX error counter.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SELF_TEST_MODE</name>
              <description>1: Self test mode. In this mode the TX nodes can perform a successful transmission without receiving the acknowledge signal. This mode is often used to test a single node with the self reception request command.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_FILTER_MODE</name>
              <description>This bit is used to configure the filter mode. 0: Dual filter mode; 1: Single filter mode.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD</name>
          <description>Command Register</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TX_REQ</name>
              <description>Set the bit to 1 to allow the driving nodes start transmission.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ABORT_TX</name>
              <description>Set the bit to 1 to cancel a pending transmission request.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RELEASE_BUF</name>
              <description>Set the bit to 1 to release the RX buffer.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CLR_OVERRUN</name>
              <description>Set the bit to 1 to clear the data overrun status bit.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SELF_RX_REQ</name>
              <description>Self reception request command. Set the bit to 1 to allow a message be transmitted and received simultaneously.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS</name>
          <description>Status register</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RX_BUF_ST</name>
              <description>1: The data in the RX buffer is not empty, with at least one received data packet.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVERRUN_ST</name>
              <description>1: The RX FIFO is full and data overrun has occurred.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_BUF_ST</name>
              <description>1: The TX buffer is empty, the CPU may write a message into it.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_COMPLETE</name>
              <description>1: The TWAI controller has successfully received a packet from the bus.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_ST</name>
              <description>1: The TWAI Controller is receiving a message from the bus.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_ST</name>
              <description>1: The TWAI Controller is transmitting a message to the bus.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ERR_ST</name>
              <description>1: At least one of the RX/TX error counter has reached or exceeded the value set in register TWAI_ERR_WARNING_LIMIT_REG.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BUS_OFF_ST</name>
              <description>1: In bus-off status, the TWAI Controller is no longer involved in bus activities.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MISS_ST</name>
              <description>This bit reflects whether the data packet in the RX FIFO is complete. 1: The current packet is missing; 0: The current packet is complete</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW</name>
          <description>Interrupt Register</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RX_INT_ST</name>
              <description>Receive interrupt. If this bit is set to 1, it indicates there are messages to be handled in the RX FIFO.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_INT_ST</name>
              <description>Transmit interrupt. If this bit is set to 1, it indicates the message transmitting mis- sion is finished and a new transmission is able to execute.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ERR_WARN_INT_ST</name>
              <description>Error warning interrupt. If this bit is set to 1, it indicates the error status signal and the bus-off status signal of Status register have changed (e.g., switched from 0 to 1 or from 1 to 0).</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVERRUN_INT_ST</name>
              <description>Data overrun interrupt. If this bit is set to 1, it indicates a data overrun interrupt is generated in the RX FIFO.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ERR_PASSIVE_INT_ST</name>
              <description>Error passive interrupt. If this bit is set to 1, it indicates the TWAI Controller is switched between error active status and error passive status due to the change of error counters.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ARB_LOST_INT_ST</name>
              <description>Arbitration lost interrupt. If this bit is set to 1, it indicates an arbitration lost interrupt is generated.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BUS_ERR_INT_ST</name>
              <description>Error interrupt. If this bit is set to 1, it indicates an error is detected on the bus.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>Interrupt Enable Register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RX_INT_ENA</name>
              <description>Set this bit to 1 to enable receive interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_INT_ENA</name>
              <description>Set this bit to 1 to enable transmit interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ERR_WARN_INT_ENA</name>
              <description>Set this bit to 1 to enable error warning interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OVERRUN_INT_ENA</name>
              <description>Set this bit to 1 to enable data overrun interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ERR_PASSIVE_INT_ENA</name>
              <description>Set this bit to 1 to enable error passive interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ARB_LOST_INT_ENA</name>
              <description>Set this bit to 1 to enable arbitration lost interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BUS_ERR_INT_ENA</name>
              <description>Set this bit to 1 to enable error interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_TIMING_0</name>
          <description>Bus Timing Register 0</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>BAUD_PRESC</name>
              <description>Baud Rate Prescaler, determines the frequency dividing ratio.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNC_JUMP_WIDTH</name>
              <description>Synchronization Jump Width (SJW), 1 \verb+~+ 14 Tq wide.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_TIMING_1</name>
          <description>Bus Timing Register 1</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIME_SEG1</name>
              <description>The width of PBS1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIME_SEG2</name>
              <description>The width of PBS2.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIME_SAMP</name>
              <description>The number of sample points. 0: the bus is sampled once; 1: the bus is sampled three times</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ARB_LOST_CAP</name>
          <description>Arbitration Lost Capture Register</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ARB_LOST_CAP</name>
              <description>This register contains information about the bit position of lost arbitration.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ERR_CODE_CAP</name>
          <description>Error Code Capture Register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ECC_SEGMENT</name>
              <description>This register contains information about the location of errors, see Table 181 for details.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_DIRECTION</name>
              <description>This register contains information about transmission direction of the node when error occurs. 1: Error occurs when receiving a message; 0: Error occurs when transmitting a message</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_TYPE</name>
              <description>This register contains information about error types: 00: bit error; 01: form error; 10: stuff error; 11: other type of error</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ERR_WARNING_LIMIT</name>
          <description>Error Warning Limit Register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000060</resetValue>
          <fields>
            <field>
              <name>ERR_WARNING_LIMIT</name>
              <description>Error warning threshold. In the case when any of a error counter value exceeds the threshold, or all the error counter values are below the threshold, an error warning interrupt will be triggered (given the enable signal is valid).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_ERR_CNT</name>
          <description>Receive Error Counter Register</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RX_ERR_CNT</name>
              <description>The RX error counter register, reflects value changes under reception status.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_ERR_CNT</name>
          <description>Transmit Error Counter Register</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TX_ERR_CNT</name>
              <description>The TX error counter register, reflects value changes under transmission status.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA_0</name>
          <description>Data register 0</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TX_BYTE_0</name>
              <description>In reset mode, it is acceptance code register 0 with R/W Permission. In operation mode, it stores the 0th byte information of the data to be transmitted under operating mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA_1</name>
          <description>Data register 1</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TX_BYTE_1</name>
              <description>In reset mode, it is acceptance code register 1 with R/W Permission. In operation mode, it stores the 1st byte information of the data to be transmitted under operating mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA_2</name>
          <description>Data register 2</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TX_BYTE_2</name>
              <description>In reset mode, it is acceptance code register 2 with R/W Permission. In operation mode, it stores the 2nd byte information of the data to be transmitted under operating mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA_3</name>
          <description>Data register 3</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TX_BYTE_3</name>
              <description>In reset mode, it is acceptance code register 3 with R/W Permission. In operation mode, it stores the 3rd byte information of the data to be transmitted under operating mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA_4</name>
          <description>Data register 4</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TX_BYTE_4</name>
              <description>In reset mode, it is acceptance mask register 0 with R/W Permission. In operation mode, it stores the 4th byte information of the data to be transmitted under operating mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA_5</name>
          <description>Data register 5</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TX_BYTE_5</name>
              <description>In reset mode, it is acceptance mask register 1 with R/W Permission. In operation mode, it stores the 5th byte information of the data to be transmitted under operating mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA_6</name>
          <description>Data register 6</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TX_BYTE_6</name>
              <description>In reset mode, it is acceptance mask register 2 with R/W Permission. In operation mode, it stores the 6th byte information of the data to be transmitted under operating mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA_7</name>
          <description>Data register 7</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TX_BYTE_7</name>
              <description>In reset mode, it is acceptance mask register 3 with R/W Permission. In operation mode, it stores the 7th byte information of the data to be transmitted under operating mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA_8</name>
          <description>Data register 8</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TX_BYTE_8</name>
              <description>Stored the 8th byte information of the data to be transmitted under operating mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA_9</name>
          <description>Data register 9</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TX_BYTE_9</name>
              <description>Stored the 9th byte information of the data to be transmitted under operating mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA_10</name>
          <description>Data register 10</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TX_BYTE_10</name>
              <description>Stored the 10th byte information of the data to be transmitted under operating mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA_11</name>
          <description>Data register 11</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TX_BYTE_11</name>
              <description>Stored the 11th byte information of the data to be transmitted under operating mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA_12</name>
          <description>Data register 12</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TX_BYTE_12</name>
              <description>Stored the 12th byte information of the data to be transmitted under operating mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_MESSAGE_CNT</name>
          <description>Receive Message Counter Register</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RX_MESSAGE_COUNTER</name>
              <description>This register reflects the number of messages available within the RX FIFO.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLOCK_DIVIDER</name>
          <description>Clock Divider register</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CD</name>
              <description>These bits are used to configure frequency dividing coefficients of the external CLKOUT pin.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLOCK_OFF</name>
              <description>This bit can be configured under reset mode. 1: Disable the external CLKOUT pin; 0: Enable the external CLKOUT pin</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>UART0</name>
      <description>UART (Universal Asynchronous Receiver-Transmitter) Controller</description>
      <groupName>UART</groupName>
      <baseAddress>0x60000000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x84</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>UART0</name>
        <value>27</value>
      </interrupt>
      <registers>
        <register>
          <name>FIFO</name>
          <description>FIFO data register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RXFIFO_RD_BYTE</name>
              <description>UART 0 accesses FIFO via this register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW</name>
          <description>Raw interrupt status</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000002</resetValue>
          <fields>
            <field>
              <name>RXFIFO_FULL_INT_RAW</name>
              <description>This interrupt raw bit turns to high level when receiver receives more data than what rxfifo_full_thrhd specifies.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_EMPTY_INT_RAW</name>
              <description>This interrupt raw bit turns to high level when the amount of data in Tx-FIFO is less than what txfifo_empty_thrhd specifies .</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PARITY_ERR_INT_RAW</name>
              <description>This interrupt raw bit turns to high level when receiver detects a parity error in the data.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FRM_ERR_INT_RAW</name>
              <description>This interrupt raw bit turns to high level when receiver detects a data frame error .</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_OVF_INT_RAW</name>
              <description>This interrupt raw bit turns to high level when receiver receives more data than the FIFO can store.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DSR_CHG_INT_RAW</name>
              <description>This interrupt raw bit turns to high level when receiver detects the edge change of DSRn signal.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CTS_CHG_INT_RAW</name>
              <description>This interrupt raw bit turns to high level when receiver detects the edge change of CTSn signal.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BRK_DET_INT_RAW</name>
              <description>This interrupt raw bit turns to high level when receiver detects a 0 after the stop bit.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_TOUT_INT_RAW</name>
              <description>This interrupt raw bit turns to high level when receiver takes more time than rx_tout_thrhd to receive a byte.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SW_XON_INT_RAW</name>
              <description>This interrupt raw bit turns to high level when receiver recevies Xon char when uart_sw_flow_con_en is set to 1.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SW_XOFF_INT_RAW</name>
              <description>This interrupt raw bit turns to high level when receiver receives Xoff char when uart_sw_flow_con_en is set to 1.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GLITCH_DET_INT_RAW</name>
              <description>This interrupt raw bit turns to high level when receiver detects a glitch in the middle of a start bit.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_BRK_DONE_INT_RAW</name>
              <description>This interrupt raw bit turns to high level when transmitter completes  sending  NULL characters, after all data in Tx-FIFO are sent.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_BRK_IDLE_DONE_INT_RAW</name>
              <description>This interrupt raw bit turns to high level when transmitter has kept the shortest duration after sending the  last data.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_DONE_INT_RAW</name>
              <description>This interrupt raw bit turns to high level when transmitter has send out all data in FIFO.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RS485_PARITY_ERR_INT_RAW</name>
              <description>This interrupt raw bit turns to high level when receiver detects a parity error from the echo of transmitter in rs485 mode.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RS485_FRM_ERR_INT_RAW</name>
              <description>This interrupt raw bit turns to high level when receiver detects a data frame error from the echo of transmitter in rs485 mode.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RS485_CLASH_INT_RAW</name>
              <description>This interrupt raw bit turns to high level when detects a clash between transmitter and receiver in rs485 mode.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>AT_CMD_CHAR_DET_INT_RAW</name>
              <description>This interrupt raw bit turns to high level when receiver detects the configured at_cmd char.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>WAKEUP_INT_RAW</name>
              <description>This interrupt raw bit turns to high level when input rxd edge changes more times than what reg_active_threshold specifies in light sleeping mode.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST</name>
          <description>Masked interrupt status</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RXFIFO_FULL_INT_ST</name>
              <description>This is the status bit for rxfifo_full_int_raw when rxfifo_full_int_ena is set to 1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_EMPTY_INT_ST</name>
              <description>This is the status bit for  txfifo_empty_int_raw  when txfifo_empty_int_ena is set to 1.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PARITY_ERR_INT_ST</name>
              <description>This is the status bit for parity_err_int_raw when parity_err_int_ena is set to 1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FRM_ERR_INT_ST</name>
              <description>This is the status bit for frm_err_int_raw when frm_err_int_ena is set to 1.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_OVF_INT_ST</name>
              <description>This is the status bit for rxfifo_ovf_int_raw when rxfifo_ovf_int_ena is set to 1.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DSR_CHG_INT_ST</name>
              <description>This is the status bit for dsr_chg_int_raw when dsr_chg_int_ena is set to 1.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CTS_CHG_INT_ST</name>
              <description>This is the status bit for cts_chg_int_raw when cts_chg_int_ena is set to 1.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BRK_DET_INT_ST</name>
              <description>This is the status bit for brk_det_int_raw when brk_det_int_ena is set to 1.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_TOUT_INT_ST</name>
              <description>This is the status bit for rxfifo_tout_int_raw when rxfifo_tout_int_ena is set to 1.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SW_XON_INT_ST</name>
              <description>This is the status bit for sw_xon_int_raw when sw_xon_int_ena is set to 1.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SW_XOFF_INT_ST</name>
              <description>This is the status bit for sw_xoff_int_raw when sw_xoff_int_ena is set to 1.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GLITCH_DET_INT_ST</name>
              <description>This is the status bit for glitch_det_int_raw when glitch_det_int_ena is set to 1.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_BRK_DONE_INT_ST</name>
              <description>This is the status bit for tx_brk_done_int_raw when tx_brk_done_int_ena is set to 1.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_BRK_IDLE_DONE_INT_ST</name>
              <description>This is the stauts bit for tx_brk_idle_done_int_raw when tx_brk_idle_done_int_ena is set to 1.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_DONE_INT_ST</name>
              <description>This is the status bit for tx_done_int_raw when tx_done_int_ena is set to 1.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RS485_PARITY_ERR_INT_ST</name>
              <description>This is the status bit for rs485_parity_err_int_raw when rs485_parity_int_ena is set to 1.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RS485_FRM_ERR_INT_ST</name>
              <description>This is the status bit for rs485_frm_err_int_raw when rs485_fm_err_int_ena is set to 1.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RS485_CLASH_INT_ST</name>
              <description>This is the status bit for rs485_clash_int_raw when rs485_clash_int_ena is set to 1.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>AT_CMD_CHAR_DET_INT_ST</name>
              <description>This is the status bit for at_cmd_det_int_raw when at_cmd_char_det_int_ena is set to 1.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>WAKEUP_INT_ST</name>
              <description>This is the status bit for uart_wakeup_int_raw when uart_wakeup_int_ena is set to 1.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>Interrupt enable bits</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RXFIFO_FULL_INT_ENA</name>
              <description>This is the enable bit for rxfifo_full_int_st register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFO_EMPTY_INT_ENA</name>
              <description>This is the enable bit for txfifo_empty_int_st register.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PARITY_ERR_INT_ENA</name>
              <description>This is the enable bit for parity_err_int_st register.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRM_ERR_INT_ENA</name>
              <description>This is the enable bit for frm_err_int_st register.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFO_OVF_INT_ENA</name>
              <description>This is the enable bit for rxfifo_ovf_int_st register.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DSR_CHG_INT_ENA</name>
              <description>This is the enable bit for dsr_chg_int_st register.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CTS_CHG_INT_ENA</name>
              <description>This is the enable bit for cts_chg_int_st register.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BRK_DET_INT_ENA</name>
              <description>This is the enable bit for brk_det_int_st register.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFO_TOUT_INT_ENA</name>
              <description>This is the enable bit for rxfifo_tout_int_st register.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_XON_INT_ENA</name>
              <description>This is the enable bit for sw_xon_int_st register.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_XOFF_INT_ENA</name>
              <description>This is the enable bit for sw_xoff_int_st register.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GLITCH_DET_INT_ENA</name>
              <description>This is the enable bit for glitch_det_int_st register.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_BRK_DONE_INT_ENA</name>
              <description>This is the enable bit for tx_brk_done_int_st register.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_BRK_IDLE_DONE_INT_ENA</name>
              <description>This is the enable bit for tx_brk_idle_done_int_st register.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_DONE_INT_ENA</name>
              <description>This is the enable bit for tx_done_int_st register.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RS485_PARITY_ERR_INT_ENA</name>
              <description>This is the enable bit for rs485_parity_err_int_st register.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RS485_FRM_ERR_INT_ENA</name>
              <description>This is the enable bit for rs485_parity_err_int_st register.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RS485_CLASH_INT_ENA</name>
              <description>This is the enable bit for rs485_clash_int_st register.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AT_CMD_CHAR_DET_INT_ENA</name>
              <description>This is the enable bit for at_cmd_char_det_int_st register.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WAKEUP_INT_ENA</name>
              <description>This is the enable bit for uart_wakeup_int_st register.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>Interrupt clear bits</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RXFIFO_FULL_INT_CLR</name>
              <description>Set this bit to clear the rxfifo_full_int_raw interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TXFIFO_EMPTY_INT_CLR</name>
              <description>Set this bit to clear txfifo_empty_int_raw interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>PARITY_ERR_INT_CLR</name>
              <description>Set this bit to clear parity_err_int_raw interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>FRM_ERR_INT_CLR</name>
              <description>Set this bit to clear frm_err_int_raw interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RXFIFO_OVF_INT_CLR</name>
              <description>Set this bit to clear rxfifo_ovf_int_raw interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DSR_CHG_INT_CLR</name>
              <description>Set this bit to clear the dsr_chg_int_raw interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CTS_CHG_INT_CLR</name>
              <description>Set this bit to clear the cts_chg_int_raw interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BRK_DET_INT_CLR</name>
              <description>Set this bit to clear the brk_det_int_raw interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RXFIFO_TOUT_INT_CLR</name>
              <description>Set this bit to clear the rxfifo_tout_int_raw interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SW_XON_INT_CLR</name>
              <description>Set this bit to clear the sw_xon_int_raw interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SW_XOFF_INT_CLR</name>
              <description>Set this bit to clear the sw_xoff_int_raw interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>GLITCH_DET_INT_CLR</name>
              <description>Set this bit to clear the glitch_det_int_raw interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TX_BRK_DONE_INT_CLR</name>
              <description>Set this bit to clear the tx_brk_done_int_raw interrupt..</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TX_BRK_IDLE_DONE_INT_CLR</name>
              <description>Set this bit to clear the tx_brk_idle_done_int_raw interrupt.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TX_DONE_INT_CLR</name>
              <description>Set this bit to clear the tx_done_int_raw interrupt.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RS485_PARITY_ERR_INT_CLR</name>
              <description>Set this bit to clear the rs485_parity_err_int_raw interrupt.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RS485_FRM_ERR_INT_CLR</name>
              <description>Set this bit to clear the rs485_frm_err_int_raw interrupt.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RS485_CLASH_INT_CLR</name>
              <description>Set this bit to clear the rs485_clash_int_raw interrupt.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>AT_CMD_CHAR_DET_INT_CLR</name>
              <description>Set this bit to clear the at_cmd_char_det_int_raw interrupt.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>WAKEUP_INT_CLR</name>
              <description>Set this bit to clear the uart_wakeup_int_raw interrupt.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLKDIV</name>
          <description>Clock divider configuration</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <resetValue>0x000002B6</resetValue>
          <fields>
            <field>
              <name>CLKDIV</name>
              <description>The integral part of the frequency divider factor.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAG</name>
              <description>The decimal part of the frequency divider factor.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_FILT</name>
          <description>Rx Filter configuration</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>GLITCH_FILT</name>
              <description>when input pulse width is lower than this value, the pulse is ignored.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GLITCH_FILT_EN</name>
              <description>Set this bit to enable Rx signal filter.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS</name>
          <description>UART status register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <resetValue>0xE000C000</resetValue>
          <fields>
            <field>
              <name>RXFIFO_CNT</name>
              <description>Stores the byte number of valid data in Rx-FIFO.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DSRN</name>
              <description>The register represent the level value of the internal uart dsr signal.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CTSN</name>
              <description>This register represent the level value of the internal uart cts signal.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXD</name>
              <description>This register represent the  level value of the internal uart rxd signal.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFO_CNT</name>
              <description>Stores the byte number of data in Tx-FIFO.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DTRN</name>
              <description>This bit represents the level of the internal uart dtr signal.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTSN</name>
              <description>This bit represents the level of the internal uart rts signal.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXD</name>
              <description>This bit represents the  level of the internal uart txd signal.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONF0</name>
          <description>a</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <resetValue>0x1000001C</resetValue>
          <fields>
            <field>
              <name>PARITY</name>
              <description>This register is used to configure the parity check mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PARITY_EN</name>
              <description>Set this bit to enable uart parity check.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NUM</name>
              <description>This register is used to set the length of data.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STOP_BIT_NUM</name>
              <description>This register is used to set the length of  stop bit.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_RTS</name>
              <description>This register is used to configure the software rts signal which is used in software flow control.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_DTR</name>
              <description>This register is used to configure the software dtr signal which is used in software flow control.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXD_BRK</name>
              <description>Set this bit to enbale transmitter to  send NULL when the process of sending data is done.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IRDA_DPLX</name>
              <description>Set this bit to enable IrDA loopback mode.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IRDA_TX_EN</name>
              <description>This is the start enable bit for IrDA transmitter.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IRDA_WCTL</name>
              <description>1'h1: The IrDA transmitter's 11th bit is the same as 10th bit. 1'h0: Set IrDA transmitter's 11th bit to 0.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IRDA_TX_INV</name>
              <description>Set this bit to invert the level of  IrDA transmitter.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IRDA_RX_INV</name>
              <description>Set this bit to invert the level of IrDA receiver.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LOOPBACK</name>
              <description>Set this bit to enable uart loopback test mode.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_FLOW_EN</name>
              <description>Set this bit to enable flow control function for transmitter.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IRDA_EN</name>
              <description>Set this bit to enable IrDA protocol.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFO_RST</name>
              <description>Set this bit to reset the uart receive-FIFO.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFO_RST</name>
              <description>Set this bit to reset the uart transmit-FIFO.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXD_INV</name>
              <description>Set this bit to inverse the level value of uart rxd signal.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CTS_INV</name>
              <description>Set this bit to inverse the level value of uart cts signal.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DSR_INV</name>
              <description>Set this bit to inverse the level value of uart dsr signal.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXD_INV</name>
              <description>Set this bit to inverse the level value of uart txd signal.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTS_INV</name>
              <description>Set this bit to inverse the level value of uart rts signal.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTR_INV</name>
              <description>Set this bit to inverse the level value of uart dtr signal.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EN</name>
              <description>1'h1: Force clock on for register. 1'h0: Support clock only when application writes registers.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ERR_WR_MASK</name>
              <description>1'h1: Receiver stops storing data into FIFO when data is wrong. 1'h0: Receiver stores the data even if the  received data is wrong.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AUTOBAUD_EN</name>
              <description>This is the enable bit for detecting baudrate.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_CLK_EN</name>
              <description>UART memory clock gate enable signal.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONF1</name>
          <description>Configuration register 1</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <resetValue>0x00018060</resetValue>
          <fields>
            <field>
              <name>RXFIFO_FULL_THRHD</name>
              <description>It will produce rxfifo_full_int interrupt when receiver receives more data than this register value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFO_EMPTY_THRHD</name>
              <description>It will produce txfifo_empty_int interrupt when the data amount in Tx-FIFO is less than this register value.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIS_RX_DAT_OVF</name>
              <description>Disable UART Rx data overflow detect.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TOUT_FLOW_DIS</name>
              <description>Set this bit to stop accumulating idle_cnt when hardware flow control works.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_FLOW_EN</name>
              <description>This is the flow enable bit for UART receiver.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TOUT_EN</name>
              <description>This is the enble bit for uart receiver's timeout function.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOWPULSE</name>
          <description>Autobaud minimum low pulse duration register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>MIN_CNT</name>
              <description>This register stores the value of the minimum duration time of the low level pulse. It is used in baud rate-detect process.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HIGHPULSE</name>
          <description>Autobaud minimum high pulse duration register</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>MIN_CNT</name>
              <description>This register stores  the value of the maxinum duration time for the high level pulse. It is used in baud rate-detect process.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXD_CNT</name>
          <description>Autobaud edge change count register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RXD_EDGE_CNT</name>
              <description>This register stores the count of rxd edge change. It is used in baud rate-detect process.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLOW_CONF</name>
          <description>Software flow-control configuration</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SW_FLOW_CON_EN</name>
              <description>Set this bit to enable software flow control. It is used with register sw_xon or sw_xoff.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XONOFF_DEL</name>
              <description>Set this bit to remove flow control char from the received data.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCE_XON</name>
              <description>Set this bit to enable the transmitter to go on sending data.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCE_XOFF</name>
              <description>Set this bit to stop the  transmitter from sending data.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEND_XON</name>
              <description>Set this bit to send Xon char. It is cleared by hardware automatically.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEND_XOFF</name>
              <description>Set this bit to send Xoff char. It is cleared by hardware automatically.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLEEP_CONF</name>
          <description>Sleep-mode configuration</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <resetValue>0x000000F0</resetValue>
          <fields>
            <field>
              <name>ACTIVE_THRESHOLD</name>
              <description>The uart is activated from light sleeping mode when the input rxd edge changes more times than this register value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SWFC_CONF0</name>
          <description>Software flow-control character configuration</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00004CE0</resetValue>
          <fields>
            <field>
              <name>XOFF_THRESHOLD</name>
              <description>When the data amount in Rx-FIFO is more than this register value with uart_sw_flow_con_en set to 1, it will send a Xoff char.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XOFF_CHAR</name>
              <description>This register stores the Xoff flow control char.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SWFC_CONF1</name>
          <description>Software flow-control character configuration</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <resetValue>0x00004400</resetValue>
          <fields>
            <field>
              <name>XON_THRESHOLD</name>
              <description>When the data amount in Rx-FIFO is less than this register value with uart_sw_flow_con_en set to 1, it will send a Xon char.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XON_CHAR</name>
              <description>This register stores the Xon flow control char.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXBRK_CONF</name>
          <description>Tx Break character configuration</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000000A</resetValue>
          <fields>
            <field>
              <name>TX_BRK_NUM</name>
              <description>This register is used to configure the number of 0 to be sent after the process of sending data is done. It is active when txd_brk is set to 1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IDLE_CONF</name>
          <description>Frame-end idle configuration</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <resetValue>0x00040100</resetValue>
          <fields>
            <field>
              <name>RX_IDLE_THRHD</name>
              <description>It will produce frame end signal when receiver takes more time to receive one byte data than this register value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_IDLE_NUM</name>
              <description>This register is used to configure the duration time between transfers.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RS485_CONF</name>
          <description>RS485 mode configuration</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RS485_EN</name>
              <description>Set this bit to choose the rs485 mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DL0_EN</name>
              <description>Set this bit to delay the stop bit by 1 bit.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DL1_EN</name>
              <description>Set this bit to delay the stop bit by 1 bit.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RS485TX_RX_EN</name>
              <description>Set this bit to enable receiver could receive data when the transmitter is transmitting data in rs485 mode.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RS485RXBY_TX_EN</name>
              <description>1'h1: enable rs485 transmitter to send data when rs485 receiver line is busy.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RS485_RX_DLY_NUM</name>
              <description>This register is used to delay the receiver's internal data signal.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RS485_TX_DLY_NUM</name>
              <description>This register is used to delay the transmitter's internal data signal.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AT_CMD_PRECNT</name>
          <description>Pre-sequence timing configuration</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000901</resetValue>
          <fields>
            <field>
              <name>PRE_IDLE_NUM</name>
              <description>This register is used to configure the idle duration time before the first at_cmd is received by receiver.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AT_CMD_POSTCNT</name>
          <description>Post-sequence timing configuration</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000901</resetValue>
          <fields>
            <field>
              <name>POST_IDLE_NUM</name>
              <description>This register is used to configure the duration time between the last at_cmd and the next data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AT_CMD_GAPTOUT</name>
          <description>Timeout configuration</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000000B</resetValue>
          <fields>
            <field>
              <name>RX_GAP_TOUT</name>
              <description>This register is used to configure the duration time between the at_cmd chars.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AT_CMD_CHAR</name>
          <description>AT escape sequence detection configuration</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000032B</resetValue>
          <fields>
            <field>
              <name>AT_CMD_CHAR</name>
              <description>This register is used to configure the content of at_cmd char.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CHAR_NUM</name>
              <description>This register is used to configure the num of continuous at_cmd chars received by receiver.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MEM_CONF</name>
          <description>UART threshold and allocation configuration</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <resetValue>0x00140012</resetValue>
          <fields>
            <field>
              <name>RX_SIZE</name>
              <description>This register is used to configure the amount of mem allocated for receive-FIFO. The default number is 128 bytes.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_SIZE</name>
              <description>This register is used to configure the amount of mem allocated for transmit-FIFO. The default number is 128 bytes.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_FLOW_THRHD</name>
              <description>This register is used to configure the maximum amount of data that can be received  when hardware flow control works.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TOUT_THRHD</name>
              <description>This register is used to configure the threshold time that receiver takes to receive one byte. The rxfifo_tout_int interrupt will be trigger when the receiver takes more time to receive one byte with rx_tout_en set to 1.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_FORCE_PD</name>
              <description>Set this bit to force power down UART memory.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM_FORCE_PU</name>
              <description>Set this bit to force power up UART memory.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MEM_TX_STATUS</name>
          <description>Tx-FIFO write and read offset address.</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>APB_TX_WADDR</name>
              <description>This register stores the offset address in Tx-FIFO when software writes Tx-FIFO via APB.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_RADDR</name>
              <description>This register stores the offset address in Tx-FIFO when Tx-FSM reads data via Tx-FIFO_Ctrl.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MEM_RX_STATUS</name>
          <description>Rx-FIFO write and read offset address.</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <resetValue>0x00100200</resetValue>
          <fields>
            <field>
              <name>APB_RX_RADDR</name>
              <description>This register stores the offset address in RX-FIFO when software reads data from Rx-FIFO via APB. UART0 is 10'h200. UART1 is 10'h280. UART2 is 10'h300.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_WADDR</name>
              <description>This register stores the offset address in Rx-FIFO when Rx-FIFO_Ctrl writes Rx-FIFO. UART0 is 10'h200. UART1 is 10'h280. UART2 is 10'h300.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FSM_STATUS</name>
          <description>UART transmit and receive status.</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ST_URX_OUT</name>
              <description>This is the status register of receiver.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ST_UTX_OUT</name>
              <description>This is the status register of transmitter.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>POSPULSE</name>
          <description>Autobaud high pulse register</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>POSEDGE_MIN_CNT</name>
              <description>This register stores the minimal input clock count between two positive edges. It is used in boudrate-detect process.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NEGPULSE</name>
          <description>Autobaud low pulse register</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>NEGEDGE_MIN_CNT</name>
              <description>This register stores the minimal input clock count between two negative edges. It is used in boudrate-detect process.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLK_CONF</name>
          <description>UART core clock configuration</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <resetValue>0x03701000</resetValue>
          <fields>
            <field>
              <name>SCLK_DIV_B</name>
              <description>The  denominator of the frequency divider factor.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLK_DIV_A</name>
              <description>The numerator of the frequency divider factor.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLK_DIV_NUM</name>
              <description>The integral part of the frequency divider factor.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLK_SEL</name>
              <description>UART clock source select. 1: 80Mhz, 2: 8Mhz, 3: XTAL.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLK_EN</name>
              <description>Set this bit to enable UART Tx/Rx clock.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RST_CORE</name>
              <description>Write 1 then write 0 to this bit, reset UART Tx/Rx.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_SCLK_EN</name>
              <description>Set this bit to enable UART Tx clock.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_SCLK_EN</name>
              <description>Set this bit to enable UART Rx clock.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_RST_CORE</name>
              <description>Write 1 then write 0 to this bit, reset UART Tx.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_RST_CORE</name>
              <description>Write 1 then write 0 to this bit, reset UART Rx.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>UART Version register</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <resetValue>0x02008270</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>This is the version register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ID</name>
          <description>UART ID register</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <resetValue>0x40000500</resetValue>
          <fields>
            <field>
              <name>ID</name>
              <description>This register is used to configure the uart_id.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HIGH_SPEED</name>
              <description>This bit used to select synchronize mode. 1: Registers are auto synchronized into UART Core clock and UART core should be keep the same with APB clock. 0: After configure registers, software needs to write 1 to UART_REG_UPDATE to synchronize registers.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_UPDATE</name>
              <description>Software write 1 would synchronize registers into UART Core clock domain and would be cleared by hardware after synchronization is done.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="UART0">
      <name>UART1</name>
      <description>UART (Universal Asynchronous Receiver-Transmitter) Controller</description>
      <baseAddress>0x60010000</baseAddress>
      <interrupt>
        <name>UART1</name>
        <value>28</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="UART0">
      <name>UART2</name>
      <description>UART (Universal Asynchronous Receiver-Transmitter) Controller</description>
      <baseAddress>0x6002E000</baseAddress>
      <interrupt>
        <name>UART2</name>
        <value>29</value>
      </interrupt>
    </peripheral>
    <peripheral>
      <name>UHCI0</name>
      <description>Universal Host Controller Interface</description>
      <groupName>UHCI</groupName>
      <baseAddress>0x60014000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x88</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>UHCI0</name>
        <value>14</value>
      </interrupt>
      <registers>
        <register>
          <name>CONF0</name>
          <description>UHCI configuration register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x000006E0</resetValue>
          <fields>
            <field>
              <name>TX_RST</name>
              <description>Write 1, then write 0 to this bit to reset decode state machine.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_RST</name>
              <description>Write 1, then write 0 to this bit to reset encode state machine.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UART0_CE</name>
              <description>Set this bit to link up HCI and UART0.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UART1_CE</name>
              <description>Set this bit to link up HCI and UART1.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UART2_CE</name>
              <description>Set this bit to link up HCI and UART2.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEPER_EN</name>
              <description>Set this bit to separate the data frame using a special char.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HEAD_EN</name>
              <description>Set this bit to encode the data packet with a formatting header.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CRC_REC_EN</name>
              <description>Set this bit to enable UHCI to receive the 16 bit CRC.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UART_IDLE_EOF_EN</name>
              <description>If this bit is set to 1, UHCI will end the payload receiving process when UART has been in idle state.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LEN_EOF_EN</name>
              <description>If this bit is set to 1, UHCI decoder receiving payload data is end when the receiving byte count has reached the specified value. The value is payload length indicated by UHCI packet header when UHCI_HEAD_EN is 1 or the value is configuration value when UHCI_HEAD_EN is 0. If this bit is set to 0, UHCI decoder receiving payload data is end when 0xc0 is received.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENCODE_CRC_EN</name>
              <description>Set this bit to enable data integrity checking by appending a 16 bit CCITT-CRC to end of the payload.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EN</name>
              <description>1'b1: Force clock on for register. 1'b0: Support clock only when application writes registers.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UART_RX_BRK_EOF_EN</name>
              <description>If this bit is set to 1, UHCI will end payload receive process when NULL frame is received by UART.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW</name>
          <description>Raw interrupt status</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RX_START_INT_RAW</name>
              <description>This is the interrupt raw bit. Triggered when a separator char has been sent.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_START_INT_RAW</name>
              <description>This is the interrupt raw bit. Triggered when UHCI detects a separator char.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_HUNG_INT_RAW</name>
              <description>This is the interrupt raw bit. Triggered when UHCI takes more time to receive data than configure value.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_HUNG_INT_RAW</name>
              <description>This is the interrupt raw bit. Triggered when UHCI takes more time to read data from RAM than the configured value.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SEND_S_REG_Q_INT_RAW</name>
              <description>This is the interrupt raw bit. Triggered when UHCI has sent out a short packet using single_send registers.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SEND_A_REG_Q_INT_RAW</name>
              <description>This is the interrupt raw bit. Triggered when UHCI has sent out a short packet using always_send registers.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_EOF_INT_RAW</name>
              <description>This is the interrupt raw bit. Triggered when there are some errors in EOF in the transmit data.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APP_CTRL0_INT_RAW</name>
              <description>This is the interrupt raw bit. Triggered when set UHCI_APP_CTRL0_IN_SET.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APP_CTRL1_INT_RAW</name>
              <description>This is the interrupt raw bit. Triggered when set UHCI_APP_CTRL1_IN_SET.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST</name>
          <description>Masked interrupt status</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RX_START_INT_ST</name>
              <description>This is the masked interrupt bit for UHCI_RX_START_INT interrupt when UHCI_RX_START_INT_ENA  is set to 1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_START_INT_ST</name>
              <description>This is the masked interrupt bit for UHCI_TX_START_INT interrupt when UHCI_TX_START_INT_ENA  is set to 1.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_HUNG_INT_ST</name>
              <description>This is the masked interrupt bit for UHCI_RX_HUNG_INT interrupt when UHCI_RX_HUNG_INT_ENA  is set to 1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_HUNG_INT_ST</name>
              <description>This is the masked interrupt bit for UHCI_TX_HUNG_INT interrupt when UHCI_TX_HUNG_INT_ENA  is set to 1.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SEND_S_REG_Q_INT_ST</name>
              <description>This is the masked interrupt bit for UHCI_SEND_S_REQ_Q_INT interrupt when UHCI_SEND_S_REQ_Q_INT_ENA  is set to 1.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SEND_A_REG_Q_INT_ST</name>
              <description>This is the masked interrupt bit for UHCI_SEND_A_REQ_Q_INT interrupt when UHCI_SEND_A_REQ_Q_INT_ENA  is set to 1.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTLINK_EOF_ERR_INT_ST</name>
              <description>This is the masked interrupt bit for UHCI_OUTLINK_EOF_ERR_INT interrupt when UHCI_OUTLINK_EOF_ERR_INT_ENA  is set to 1.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APP_CTRL0_INT_ST</name>
              <description>This is the masked interrupt bit for UHCI_APP_CTRL0_INT interrupt when UHCI_APP_CTRL0_INT_ENA  is set to 1.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APP_CTRL1_INT_ST</name>
              <description>This is the masked interrupt bit for UHCI_APP_CTRL1_INT interrupt when UHCI_APP_CTRL1_INT_ENA  is set to 1.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>Interrupt enable bits</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RX_START_INT_ENA</name>
              <description>This is the interrupt enable bit for UHCI_RX_START_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_START_INT_ENA</name>
              <description>This is the interrupt enable bit for UHCI_TX_START_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_HUNG_INT_ENA</name>
              <description>This is the interrupt enable bit for UHCI_RX_HUNG_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_HUNG_INT_ENA</name>
              <description>This is the interrupt enable bit for UHCI_TX_HUNG_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEND_S_REG_Q_INT_ENA</name>
              <description>This is the interrupt enable bit for UHCI_SEND_S_REQ_Q_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEND_A_REG_Q_INT_ENA</name>
              <description>This is the interrupt enable bit for UHCI_SEND_A_REQ_Q_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTLINK_EOF_ERR_INT_ENA</name>
              <description>This is the interrupt enable bit for UHCI_OUTLINK_EOF_ERR_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APP_CTRL0_INT_ENA</name>
              <description>This is the interrupt enable bit for UHCI_APP_CTRL0_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APP_CTRL1_INT_ENA</name>
              <description>This is the interrupt enable bit for UHCI_APP_CTRL1_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>Interrupt clear bits</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RX_START_INT_CLR</name>
              <description>Set this bit to clear UHCI_RX_START_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TX_START_INT_CLR</name>
              <description>Set this bit to clear UHCI_TX_START_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RX_HUNG_INT_CLR</name>
              <description>Set this bit to clear UHCI_RX_HUNG_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TX_HUNG_INT_CLR</name>
              <description>Set this bit to clear UHCI_TX_HUNG_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SEND_S_REG_Q_INT_CLR</name>
              <description>Set this bit to clear UHCI_SEND_S_REQ_Q_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SEND_A_REG_Q_INT_CLR</name>
              <description>Set this bit to clear UHCI_SEND_A_REQ_Q_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUTLINK_EOF_ERR_INT_CLR</name>
              <description>Set this bit to clear UHCI_OUTLINK_EOF_ERR_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APP_CTRL0_INT_CLR</name>
              <description>Set this bit to clear UHCI_APP_CTRL0_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APP_CTRL1_INT_CLR</name>
              <description>Set this bit to clear UHCI_APP_CTRL1_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APP_INT_SET</name>
          <description>Software interrupt trigger source</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>APP_CTRL0_INT_SET</name>
              <description>This bit is software interrupt trigger source of UHCI_APP_CTRL0_INT.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APP_CTRL1_INT_SET</name>
              <description>This bit is software interrupt trigger source of UHCI_APP_CTRL1_INT.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONF1</name>
          <description>UHCI configuration register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000033</resetValue>
          <fields>
            <field>
              <name>CHECK_SUM_EN</name>
              <description>This is the enable bit to check header checksum when UHCI receives a data packet.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CHECK_SEQ_EN</name>
              <description>This is the enable bit to check sequence number when UHCI receives a data packet.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CRC_DISABLE</name>
              <description>Set this bit to support CRC calculation. Data Integrity Check Present bit in UHCI packet frame should be 1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAVE_HEAD</name>
              <description>Set this bit to save the packet header when HCI receives a data packet.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_CHECK_SUM_RE</name>
              <description>Set this bit to encode the data packet with a checksum.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_ACK_NUM_RE</name>
              <description>Set this bit to encode the data packet with an acknowledgment when a reliable packet is to be transmit.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WAIT_SW_START</name>
              <description>The uhci-encoder will jump to ST_SW_WAIT status if this register is set to 1.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_START</name>
              <description>If current UHCI_ENCODE_STATE is ST_SW_WAIT, the UHCI will start to send data packet out when this bit is set to 1.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATE0</name>
          <description>UHCI receive status</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RX_ERR_CAUSE</name>
              <description>This register indicates the error type when DMA has received a packet with error. 3'b001: Checksum error in HCI packet. 3'b010: Sequence number error in HCI packet. 3'b011: CRC bit error in HCI packet. 3'b100: 0xc0 is found but received HCI packet is not end. 3'b101: 0xc0 is not found when receiving HCI packet is end. 3'b110: CRC check error.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DECODE_STATE</name>
              <description>UHCI decoder status.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATE1</name>
          <description>UHCI transmit status</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ENCODE_STATE</name>
              <description>UHCI encoder status.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ESCAPE_CONF</name>
          <description>Escape character configuration</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000033</resetValue>
          <fields>
            <field>
              <name>TX_C0_ESC_EN</name>
              <description>Set this bit to enable decoding char 0xc0 when DMA receives data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_DB_ESC_EN</name>
              <description>Set this bit to enable decoding char 0xdb when DMA receives data.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_11_ESC_EN</name>
              <description>Set this bit to enable decoding flow control char 0x11 when DMA receives data.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_13_ESC_EN</name>
              <description>Set this bit to enable decoding flow control char 0x13 when DMA receives data.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_C0_ESC_EN</name>
              <description>Set this bit to enable replacing 0xc0 by special char when DMA sends data.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_DB_ESC_EN</name>
              <description>Set this bit to enable replacing 0xdb by special char when DMA sends data.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_11_ESC_EN</name>
              <description>Set this bit to enable replacing flow control char 0x11 by special char when DMA sends data.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_13_ESC_EN</name>
              <description>Set this bit to enable replacing flow control char 0x13 by special char when DMA sends data.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HUNG_CONF</name>
          <description>Timeout configuration</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <resetValue>0x00810810</resetValue>
          <fields>
            <field>
              <name>TXFIFO_TIMEOUT</name>
              <description>This register stores the timeout value. It will produce the UHCI_TX_HUNG_INT interrupt when DMA takes more time to receive data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFO_TIMEOUT_SHIFT</name>
              <description>This register is used to configure the tick count maximum value.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFO_TIMEOUT_ENA</name>
              <description>This is the enable bit for Tx-FIFO receive-data timeout.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFO_TIMEOUT</name>
              <description>This register stores the timeout value. It will produce the UHCI_RX_HUNG_INT interrupt when DMA takes more time to read data from RAM.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFO_TIMEOUT_SHIFT</name>
              <description>This register is used to configure the tick count maximum value.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFO_TIMEOUT_ENA</name>
              <description>This is the enable bit for DMA send-data timeout.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ACK_NUM</name>
          <description>UHCI ACK number configuration</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>ACK_NUM</name>
              <description>This ACK number used in software flow control.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LOAD</name>
              <description>Set this bit to 1, the value configured by UHCI_ACK_NUM would be loaded.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_HEAD</name>
          <description>UHCI packet header register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RX_HEAD</name>
              <description>This register stores the header of the current received packet.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>QUICK_SENT</name>
          <description>UHCI quick send configuration register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SINGLE_SEND_NUM</name>
              <description>This register is used to specify the single_send register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SINGLE_SEND_EN</name>
              <description>Set this bit to enable single_send mode to send short packet.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ALWAYS_SEND_NUM</name>
              <description>This register is used to specify the always_send register.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ALWAYS_SEND_EN</name>
              <description>Set this bit to enable always_send mode to send short packet.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q0_WORD0</name>
          <description>Q0_WORD0 quick_sent register</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SEND_Q0_WORD0</name>
              <description>This register is used as a quick_sent register when specified by UHCI_ALWAYS_SEND_NUM or UHCI_SINGLE_SEND_NUM.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q0_WORD1</name>
          <description>Q0_WORD1 quick_sent register</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SEND_Q0_WORD1</name>
              <description>This register is used as a quick_sent register when specified by UHCI_ALWAYS_SEND_NUM or UHCI_SINGLE_SEND_NUM.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q1_WORD0</name>
          <description>Q1_WORD0 quick_sent register</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SEND_Q1_WORD0</name>
              <description>This register is used as a quick_sent register when specified by UHCI_ALWAYS_SEND_NUM or UHCI_SINGLE_SEND_NUM.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q1_WORD1</name>
          <description>Q1_WORD1 quick_sent register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SEND_Q1_WORD1</name>
              <description>This register is used as a quick_sent register when specified by UHCI_ALWAYS_SEND_NUM or UHCI_SINGLE_SEND_NUM.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q2_WORD0</name>
          <description>Q2_WORD0 quick_sent register</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SEND_Q2_WORD0</name>
              <description>This register is used as a quick_sent register when specified by UHCI_ALWAYS_SEND_NUM or UHCI_SINGLE_SEND_NUM.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q2_WORD1</name>
          <description>Q2_WORD1 quick_sent register</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SEND_Q2_WORD1</name>
              <description>This register is used as a quick_sent register when specified by UHCI_ALWAYS_SEND_NUM or UHCI_SINGLE_SEND_NUM.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q3_WORD0</name>
          <description>Q3_WORD0 quick_sent register</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SEND_Q3_WORD0</name>
              <description>This register is used as a quick_sent register when specified by UHCI_ALWAYS_SEND_NUM or UHCI_SINGLE_SEND_NUM.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q3_WORD1</name>
          <description>Q3_WORD1 quick_sent register</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SEND_Q3_WORD1</name>
              <description>This register is used as a quick_sent register when specified by UHCI_ALWAYS_SEND_NUM or UHCI_SINGLE_SEND_NUM.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q4_WORD0</name>
          <description>Q4_WORD0 quick_sent register</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SEND_Q4_WORD0</name>
              <description>This register is used as a quick_sent register when specified by UHCI_ALWAYS_SEND_NUM or UHCI_SINGLE_SEND_NUM.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q4_WORD1</name>
          <description>Q4_WORD1 quick_sent register</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SEND_Q4_WORD1</name>
              <description>This register is used as a quick_sent register when specified by UHCI_ALWAYS_SEND_NUM or UHCI_SINGLE_SEND_NUM.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q5_WORD0</name>
          <description>Q5_WORD0 quick_sent register</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SEND_Q5_WORD0</name>
              <description>This register is used as a quick_sent register when specified by UHCI_ALWAYS_SEND_NUM or UHCI_SINGLE_SEND_NUM.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q5_WORD1</name>
          <description>Q5_WORD1 quick_sent register</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SEND_Q5_WORD1</name>
              <description>This register is used as a quick_sent register when specified by UHCI_ALWAYS_SEND_NUM or UHCI_SINGLE_SEND_NUM.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q6_WORD0</name>
          <description>Q6_WORD0 quick_sent register</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SEND_Q6_WORD0</name>
              <description>This register is used as a quick_sent register when specified by UHCI_ALWAYS_SEND_NUM or UHCI_SINGLE_SEND_NUM.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q6_WORD1</name>
          <description>Q6_WORD1 quick_sent register</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SEND_Q6_WORD1</name>
              <description>This register is used as a quick_sent register when specified by UHCI_ALWAYS_SEND_NUM or UHCI_SINGLE_SEND_NUM.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ESC_CONF0</name>
          <description>Escape sequence configuration register 0</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <resetValue>0x00DCDBC0</resetValue>
          <fields>
            <field>
              <name>SEPER_CHAR</name>
              <description>This register is used to define the separate char that need to be encoded, default is 0xc0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEPER_ESC_CHAR0</name>
              <description>This register is used to define the first char of slip escape sequence when encoding the separate char, default is 0xdb.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEPER_ESC_CHAR1</name>
              <description>This register is used to define the second char of slip escape sequence when encoding the separate char, default is 0xdc.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ESC_CONF1</name>
          <description>Escape sequence configuration register 1</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <resetValue>0x00DDDBDB</resetValue>
          <fields>
            <field>
              <name>ESC_SEQ0</name>
              <description>This register is used to define a char that need to be encoded, default is 0xdb that used as the first char of slip escape sequence.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ESC_SEQ0_CHAR0</name>
              <description>This register is used to define the first char of slip escape sequence when encoding the UHCI_ESC_SEQ0, default is 0xdb.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ESC_SEQ0_CHAR1</name>
              <description>This register is used to define the second char of slip escape sequence when encoding the UHCI_ESC_SEQ0, default is 0xdd.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ESC_CONF2</name>
          <description>Escape sequence configuration register 2</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <resetValue>0x00DEDB11</resetValue>
          <fields>
            <field>
              <name>ESC_SEQ1</name>
              <description>This register is used to define a char that need to be encoded, default is 0x11 that used as flow control char.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ESC_SEQ1_CHAR0</name>
              <description>This register is used to define the first char of slip escape sequence when encoding the UHCI_ESC_SEQ1, default is 0xdb.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ESC_SEQ1_CHAR1</name>
              <description>This register is used to define the second char of slip escape sequence when encoding the UHCI_ESC_SEQ1, default is 0xde.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ESC_CONF3</name>
          <description>Escape sequence configuration register 3</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00DFDB13</resetValue>
          <fields>
            <field>
              <name>ESC_SEQ2</name>
              <description>This register is used to define a char that need to be decoded, default is 0x13 that used as flow control char.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ESC_SEQ2_CHAR0</name>
              <description>This register is used to define the first char of slip escape sequence when encoding the UHCI_ESC_SEQ2, default is 0xdb.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ESC_SEQ2_CHAR1</name>
              <description>This register is used to define the second char of slip escape sequence when encoding the UHCI_ESC_SEQ2, default is 0xdf.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PKT_THRES</name>
          <description>Configure register for packet length</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000080</resetValue>
          <fields>
            <field>
              <name>PKT_THRS</name>
              <description>This register is used to configure the maximum value of the packet length when UHCI_HEAD_EN is 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>UHCI version  control register</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <resetValue>0x02010090</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>This is the version control register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="UHCI0">
      <name>UHCI1</name>
      <description>Universal Host Controller Interface</description>
      <baseAddress>0x6000C000</baseAddress>
    </peripheral>
    <peripheral>
      <name>USB0</name>
      <description>USB OTG (On-The-Go)</description>
      <groupName>USB</groupName>
      <baseAddress>0x60080000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x2A0</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>GOTGCTL</name>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SESREQSCS</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SESREQ</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VBVALIDOVEN</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VBVALIDOVVAL</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AVALIDOVEN</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AVALIDOVVAL</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BVALIDOVEN</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BVALIDOVVAL</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HSTNEGSCS</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>HNPREQ</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HSTSETHNPEN</name>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEVHNPEN</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EHEN</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBNCEFLTRBYPASS</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CONIDSTS</name>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DBNCTIME</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ASESVLD</name>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BSESVLD</name>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OTGVER</name>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CURMOD</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GOTGINT</name>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SESENDDET</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SESREQSUCSTSCHNG</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HSTNEGSUCSTSCHNG</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HSTNEGDET</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADEVTOUTCHG</name>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBNCEDONE</name>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GAHBCFG</name>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>GLBLLNTRMSK</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HBSTLEN</name>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMAEN</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NPTXFEMPLVL</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PTXFEMPLVL</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>REMMEMSUPP</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NOTIALLDMAWRIT</name>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AHBSINGLE</name>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INVDESCENDIANESS</name>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GUSBCFG</name>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00001440</resetValue>
          <fields>
            <field>
              <name>TOUTCAL</name>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PHYIF</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ULPI_UTMI_SEL</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FSINTF</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PHYSEL</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SRPCAP</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HNPCAP</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USBTRDTIM</name>
              <bitOffset>10</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TERMSELDLPULSE</name>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXENDDELAY</name>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCEHSTMODE</name>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCEDEVMODE</name>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORRUPTTXPKT</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRSTCTL</name>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CSFTRST</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PIUFSSFTRST</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRMCNTRRST</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFFLSH</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFFLSH</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFNUM</name>
              <bitOffset>6</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMAREQ</name>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>AHBIDLE</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GINTSTS</name>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CURMOD_INT</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MODEMIS</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OTGINT</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SOF</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFLVI</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NPTXFEMP</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GINNAKEFF</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GOUTNAKEFF</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ERLYSUSP</name>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USBSUSP</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USBRST</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENUMDONE</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ISOOUTDROP</name>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EOPF</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EPMIS</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IEPINT</name>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OEPINT</name>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INCOMPISOIN</name>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INCOMPIP</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FETSUSP</name>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESETDET</name>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRTLNT</name>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>HCHLNT</name>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PTXFEMP</name>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CONIDSTSCHNG</name>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DISCONNINT</name>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SESSREQINT</name>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WKUPINT</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GINTMSK</name>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MODEMISMSK</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OTGINTMSK</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SOFMSK</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFLVIMSK</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NPTXFEMPMSK</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GINNAKEFFMSK</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GOUTNACKEFFMSK</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ERLYSUSPMSK</name>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USBSUSPMSK</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USBRSTMSK</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENUMDONEMSK</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ISOOUTDROPMSK</name>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EOPFMSK</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EPMISMSK</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IEPINTMSK</name>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OEPINTMSK</name>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INCOMPISOINMSK</name>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INCOMPIPMSK</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FETSUSPMSK</name>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESETDETMSK</name>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRTLNTMSK</name>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HCHINTMSK</name>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PTXFEMPMSK</name>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CONIDSTSCHNGMSK</name>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DISCONNINTMSK</name>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SESSREQINTMSK</name>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WKUPINTMSK</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRXSTSR</name>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>G_CHNUM</name>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>G_BCNT</name>
              <bitOffset>4</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>G_DPID</name>
              <bitOffset>15</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>G_PKTSTS</name>
              <bitOffset>17</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>G_FN</name>
              <bitOffset>21</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRXSTSP</name>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CHNUM</name>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BCNT</name>
              <bitOffset>4</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DPID</name>
              <bitOffset>15</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PKTSTS</name>
              <bitOffset>17</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FN</name>
              <bitOffset>21</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRXFSIZ</name>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000100</resetValue>
          <fields>
            <field>
              <name>RXFDEP</name>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GNPTXFSIZ</name>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <resetValue>0x01000100</resetValue>
          <fields>
            <field>
              <name>NPTXFSTADDR</name>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NPTXFDEP</name>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GNPTXSTS</name>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00040100</resetValue>
          <fields>
            <field>
              <name>NPTXFSPCAVAIL</name>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NPTXQSPCAVAIL</name>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NPTXQTOP</name>
              <bitOffset>24</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GSNPSID</name>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <resetValue>0x4F54400A</resetValue>
          <fields>
            <field>
              <name>SYNOPSYSID</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GHWCFG1</name>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EPDIR</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GHWCFG2</name>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <resetValue>0x224DD930</resetValue>
          <fields>
            <field>
              <name>OTGMODE</name>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OTGARCH</name>
              <bitOffset>3</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SINGPNT</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>HSPHYTYPE</name>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FSPHYTYPE</name>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NUMDEVEPS</name>
              <bitOffset>10</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NUMHSTCHNL</name>
              <bitOffset>14</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PERIOSUPPORT</name>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DYNFIFOSIZING</name>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MULTIPROCINTRPT</name>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NPTXQDEPTH</name>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PTXQDEPTH</name>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TKNQDEPTH</name>
              <bitOffset>26</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OTG_ENABLE_IC_USB</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GHWCFG3</name>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <resetValue>0x010004B5</resetValue>
          <fields>
            <field>
              <name>XFERSIZEWIDTH</name>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PKTSIZEWIDTH</name>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OTGEN</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>I2CINTSEL</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VNDCTLSUPT</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OPTFEATURE</name>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RSTTYPE</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ADPSUPPORT</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>HSICMODE</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BCSUPPORT</name>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>LPMMODE</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DFIFODEPTH</name>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GHWCFG4</name>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <resetValue>0xD3F0A030</resetValue>
          <fields>
            <field>
              <name>G_NUMDEVPERIOEPS</name>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>G_PARTIALPWRDN</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>G_AHBFREQ</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>G_HIBERNATION</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>G_EXTENDEDHIBERNATION</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>G_ACGSUPT</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>G_ENHANCEDLPMSUPT</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>G_PHYDATAWIDTH</name>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>G_NUMCTLEPS</name>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>G_IDDQFLTR</name>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>G_VBUSVALIDFLTR</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>G_AVALIDFLTR</name>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>G_BVALIDFLTR</name>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>G_SESSENDFLTR</name>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>G_DEDFIFOMODE</name>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>G_INEPS</name>
              <bitOffset>26</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>G_DESCDMAENABLED</name>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>G_DESCDMA</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GDFIFOCFG</name>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>GDFIFOCFG</name>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EPINFOBASEADDR</name>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HPTXFSIZ</name>
          <addressOffset>0x100</addressOffset>
          <size>0x20</size>
          <resetValue>0x10000200</resetValue>
          <fields>
            <field>
              <name>PTXFSTADDR</name>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PTXFSIZE</name>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPTXF1</name>
          <addressOffset>0x104</addressOffset>
          <size>0x20</size>
          <resetValue>0x10000200</resetValue>
          <fields>
            <field>
              <name>INEP1TXFSTADDR</name>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INEP1TXFDEP</name>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPTXF2</name>
          <addressOffset>0x108</addressOffset>
          <size>0x20</size>
          <resetValue>0x10000200</resetValue>
          <fields>
            <field>
              <name>INEP2TXFSTADDR</name>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INEP2TXFDEP</name>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPTXF3</name>
          <addressOffset>0x10C</addressOffset>
          <size>0x20</size>
          <resetValue>0x10000200</resetValue>
          <fields>
            <field>
              <name>INEP3TXFSTADDR</name>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INEP3TXFDEP</name>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPTXF4</name>
          <addressOffset>0x110</addressOffset>
          <size>0x20</size>
          <resetValue>0x10000200</resetValue>
          <fields>
            <field>
              <name>INEP4TXFSTADDR</name>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INEP4TXFDEP</name>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCFG</name>
          <addressOffset>0x400</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_FSLSPCLKSEL</name>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_FSLSSUPP</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_ENA32KHZS</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DESCDMA</name>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_FRLISTEN</name>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_PERSCHEDENA</name>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_MODECHTIMEN</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HFIR</name>
          <addressOffset>0x404</addressOffset>
          <size>0x20</size>
          <resetValue>0x000017D7</resetValue>
          <fields>
            <field>
              <name>FRINT</name>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HFIRRLDCTRL</name>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HFNUM</name>
          <addressOffset>0x408</addressOffset>
          <size>0x20</size>
          <resetValue>0x00003FFF</resetValue>
          <fields>
            <field>
              <name>FRNUM</name>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FRREM</name>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HPTXSTS</name>
          <addressOffset>0x410</addressOffset>
          <size>0x20</size>
          <resetValue>0x00080100</resetValue>
          <fields>
            <field>
              <name>PTXFSPCAVAIL</name>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PTXQSPCAVAIL</name>
              <bitOffset>16</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PTXQTOP</name>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HAINT</name>
          <addressOffset>0x414</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>HAINT</name>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HAINTMSK</name>
          <addressOffset>0x418</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>HAINTMSK</name>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HFLBADDR</name>
          <addressOffset>0x41C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>HFLBADDR</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HPRT</name>
          <addressOffset>0x440</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PRTCONNSTS</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PRTCONNDET</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRTENA</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRTENCHNG</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRTOVRCURRACT</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PRTOVRCURRCHNG</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRTRES</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRTSUSP</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRTRST</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRTLNSTS</name>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PRTPWR</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRTTSTCTL</name>
              <bitOffset>13</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRTSPD</name>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCCHAR0</name>
          <addressOffset>0x500</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_MPS0</name>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EPNUM0</name>
              <bitOffset>11</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EPDIR0</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_LSPDDEV0</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EPTYPE0</name>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EC0</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DEVADDR0</name>
              <bitOffset>22</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_ODDFRM0</name>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHDIS0</name>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHENA0</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCINT0</name>
          <addressOffset>0x508</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_XFERCOMPL0</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHHLTD0</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_AHBERR0</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_STALL0</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NACK0</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_ACK0</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NYET0</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_XACTERR0</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BBLERR0</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_FRMOVRUN0</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DATATGLERR0</name>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BNAINTR0</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_XCS_XACT_ERR0</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DESC_LST_ROLLINTR0</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCINTMSK0</name>
          <addressOffset>0x50C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_XFERCOMPLMSK0</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHHLTDMSK0</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_AHBERRMSK0</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_STALLMSK0</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NAKMSK0</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_ACKMSK0</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NYETMSK0</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_XACTERRMSK0</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BBLERRMSK0</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_FRMOVRUNMSK0</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DATATGLERRMSK0</name>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BNAINTRMSK0</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DESC_LST_ROLLINTRMSK0</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCTSIZ0</name>
          <addressOffset>0x510</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_XFERSIZE0</name>
              <bitOffset>0</bitOffset>
              <bitWidth>19</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_PKTCNT0</name>
              <bitOffset>19</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_PID0</name>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DOPNG0</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCDMA0</name>
          <addressOffset>0x514</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_DMAADDR0</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCDMAB0</name>
          <addressOffset>0x51C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_HCDMAB0</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCCHAR1</name>
          <addressOffset>0x520</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_MPS1</name>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EPNUM1</name>
              <bitOffset>11</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EPDIR1</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_LSPDDEV1</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EPTYPE1</name>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EC1</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DEVADDR1</name>
              <bitOffset>22</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_ODDFRM1</name>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHDIS1</name>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHENA1</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCINT1</name>
          <addressOffset>0x528</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_XFERCOMPL1</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHHLTD1</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_AHBERR1</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_STALL1</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NACK1</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_ACK1</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NYET1</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_XACTERR1</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BBLERR1</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_FRMOVRUN1</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DATATGLERR1</name>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BNAINTR1</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_XCS_XACT_ERR1</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DESC_LST_ROLLINTR1</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCINTMSK1</name>
          <addressOffset>0x52C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_XFERCOMPLMSK1</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHHLTDMSK1</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_AHBERRMSK1</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_STALLMSK1</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NAKMSK1</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_ACKMSK1</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NYETMSK1</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_XACTERRMSK1</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BBLERRMSK1</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_FRMOVRUNMSK1</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DATATGLERRMSK1</name>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BNAINTRMSK1</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DESC_LST_ROLLINTRMSK1</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCTSIZ1</name>
          <addressOffset>0x530</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_XFERSIZE1</name>
              <bitOffset>0</bitOffset>
              <bitWidth>19</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_PKTCNT1</name>
              <bitOffset>19</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_PID1</name>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DOPNG1</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCDMA1</name>
          <addressOffset>0x534</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_DMAADDR1</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCDMAB1</name>
          <addressOffset>0x53C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_HCDMAB1</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCCHAR2</name>
          <addressOffset>0x540</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_MPS2</name>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EPNUM2</name>
              <bitOffset>11</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EPDIR2</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_LSPDDEV2</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EPTYPE2</name>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EC2</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DEVADDR2</name>
              <bitOffset>22</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_ODDFRM2</name>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHDIS2</name>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHENA2</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCINT2</name>
          <addressOffset>0x548</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_XFERCOMPL2</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHHLTD2</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_AHBERR2</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_STALL2</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NACK2</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_ACK2</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NYET2</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_XACTERR2</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BBLERR2</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_FRMOVRUN2</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DATATGLERR2</name>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BNAINTR2</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_XCS_XACT_ERR2</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DESC_LST_ROLLINTR2</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCINTMSK2</name>
          <addressOffset>0x54C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_XFERCOMPLMSK2</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHHLTDMSK2</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_AHBERRMSK2</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_STALLMSK2</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NAKMSK2</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_ACKMSK2</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NYETMSK2</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_XACTERRMSK2</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BBLERRMSK2</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_FRMOVRUNMSK2</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DATATGLERRMSK2</name>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BNAINTRMSK2</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DESC_LST_ROLLINTRMSK2</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCTSIZ2</name>
          <addressOffset>0x550</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_XFERSIZE2</name>
              <bitOffset>0</bitOffset>
              <bitWidth>19</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_PKTCNT2</name>
              <bitOffset>19</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_PID2</name>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DOPNG2</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCDMA2</name>
          <addressOffset>0x554</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_DMAADDR2</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCDMAB2</name>
          <addressOffset>0x55C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_HCDMAB2</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCCHAR3</name>
          <addressOffset>0x560</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_MPS3</name>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EPNUM3</name>
              <bitOffset>11</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EPDIR3</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_LSPDDEV3</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EPTYPE3</name>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EC3</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DEVADDR3</name>
              <bitOffset>22</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_ODDFRM3</name>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHDIS3</name>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHENA3</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCINT3</name>
          <addressOffset>0x568</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_XFERCOMPL3</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHHLTD3</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_AHBERR3</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_STALL3</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NACK3</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_ACK3</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NYET3</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_XACTERR3</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BBLERR3</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_FRMOVRUN3</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DATATGLERR3</name>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BNAINTR3</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_XCS_XACT_ERR3</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DESC_LST_ROLLINTR3</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCINTMSK3</name>
          <addressOffset>0x56C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_XFERCOMPLMSK3</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHHLTDMSK3</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_AHBERRMSK3</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_STALLMSK3</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NAKMSK3</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_ACKMSK3</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NYETMSK3</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_XACTERRMSK3</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BBLERRMSK3</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_FRMOVRUNMSK3</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DATATGLERRMSK3</name>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BNAINTRMSK3</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DESC_LST_ROLLINTRMSK3</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCTSIZ3</name>
          <addressOffset>0x570</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_XFERSIZE3</name>
              <bitOffset>0</bitOffset>
              <bitWidth>19</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_PKTCNT3</name>
              <bitOffset>19</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_PID3</name>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DOPNG3</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCDMA3</name>
          <addressOffset>0x574</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_DMAADDR3</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCDMAB3</name>
          <addressOffset>0x57C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_HCDMAB3</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCCHAR4</name>
          <addressOffset>0x580</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_MPS4</name>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EPNUM4</name>
              <bitOffset>11</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EPDIR4</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_LSPDDEV4</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EPTYPE4</name>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EC4</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DEVADDR4</name>
              <bitOffset>22</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_ODDFRM4</name>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHDIS4</name>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHENA4</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCINT4</name>
          <addressOffset>0x588</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_XFERCOMPL4</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHHLTD4</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_AHBERR4</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_STALL4</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NACK4</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_ACK4</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NYET4</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_XACTERR4</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BBLERR4</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_FRMOVRUN4</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DATATGLERR4</name>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BNAINTR4</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_XCS_XACT_ERR4</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DESC_LST_ROLLINTR4</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCINTMSK4</name>
          <addressOffset>0x58C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_XFERCOMPLMSK4</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHHLTDMSK4</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_AHBERRMSK4</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_STALLMSK4</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NAKMSK4</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_ACKMSK4</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NYETMSK4</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_XACTERRMSK4</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BBLERRMSK4</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_FRMOVRUNMSK4</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DATATGLERRMSK4</name>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BNAINTRMSK4</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DESC_LST_ROLLINTRMSK4</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCTSIZ4</name>
          <addressOffset>0x590</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_XFERSIZE4</name>
              <bitOffset>0</bitOffset>
              <bitWidth>19</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_PKTCNT4</name>
              <bitOffset>19</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_PID4</name>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DOPNG4</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCDMA4</name>
          <addressOffset>0x594</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_DMAADDR4</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCDMAB4</name>
          <addressOffset>0x59C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_HCDMAB4</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCCHAR5</name>
          <addressOffset>0x5A0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_MPS5</name>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EPNUM5</name>
              <bitOffset>11</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EPDIR5</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_LSPDDEV5</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EPTYPE5</name>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EC5</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DEVADDR5</name>
              <bitOffset>22</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_ODDFRM5</name>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHDIS5</name>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHENA5</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCINT5</name>
          <addressOffset>0x5A8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_XFERCOMPL5</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHHLTD5</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_AHBERR5</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_STALL5</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NACK5</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_ACK5</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NYET5</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_XACTERR5</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BBLERR5</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_FRMOVRUN5</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DATATGLERR5</name>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BNAINTR5</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_XCS_XACT_ERR5</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DESC_LST_ROLLINTR5</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCINTMSK5</name>
          <addressOffset>0x5AC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_XFERCOMPLMSK5</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHHLTDMSK5</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_AHBERRMSK5</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_STALLMSK5</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NAKMSK5</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_ACKMSK5</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NYETMSK5</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_XACTERRMSK5</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BBLERRMSK5</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_FRMOVRUNMSK5</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DATATGLERRMSK5</name>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BNAINTRMSK5</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DESC_LST_ROLLINTRMSK5</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCTSIZ5</name>
          <addressOffset>0x5B0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_XFERSIZE5</name>
              <bitOffset>0</bitOffset>
              <bitWidth>19</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_PKTCNT5</name>
              <bitOffset>19</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_PID5</name>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DOPNG5</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCDMA5</name>
          <addressOffset>0x5B4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_DMAADDR5</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCDMAB5</name>
          <addressOffset>0x5BC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_HCDMAB5</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCCHAR6</name>
          <addressOffset>0x5C0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_MPS6</name>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EPNUM6</name>
              <bitOffset>11</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EPDIR6</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_LSPDDEV6</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EPTYPE6</name>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EC6</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DEVADDR6</name>
              <bitOffset>22</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_ODDFRM6</name>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHDIS6</name>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHENA6</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCINT6</name>
          <addressOffset>0x5C8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_XFERCOMPL6</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHHLTD6</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_AHBERR6</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_STALL6</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NACK6</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_ACK6</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NYET6</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_XACTERR6</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BBLERR6</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_FRMOVRUN6</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DATATGLERR6</name>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BNAINTR6</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_XCS_XACT_ERR6</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DESC_LST_ROLLINTR6</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCINTMSK6</name>
          <addressOffset>0x5CC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_XFERCOMPLMSK6</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHHLTDMSK6</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_AHBERRMSK6</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_STALLMSK6</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NAKMSK6</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_ACKMSK6</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NYETMSK6</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_XACTERRMSK6</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BBLERRMSK6</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_FRMOVRUNMSK6</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DATATGLERRMSK6</name>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BNAINTRMSK6</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DESC_LST_ROLLINTRMSK6</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCTSIZ6</name>
          <addressOffset>0x5D0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_XFERSIZE6</name>
              <bitOffset>0</bitOffset>
              <bitWidth>19</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_PKTCNT6</name>
              <bitOffset>19</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_PID6</name>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DOPNG6</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCDMA6</name>
          <addressOffset>0x5D4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_DMAADDR6</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCDMAB6</name>
          <addressOffset>0x5DC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_HCDMAB6</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCCHAR7</name>
          <addressOffset>0x5E0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_MPS7</name>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EPNUM7</name>
              <bitOffset>11</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EPDIR7</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_LSPDDEV7</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EPTYPE7</name>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_EC7</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DEVADDR7</name>
              <bitOffset>22</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_ODDFRM7</name>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHDIS7</name>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHENA7</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCINT7</name>
          <addressOffset>0x5E8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_XFERCOMPL7</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHHLTD7</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_AHBERR7</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_STALL7</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NACK7</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_ACK7</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NYET7</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_XACTERR7</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BBLERR7</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_FRMOVRUN7</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DATATGLERR7</name>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BNAINTR7</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_XCS_XACT_ERR7</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DESC_LST_ROLLINTR7</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCINTMSK7</name>
          <addressOffset>0x5EC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_XFERCOMPLMSK7</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_CHHLTDMSK7</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_AHBERRMSK7</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_STALLMSK7</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NAKMSK7</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_ACKMSK7</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_NYETMSK7</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_XACTERRMSK7</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BBLERRMSK7</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_FRMOVRUNMSK7</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DATATGLERRMSK7</name>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_BNAINTRMSK7</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DESC_LST_ROLLINTRMSK7</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCTSIZ7</name>
          <addressOffset>0x5F0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_XFERSIZE7</name>
              <bitOffset>0</bitOffset>
              <bitWidth>19</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_PKTCNT7</name>
              <bitOffset>19</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_PID7</name>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>H_DOPNG7</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCDMA7</name>
          <addressOffset>0x5F4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_DMAADDR7</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCDMAB7</name>
          <addressOffset>0x5FC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>H_HCDMAB7</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCFG</name>
          <addressOffset>0x800</addressOffset>
          <size>0x20</size>
          <resetValue>0x08100000</resetValue>
          <fields>
            <field>
              <name>NZSTSOUTHSHK</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEVADDR</name>
              <bitOffset>4</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PERFRLINT</name>
              <bitOffset>11</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENDEVOUTNAK</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XCVRDLY</name>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ERRATICINTMSK</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EPMISCNT</name>
              <bitOffset>18</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DESCDMA</name>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PERSCHINTVL</name>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESVALID</name>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCTL</name>
          <addressOffset>0x804</addressOffset>
          <size>0x20</size>
          <resetValue>0x00002000</resetValue>
          <fields>
            <field>
              <name>RMTWKUPSIG</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SFTDISCON</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GNPINNAKSTS</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GOUTNAKSTS</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TSTCTL</name>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SGNPINNAK</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CGNPINNAK</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SGOUTNAK</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CGOUTNAK</name>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>PWRONPRGDONE</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GMC</name>
              <bitOffset>13</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IGNRFRMNUM</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NAKONBBLE</name>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENCOUNTONBNA</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEEPSLEEPBESLREJECT</name>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DSTS</name>
          <addressOffset>0x808</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000002</resetValue>
          <fields>
            <field>
              <name>SUSPSTS</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ENUMSPD</name>
              <bitOffset>1</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ERRTICERR</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SOFFN</name>
              <bitOffset>8</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DEVLNSTS</name>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPMSK</name>
          <addressOffset>0x810</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DI_XFERCOMPLMSK</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DI_EPDISBLDMSK</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DI_AHBERMSK</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMEOUTMSK</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTKNTXFEMPMSK</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTKNEPMISMSK</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INEPNAKEFFMSK</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFOUNDRNMSK</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BNAININTRMSK</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DI_NAKMSK</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPMSK</name>
          <addressOffset>0x814</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>XFERCOMPLMSK</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EPDISBLDMSK</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AHBERMSK</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SETUPMSK</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTTKNEPDISMSK</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STSPHSERCVDMSK</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACK2BACKSETUP</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTPKTERRMSK</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BNAOUTINTRMSK</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BBLEERRMSK</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NAKMSK</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NYETMSK</name>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DAINT</name>
          <addressOffset>0x818</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INEPINT0</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INEPINT1</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INEPINT2</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INEPINT3</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INEPINT4</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INEPINT5</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>INEPINT6</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTEPINT0</name>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTEPINT1</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTEPINT2</name>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTEPINT3</name>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTEPINT4</name>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTEPINT5</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUTEPINT6</name>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DAINTMSK</name>
          <addressOffset>0x81C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>INEPMSK0</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INEPMSK1</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INEPMSK2</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INEPMSK3</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INEPMSK4</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INEPMSK5</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INEPMSK6</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTEPMSK0</name>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTEPMSK1</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTEPMSK2</name>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTEPMSK3</name>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTEPMSK4</name>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTEPMSK5</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTEPMSK6</name>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DVBUSDIS</name>
          <addressOffset>0x828</addressOffset>
          <size>0x20</size>
          <resetValue>0x000017D7</resetValue>
          <fields>
            <field>
              <name>DVBUSDIS</name>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DVBUSPULSE</name>
          <addressOffset>0x82C</addressOffset>
          <size>0x20</size>
          <resetValue>0x000005B8</resetValue>
          <fields>
            <field>
              <name>DVBUSPULSE</name>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DTHRCTL</name>
          <addressOffset>0x830</addressOffset>
          <size>0x20</size>
          <resetValue>0x08020020</resetValue>
          <fields>
            <field>
              <name>NONISOTHREN</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ISOTHREN</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXTHRLEN</name>
              <bitOffset>2</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AHBTHRRATIO</name>
              <bitOffset>11</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXTHREN</name>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXTHRLEN</name>
              <bitOffset>17</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ARBPRKEN</name>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPEMPMSK</name>
          <addressOffset>0x834</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_INEPTXFEMPMSK</name>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPCTL0</name>
          <addressOffset>0x900</addressOffset>
          <size>0x20</size>
          <resetValue>0x00008000</resetValue>
          <fields>
            <field>
              <name>D_MPS0</name>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_USBACTEP0</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>D_NAKSTS0</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>D_EPTYPE0</name>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>D_STALL0</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_TXFNUM0</name>
              <bitOffset>22</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_CNAK0</name>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DI_SNAK0</name>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>D_EPDIS0</name>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_EPENA0</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPINT0</name>
          <addressOffset>0x908</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_XFERCOMPL0</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_EPDISBLD0</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_AHBERR0</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_TIMEOUT0</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_INTKNTXFEMP0</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_INTKNEPMIS0</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_INEPNAKEFF0</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_TXFEMP0</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>D_TXFIFOUNDRN0</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_BNAINTR0</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_PKTDRPSTS0</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_BBLEERR0</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_NAKINTRPT0</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_NYETINTRPT0</name>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPTSIZ0</name>
          <addressOffset>0x910</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_XFERSIZE0</name>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_PKTCNT0</name>
              <bitOffset>19</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPDMA0</name>
          <addressOffset>0x914</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_DMAADDR0</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DTXFSTS0</name>
          <addressOffset>0x918</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_INEPTXFSPCAVAIL0</name>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPDMAB0</name>
          <addressOffset>0x91C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_DMABUFFERADDR0</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPCTL1</name>
          <addressOffset>0x920</addressOffset>
          <size>0x20</size>
          <resetValue>0x00008000</resetValue>
          <fields>
            <field>
              <name>D_MPS1</name>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_USBACTEP1</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>D_NAKSTS1</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>D_EPTYPE1</name>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>D_STALL1</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_TXFNUM1</name>
              <bitOffset>22</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_CNAK1</name>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DI_SNAK1</name>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DI_SETD0PID1</name>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DI_SETD1PID1</name>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>D_EPDIS1</name>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_EPENA1</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPINT1</name>
          <addressOffset>0x928</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_XFERCOMPL1</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_EPDISBLD1</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_AHBERR1</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_TIMEOUT1</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_INTKNTXFEMP1</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_INTKNEPMIS1</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_INEPNAKEFF1</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_TXFEMP1</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>D_TXFIFOUNDRN1</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_BNAINTR1</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_PKTDRPSTS1</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_BBLEERR1</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_NAKINTRPT1</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_NYETINTRPT1</name>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPTSIZ1</name>
          <addressOffset>0x930</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_XFERSIZE1</name>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_PKTCNT1</name>
              <bitOffset>19</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPDMA1</name>
          <addressOffset>0x934</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_DMAADDR1</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DTXFSTS1</name>
          <addressOffset>0x938</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_INEPTXFSPCAVAIL1</name>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPDMAB1</name>
          <addressOffset>0x93C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_DMABUFFERADDR1</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPCTL2</name>
          <addressOffset>0x940</addressOffset>
          <size>0x20</size>
          <resetValue>0x00008000</resetValue>
          <fields>
            <field>
              <name>D_MPS2</name>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_USBACTEP2</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>D_NAKSTS2</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>D_EPTYPE2</name>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>D_STALL2</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_TXFNUM2</name>
              <bitOffset>22</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_CNAK2</name>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DI_SNAK2</name>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DI_SETD0PID2</name>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DI_SETD1PID2</name>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>D_EPDIS2</name>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_EPENA2</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPINT2</name>
          <addressOffset>0x948</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_XFERCOMPL2</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_EPDISBLD2</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_AHBERR2</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_TIMEOUT2</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_INTKNTXFEMP2</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_INTKNEPMIS2</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_INEPNAKEFF2</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_TXFEMP2</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>D_TXFIFOUNDRN2</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_BNAINTR2</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_PKTDRPSTS2</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_BBLEERR2</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_NAKINTRPT2</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_NYETINTRPT2</name>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPTSIZ2</name>
          <addressOffset>0x950</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_XFERSIZE2</name>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_PKTCNT2</name>
              <bitOffset>19</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPDMA2</name>
          <addressOffset>0x954</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_DMAADDR2</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DTXFSTS2</name>
          <addressOffset>0x958</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_INEPTXFSPCAVAIL2</name>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPDMAB2</name>
          <addressOffset>0x95C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_DMABUFFERADDR2</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPCTL3</name>
          <addressOffset>0x960</addressOffset>
          <size>0x20</size>
          <resetValue>0x00008000</resetValue>
          <fields>
            <field>
              <name>DI_MPS3</name>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DI_USBACTEP3</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DI_NAKSTS3</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DI_EPTYPE3</name>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DI_STALL3</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DI_TXFNUM3</name>
              <bitOffset>22</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DI_CNAK3</name>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DI_SNAK3</name>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DI_SETD0PID3</name>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DI_SETD1PID3</name>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DI_EPDIS3</name>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DI_EPENA3</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPINT3</name>
          <addressOffset>0x968</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_XFERCOMPL3</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_EPDISBLD3</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_AHBERR3</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_TIMEOUT3</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_INTKNTXFEMP3</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_INTKNEPMIS3</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_INEPNAKEFF3</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_TXFEMP3</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>D_TXFIFOUNDRN3</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_BNAINTR3</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_PKTDRPSTS3</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_BBLEERR3</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_NAKINTRPT3</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_NYETINTRPT3</name>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPTSIZ3</name>
          <addressOffset>0x970</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_XFERSIZE3</name>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_PKTCNT3</name>
              <bitOffset>19</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPDMA3</name>
          <addressOffset>0x974</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_DMAADDR3</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DTXFSTS3</name>
          <addressOffset>0x978</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_INEPTXFSPCAVAIL3</name>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPDMAB3</name>
          <addressOffset>0x97C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_DMABUFFERADDR3</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPCTL4</name>
          <addressOffset>0x980</addressOffset>
          <size>0x20</size>
          <resetValue>0x00008000</resetValue>
          <fields>
            <field>
              <name>D_MPS4</name>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_USBACTEP4</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>D_NAKSTS4</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>D_EPTYPE4</name>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>D_STALL4</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_TXFNUM4</name>
              <bitOffset>22</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_CNAK4</name>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DI_SNAK4</name>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DI_SETD0PID4</name>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DI_SETD1PID4</name>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>D_EPDIS4</name>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_EPENA4</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPINT4</name>
          <addressOffset>0x988</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_XFERCOMPL4</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_EPDISBLD4</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_AHBERR4</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_TIMEOUT4</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_INTKNTXFEMP4</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_INTKNEPMIS4</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_INEPNAKEFF4</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_TXFEMP4</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>D_TXFIFOUNDRN4</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_BNAINTR4</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_PKTDRPSTS4</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_BBLEERR4</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_NAKINTRPT4</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_NYETINTRPT4</name>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPTSIZ4</name>
          <addressOffset>0x990</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_XFERSIZE4</name>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_PKTCNT4</name>
              <bitOffset>19</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPDMA4</name>
          <addressOffset>0x994</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_DMAADDR4</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DTXFSTS4</name>
          <addressOffset>0x998</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_INEPTXFSPCAVAIL4</name>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPDMAB4</name>
          <addressOffset>0x99C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_DMABUFFERADDR4</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPCTL5</name>
          <addressOffset>0x9A0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00008000</resetValue>
          <fields>
            <field>
              <name>DI_MPS5</name>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DI_USBACTEP5</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DI_NAKSTS5</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DI_EPTYPE5</name>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DI_STALL5</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DI_TXFNUM5</name>
              <bitOffset>22</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DI_CNAK5</name>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DI_SNAK5</name>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DI_SETD0PID5</name>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DI_SETD1PID5</name>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DI_EPDIS5</name>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DI_EPENA5</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPINT5</name>
          <addressOffset>0x9A8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_XFERCOMPL5</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_EPDISBLD5</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_AHBERR5</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_TIMEOUT5</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_INTKNTXFEMP5</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_INTKNEPMIS5</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_INEPNAKEFF5</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_TXFEMP5</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>D_TXFIFOUNDRN5</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_BNAINTR5</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_PKTDRPSTS5</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_BBLEERR5</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_NAKINTRPT5</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_NYETINTRPT5</name>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPTSIZ5</name>
          <addressOffset>0x9B0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_XFERSIZE5</name>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_PKTCNT5</name>
              <bitOffset>19</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPDMA5</name>
          <addressOffset>0x9B4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_DMAADDR5</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DTXFSTS5</name>
          <addressOffset>0x9B8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_INEPTXFSPCAVAIL5</name>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPDMAB5</name>
          <addressOffset>0x9BC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_DMABUFFERADDR5</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPCTL6</name>
          <addressOffset>0x9C0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00008000</resetValue>
          <fields>
            <field>
              <name>D_MPS6</name>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_USBACTEP6</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>D_NAKSTS6</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>D_EPTYPE6</name>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>D_STALL6</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_TXFNUM6</name>
              <bitOffset>22</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_CNAK6</name>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DI_SNAK6</name>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DI_SETD0PID6</name>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DI_SETD1PID6</name>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>D_EPDIS6</name>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_EPENA6</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPINT6</name>
          <addressOffset>0x9C8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_XFERCOMPL6</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_EPDISBLD6</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_AHBERR6</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_TIMEOUT6</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_INTKNTXFEMP6</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_INTKNEPMIS6</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_INEPNAKEFF6</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_TXFEMP6</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>D_TXFIFOUNDRN6</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_BNAINTR6</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_PKTDRPSTS6</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_BBLEERR6</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_NAKINTRPT6</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_NYETINTRPT6</name>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPTSIZ6</name>
          <addressOffset>0x9D0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_XFERSIZE6</name>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>D_PKTCNT6</name>
              <bitOffset>19</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPDMA6</name>
          <addressOffset>0x9D4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_DMAADDR6</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DTXFSTS6</name>
          <addressOffset>0x9D8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_INEPTXFSPCAVAIL6</name>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIEPDMAB6</name>
          <addressOffset>0x9DC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>D_DMABUFFERADDR6</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPCTL0</name>
          <addressOffset>0xB00</addressOffset>
          <size>0x20</size>
          <resetValue>0x00008000</resetValue>
          <fields>
            <field>
              <name>MPS0</name>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USBACTEP0</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NAKSTS0</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EPTYPE0</name>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SNP0</name>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STALL0</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CNAK0</name>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DO_SNAK0</name>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>EPDIS0</name>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EPENA0</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPINT0</name>
          <addressOffset>0xB08</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>XFERCOMPL0</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EPDISBLD0</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AHBERR0</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SETUP0</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTTKNEPDIS0</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STSPHSERCVD0</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACK2BACKSETUP0</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTPKTERR0</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BNAINTR0</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PKTDRPSTS0</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BBLEERR0</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NAKINTRPT0</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NYEPINTRPT0</name>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STUPPKTRCVD0</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPTSIZ0</name>
          <addressOffset>0xB10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>XFERSIZE0</name>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PKTCNT0</name>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SUPCNT0</name>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPDMA0</name>
          <addressOffset>0xB14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMAADDR0</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPDMAB0</name>
          <addressOffset>0xB1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMABUFFERADDR0</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPCTL1</name>
          <addressOffset>0xB20</addressOffset>
          <size>0x20</size>
          <resetValue>0x00008000</resetValue>
          <fields>
            <field>
              <name>MPS1</name>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USBACTEP1</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NAKSTS1</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EPTYPE1</name>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SNP1</name>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STALL1</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CNAK1</name>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DO_SNAK1</name>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DO_SETD0PID1</name>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DO_SETD1PID1</name>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>EPDIS1</name>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EPENA1</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPINT1</name>
          <addressOffset>0xB28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>XFERCOMPL1</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EPDISBLD1</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AHBERR1</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SETUP1</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTTKNEPDIS1</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STSPHSERCVD1</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACK2BACKSETUP1</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTPKTERR1</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BNAINTR1</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PKTDRPSTS1</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BBLEERR1</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NAKINTRPT1</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NYEPINTRPT1</name>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STUPPKTRCVD1</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPTSIZ1</name>
          <addressOffset>0xB30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>XFERSIZE1</name>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PKTCNT1</name>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SUPCNT1</name>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPDMA1</name>
          <addressOffset>0xB34</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMAADDR1</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPDMAB1</name>
          <addressOffset>0xB3C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMABUFFERADDR1</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPCTL2</name>
          <addressOffset>0xB40</addressOffset>
          <size>0x20</size>
          <resetValue>0x00008000</resetValue>
          <fields>
            <field>
              <name>MPS2</name>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USBACTEP2</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NAKSTS2</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EPTYPE2</name>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SNP2</name>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STALL2</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CNAK2</name>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DO_SNAK2</name>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DO_SETD0PID2</name>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DO_SETD1PID2</name>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>EPDIS2</name>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EPENA2</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPINT2</name>
          <addressOffset>0xB48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>XFERCOMPL2</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EPDISBLD2</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AHBERR2</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SETUP2</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTTKNEPDIS2</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STSPHSERCVD2</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACK2BACKSETUP2</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTPKTERR2</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BNAINTR2</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PKTDRPSTS2</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BBLEERR2</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NAKINTRPT2</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NYEPINTRPT2</name>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STUPPKTRCVD2</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPTSIZ2</name>
          <addressOffset>0xB50</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>XFERSIZE2</name>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PKTCNT2</name>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SUPCNT2</name>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPDMA2</name>
          <addressOffset>0xB54</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMAADDR2</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPDMAB2</name>
          <addressOffset>0xB5C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMABUFFERADDR2</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPCTL3</name>
          <addressOffset>0xB60</addressOffset>
          <size>0x20</size>
          <resetValue>0x00008000</resetValue>
          <fields>
            <field>
              <name>MPS3</name>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USBACTEP3</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NAKSTS3</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EPTYPE3</name>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SNP3</name>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STALL3</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CNAK3</name>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DO_SNAK3</name>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DO_SETD0PID3</name>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DO_SETD1PID3</name>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>EPDIS3</name>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EPENA3</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPINT3</name>
          <addressOffset>0xB68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>XFERCOMPL3</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EPDISBLD3</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AHBERR3</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SETUP3</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTTKNEPDIS3</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STSPHSERCVD3</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACK2BACKSETUP3</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTPKTERR3</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BNAINTR3</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PKTDRPSTS3</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BBLEERR3</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NAKINTRPT3</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NYEPINTRPT3</name>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STUPPKTRCVD3</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPTSIZ3</name>
          <addressOffset>0xB70</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>XFERSIZE3</name>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PKTCNT3</name>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SUPCNT3</name>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPDMA3</name>
          <addressOffset>0xB74</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMAADDR3</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPDMAB3</name>
          <addressOffset>0xB7C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMABUFFERADDR3</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPCTL4</name>
          <addressOffset>0xB80</addressOffset>
          <size>0x20</size>
          <resetValue>0x00008000</resetValue>
          <fields>
            <field>
              <name>MPS4</name>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USBACTEP4</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NAKSTS4</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EPTYPE4</name>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SNP4</name>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STALL4</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CNAK4</name>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DO_SNAK4</name>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DO_SETD0PID4</name>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DO_SETD1PID4</name>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>EPDIS4</name>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EPENA4</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPINT4</name>
          <addressOffset>0xB88</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>XFERCOMPL4</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EPDISBLD4</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AHBERR4</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SETUP4</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTTKNEPDIS4</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STSPHSERCVD4</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACK2BACKSETUP4</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTPKTERR4</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BNAINTR4</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PKTDRPSTS4</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BBLEERR4</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NAKINTRPT4</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NYEPINTRPT4</name>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STUPPKTRCVD4</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPTSIZ4</name>
          <addressOffset>0xB90</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>XFERSIZE4</name>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PKTCNT4</name>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SUPCNT4</name>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPDMA4</name>
          <addressOffset>0xB94</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMAADDR4</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPDMAB4</name>
          <addressOffset>0xB9C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMABUFFERADDR4</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPCTL5</name>
          <addressOffset>0xBA0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00008000</resetValue>
          <fields>
            <field>
              <name>MPS5</name>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USBACTEP5</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NAKSTS5</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EPTYPE5</name>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SNP5</name>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STALL5</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CNAK5</name>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DO_SNAK5</name>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DO_SETD0PID5</name>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DO_SETD1PID5</name>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>EPDIS5</name>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EPENA5</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPINT5</name>
          <addressOffset>0xBA8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>XFERCOMPL5</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EPDISBLD5</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AHBERR5</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SETUP5</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTTKNEPDIS5</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STSPHSERCVD5</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACK2BACKSETUP5</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTPKTERR5</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BNAINTR5</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PKTDRPSTS5</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BBLEERR5</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NAKINTRPT5</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NYEPINTRPT5</name>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STUPPKTRCVD5</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPTSIZ5</name>
          <addressOffset>0xBB0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>XFERSIZE5</name>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PKTCNT5</name>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SUPCNT5</name>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPDMA5</name>
          <addressOffset>0xBB4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMAADDR5</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPDMAB5</name>
          <addressOffset>0xBBC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMABUFFERADDR5</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPCTL6</name>
          <addressOffset>0xBC0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00008000</resetValue>
          <fields>
            <field>
              <name>MPS6</name>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USBACTEP6</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NAKSTS6</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EPTYPE6</name>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SNP6</name>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STALL6</name>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CNAK6</name>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DO_SNAK6</name>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DO_SETD0PID6</name>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DO_SETD1PID6</name>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>EPDIS6</name>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EPENA6</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPINT6</name>
          <addressOffset>0xBC8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>XFERCOMPL6</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EPDISBLD6</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AHBERR6</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SETUP6</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTTKNEPDIS6</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STSPHSERCVD6</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACK2BACKSETUP6</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTPKTERR6</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BNAINTR6</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PKTDRPSTS6</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BBLEERR6</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NAKINTRPT6</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NYEPINTRPT6</name>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STUPPKTRCVD6</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPTSIZ6</name>
          <addressOffset>0xBD0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>XFERSIZE6</name>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PKTCNT6</name>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SUPCNT6</name>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPDMA6</name>
          <addressOffset>0xBD4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMAADDR6</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOEPDMAB6</name>
          <addressOffset>0xBDC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DMABUFFERADDR6</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PCGCCTL</name>
          <addressOffset>0xE00</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>STOPPCLK</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GATEHCLK</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PWRCLMP</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RSTPDWNMODULE</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PHYSLEEP</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>L1SUSPENDED</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RESETAFTERSUSP</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>USB_DEVICE</name>
      <description>Peripheral USB_DEVICE</description>
      <groupName>USB_DEVICE</groupName>
      <baseAddress>0x60038000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x50</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>USB_DEVICE</name>
        <value>96</value>
      </interrupt>
      <registers>
        <register>
          <name>EP1</name>
          <description>Endpoint 1 FIFO register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RDWR_BYTE</name>
              <description>Write and read byte data to/from UART Tx/Rx FIFO through this field. When USB_DEVICE_SERIAL_IN_EMPTY_INT is set, then user can write data (up to 64 bytes) into UART Tx FIFO. When USB_DEVICE_SERIAL_OUT_RECV_PKT_INT is set, user can check USB_DEVICE_OUT_EP1_WR_ADDR USB_DEVICE_OUT_EP0_RD_ADDR to know how many data is received, then read data from UART Rx FIFO.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EP1_CONF</name>
          <description>Endpoint 1 configure and status register</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000002</resetValue>
          <fields>
            <field>
              <name>WR_DONE</name>
              <description>Set this bit to indicate writing byte data to UART Tx FIFO is done.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SERIAL_IN_EP_DATA_FREE</name>
              <description>1'b1: Indicate UART Tx FIFO is not full and can write data into in. After writing USB_DEVICE_WR_DONE, this bit would be 0 until data in UART Tx FIFO is read by USB Host.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SERIAL_OUT_EP_DATA_AVAIL</name>
              <description>1'b1: Indicate there is data in UART Rx FIFO.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW</name>
          <description>Raw status interrupt</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>JTAG_IN_FLUSH_INT_RAW</name>
              <description>The raw interrupt bit turns to high level when flush cmd is received for IN endpoint 2 of JTAG.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SOF_INT_RAW</name>
              <description>The raw interrupt bit turns to high level when SOF frame is received.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SERIAL_OUT_RECV_PKT_INT_RAW</name>
              <description>The raw interrupt bit turns to high level when Serial Port OUT Endpoint received one packet.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SERIAL_IN_EMPTY_INT_RAW</name>
              <description>The raw interrupt bit turns to high level when Serial Port IN Endpoint is empty.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PID_ERR_INT_RAW</name>
              <description>The raw interrupt bit turns to high level when pid error is detected.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CRC5_ERR_INT_RAW</name>
              <description>The raw interrupt bit turns to high level when CRC5 error is detected.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CRC16_ERR_INT_RAW</name>
              <description>The raw interrupt bit turns to high level when CRC16 error is detected.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>STUFF_ERR_INT_RAW</name>
              <description>The raw interrupt bit turns to high level when stuff error is detected.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_TOKEN_REC_IN_EP1_INT_RAW</name>
              <description>The raw interrupt bit turns to high level when IN token for IN endpoint 1 is received.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USB_BUS_RESET_INT_RAW</name>
              <description>The raw interrupt bit turns to high level when usb bus reset is detected.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_EP1_ZERO_PAYLOAD_INT_RAW</name>
              <description>The raw interrupt bit turns to high level when OUT endpoint 1 received packet with zero palyload.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_EP2_ZERO_PAYLOAD_INT_RAW</name>
              <description>The raw interrupt bit turns to high level when OUT endpoint 2 received packet with zero palyload.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST</name>
          <description>Masked interrupt</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>JTAG_IN_FLUSH_INT_ST</name>
              <description>The raw interrupt status bit for the USB_DEVICE_JTAG_IN_FLUSH_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SOF_INT_ST</name>
              <description>The raw interrupt status bit for the USB_DEVICE_SOF_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SERIAL_OUT_RECV_PKT_INT_ST</name>
              <description>The raw interrupt status bit for the USB_DEVICE_SERIAL_OUT_RECV_PKT_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SERIAL_IN_EMPTY_INT_ST</name>
              <description>The raw interrupt status bit for the USB_DEVICE_SERIAL_IN_EMPTY_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PID_ERR_INT_ST</name>
              <description>The raw interrupt status bit for the USB_DEVICE_PID_ERR_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CRC5_ERR_INT_ST</name>
              <description>The raw interrupt status bit for the USB_DEVICE_CRC5_ERR_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CRC16_ERR_INT_ST</name>
              <description>The raw interrupt status bit for the USB_DEVICE_CRC16_ERR_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>STUFF_ERR_INT_ST</name>
              <description>The raw interrupt status bit for the USB_DEVICE_STUFF_ERR_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_TOKEN_REC_IN_EP1_INT_ST</name>
              <description>The raw interrupt status bit for the USB_DEVICE_IN_TOKEN_REC_IN_EP1_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>USB_BUS_RESET_INT_ST</name>
              <description>The raw interrupt status bit for the USB_DEVICE_USB_BUS_RESET_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_EP1_ZERO_PAYLOAD_INT_ST</name>
              <description>The raw interrupt status bit for the USB_DEVICE_OUT_EP1_ZERO_PAYLOAD_INT interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_EP2_ZERO_PAYLOAD_INT_ST</name>
              <description>The raw interrupt status bit for the USB_DEVICE_OUT_EP2_ZERO_PAYLOAD_INT interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>Interrupt enable bits</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>JTAG_IN_FLUSH_INT_ENA</name>
              <description>The interrupt enable bit for the USB_DEVICE_JTAG_IN_FLUSH_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SOF_INT_ENA</name>
              <description>The interrupt enable bit for the USB_DEVICE_SOF_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SERIAL_OUT_RECV_PKT_INT_ENA</name>
              <description>The interrupt enable bit for the USB_DEVICE_SERIAL_OUT_RECV_PKT_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SERIAL_IN_EMPTY_INT_ENA</name>
              <description>The interrupt enable bit for the USB_DEVICE_SERIAL_IN_EMPTY_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PID_ERR_INT_ENA</name>
              <description>The interrupt enable bit for the USB_DEVICE_PID_ERR_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CRC5_ERR_INT_ENA</name>
              <description>The interrupt enable bit for the USB_DEVICE_CRC5_ERR_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CRC16_ERR_INT_ENA</name>
              <description>The interrupt enable bit for the USB_DEVICE_CRC16_ERR_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STUFF_ERR_INT_ENA</name>
              <description>The interrupt enable bit for the USB_DEVICE_STUFF_ERR_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_TOKEN_REC_IN_EP1_INT_ENA</name>
              <description>The interrupt enable bit for the USB_DEVICE_IN_TOKEN_REC_IN_EP1_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_BUS_RESET_INT_ENA</name>
              <description>The interrupt enable bit for the USB_DEVICE_USB_BUS_RESET_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_EP1_ZERO_PAYLOAD_INT_ENA</name>
              <description>The interrupt enable bit for the USB_DEVICE_OUT_EP1_ZERO_PAYLOAD_INT interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_EP2_ZERO_PAYLOAD_INT_ENA</name>
              <description>The interrupt enable bit for the USB_DEVICE_OUT_EP2_ZERO_PAYLOAD_INT interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>Interrupt clear bits</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>JTAG_IN_FLUSH_INT_CLR</name>
              <description>Set this bit to clear the USB_DEVICE_JTAG_IN_FLUSH_INT interrupt.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SOF_INT_CLR</name>
              <description>Set this bit to clear the USB_DEVICE_JTAG_SOF_INT interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SERIAL_OUT_RECV_PKT_INT_CLR</name>
              <description>Set this bit to clear the USB_DEVICE_SERIAL_OUT_RECV_PKT_INT interrupt.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SERIAL_IN_EMPTY_INT_CLR</name>
              <description>Set this bit to clear the USB_DEVICE_SERIAL_IN_EMPTY_INT interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>PID_ERR_INT_CLR</name>
              <description>Set this bit to clear the USB_DEVICE_PID_ERR_INT interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CRC5_ERR_INT_CLR</name>
              <description>Set this bit to clear the USB_DEVICE_CRC5_ERR_INT interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CRC16_ERR_INT_CLR</name>
              <description>Set this bit to clear the USB_DEVICE_CRC16_ERR_INT interrupt.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>STUFF_ERR_INT_CLR</name>
              <description>Set this bit to clear the USB_DEVICE_STUFF_ERR_INT interrupt.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IN_TOKEN_REC_IN_EP1_INT_CLR</name>
              <description>Set this bit to clear the USB_DEVICE_IN_TOKEN_IN_EP1_INT interrupt.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>USB_BUS_RESET_INT_CLR</name>
              <description>Set this bit to clear the USB_DEVICE_USB_BUS_RESET_INT interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUT_EP1_ZERO_PAYLOAD_INT_CLR</name>
              <description>Set this bit to clear the USB_DEVICE_OUT_EP1_ZERO_PAYLOAD_INT interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OUT_EP2_ZERO_PAYLOAD_INT_CLR</name>
              <description>Set this bit to clear the USB_DEVICE_OUT_EP2_ZERO_PAYLOAD_INT interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONF0</name>
          <description>Configure 0 register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <resetValue>0x00004200</resetValue>
          <fields>
            <field>
              <name>PHY_SEL</name>
              <description>Select internal/external PHY</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EXCHG_PINS_OVERRIDE</name>
              <description>Enable software control USB D+ D- exchange</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EXCHG_PINS</name>
              <description>USB D+ D- exchange</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VREFH</name>
              <description>Control single-end input high threshold,1.76V to 2V, step 80mV</description>
              <bitOffset>3</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VREFL</name>
              <description>Control single-end input low threshold,0.8V to 1.04V, step 80mV</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VREF_OVERRIDE</name>
              <description>Enable software control input  threshold</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PAD_PULL_OVERRIDE</name>
              <description>Enable software control USB D+ D- pullup pulldown</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DP_PULLUP</name>
              <description>Control USB D+ pull up.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DP_PULLDOWN</name>
              <description>Control USB D+ pull down.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DM_PULLUP</name>
              <description>Control USB D- pull up.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DM_PULLDOWN</name>
              <description>Control USB D- pull down.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PULLUP_VALUE</name>
              <description>Control pull up value.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_PAD_ENABLE</name>
              <description>Enable USB pad function.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PHY_TX_EDGE_SEL</name>
              <description>0: TX output at clock negedge. 1: Tx output at clock posedge.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_JTAG_BRIDGE_EN</name>
              <description>Set this bit usb_jtag, the connection between usb_jtag and internal JTAG is disconnected, and MTMS, MTDI, MTCK are output through GPIO Matrix, MTDO is input through GPIO Matrix.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TEST</name>
          <description>USB Internal PHY test register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ENABLE</name>
              <description>Enable test of the USB pad</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_OE</name>
              <description>USB pad oen in test</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_DP</name>
              <description>USB D+ tx value in test</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_DM</name>
              <description>USB D- tx value in test</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_RCV</name>
              <description>USB differential rx value in test</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_DP</name>
              <description>USB D+ rx value in test</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_DM</name>
              <description>USB D- rx value in test</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>JFIFO_ST</name>
          <description>USB-JTAG FIFO status</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000044</resetValue>
          <fields>
            <field>
              <name>IN_FIFO_CNT</name>
              <description>JTAT in fifo counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_FIFO_EMPTY</name>
              <description>1: JTAG in fifo is empty.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_FIFO_FULL</name>
              <description>1: JTAG in fifo is full.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_FIFO_CNT</name>
              <description>JTAT out fifo counter.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_FIFO_EMPTY</name>
              <description>1: JTAG out fifo is empty.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_FIFO_FULL</name>
              <description>1: JTAG out fifo is full.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_FIFO_RESET</name>
              <description>Write 1 to reset JTAG in fifo.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_FIFO_RESET</name>
              <description>Write 1 to reset JTAG out fifo.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FRAM_NUM</name>
          <description>SOF frame number</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SOF_FRAME_INDEX</name>
              <description>Frame index of received SOF frame.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_EP0_ST</name>
          <description>IN Endpoint 0 status</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>IN_EP0_STATE</name>
              <description>State of IN Endpoint 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_EP0_WR_ADDR</name>
              <description>Write data address of IN endpoint 0.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_EP0_RD_ADDR</name>
              <description>Read data address of IN endpoint 0.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_EP1_ST</name>
          <description>IN Endpoint 1 status</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>IN_EP1_STATE</name>
              <description>State of IN Endpoint 1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_EP1_WR_ADDR</name>
              <description>Write data address of IN endpoint 1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_EP1_RD_ADDR</name>
              <description>Read data address of IN endpoint 1.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_EP2_ST</name>
          <description>IN Endpoint 2 status</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>IN_EP2_STATE</name>
              <description>State of IN Endpoint 2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_EP2_WR_ADDR</name>
              <description>Write data address of IN endpoint 2.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_EP2_RD_ADDR</name>
              <description>Read data address of IN endpoint 2.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IN_EP3_ST</name>
          <description>IN Endpoint 3 status</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>IN_EP3_STATE</name>
              <description>State of IN Endpoint 3.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_EP3_WR_ADDR</name>
              <description>Write data address of IN endpoint 3.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IN_EP3_RD_ADDR</name>
              <description>Read data address of IN endpoint 3.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_EP0_ST</name>
          <description>OUT Endpoint 0 status</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUT_EP0_STATE</name>
              <description>State of OUT Endpoint 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_EP0_WR_ADDR</name>
              <description>Write data address of OUT endpoint 0. When USB_DEVICE_SERIAL_OUT_RECV_PKT_INT is detected, there are USB_DEVICE_OUT_EP0_WR_ADDR-2 bytes data in OUT EP0.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_EP0_RD_ADDR</name>
              <description>Read data address of OUT endpoint 0.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_EP1_ST</name>
          <description>OUT Endpoint 1 status</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUT_EP1_STATE</name>
              <description>State of OUT Endpoint 1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_EP1_WR_ADDR</name>
              <description>Write data address of OUT endpoint 1. When USB_DEVICE_SERIAL_OUT_RECV_PKT_INT is detected, there are USB_DEVICE_OUT_EP1_WR_ADDR-2 bytes data in OUT EP1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_EP1_RD_ADDR</name>
              <description>Read data address of OUT endpoint 1.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_EP1_REC_DATA_CNT</name>
              <description>Data count in OUT endpoint 1 when one packet is received.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OUT_EP2_ST</name>
          <description>OUT Endpoint 2 status</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>OUT_EP2_STATE</name>
              <description>State of OUT Endpoint 2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_EP2_WR_ADDR</name>
              <description>Write data address of OUT endpoint 2. When USB_DEVICE_SERIAL_OUT_RECV_PKT_INT is detected, there are USB_DEVICE_OUT_EP2_WR_ADDR-2 bytes data in OUT EP2.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OUT_EP2_RD_ADDR</name>
              <description>Read data address of OUT endpoint 2.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MISC_CONF</name>
          <description>MISC register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CLK_EN</name>
              <description>1'h1: Force clock on for register. 1'h0: Support clock only when application writes registers.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MEM_CONF</name>
          <description>Power control</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000002</resetValue>
          <fields>
            <field>
              <name>USB_MEM_PD</name>
              <description>1: power down usb memory.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_MEM_CLK_EN</name>
              <description>1: Force clock on for usb memory.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>Version control register</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <resetValue>0x02101200</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>register version.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>USB_WRAP</name>
      <description>Peripheral USB_WRAP</description>
      <groupName>USB_WRAP</groupName>
      <baseAddress>0x60039000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xC</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>OTG_CONF</name>
          <description>USB OTG Wrapper Configure Register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x001C0000</resetValue>
          <fields>
            <field>
              <name>SRP_SESSEND_OVERRIDE</name>
              <description>This bit is used to enable the software over-ride of srp session end signal. 1'b0: the signal is controlled by the chip input. 1'b1: the signal is controlled by the software.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SRP_SESSEND_VALUE</name>
              <description>Software over-ride value of srp session end signal.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PHY_SEL</name>
              <description>Select internal external PHY. 1'b0: Select internal PHY. 1'b1: Select external PHY.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DFIFO_FORCE_PD</name>
              <description>Force the dfifo to go into low power mode. The data in dfifo will not lost.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBNCE_FLTR_BYPASS</name>
              <description>Bypass Debounce filters for avalid,bvalid,vbusvalid,session end, id signals</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EXCHG_PINS_OVERRIDE</name>
              <description>Enable software controlle USB D+ D- exchange</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EXCHG_PINS</name>
              <description>USB D+ D- exchange. 1'b0: don't change. 1'b1: exchange D+ D-</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VREFH</name>
              <description>Control single-end input high threshold,1.76V to 2V, step 80mV</description>
              <bitOffset>7</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VREFL</name>
              <description>Control single-end input low threshold,0.8V to 1.04V, step 80mV</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VREF_OVERRIDE</name>
              <description>Enable software controlle input  threshold</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PAD_PULL_OVERRIDE</name>
              <description>Enable software controlle USB D+ D- pullup pulldown</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DP_PULLUP</name>
              <description>Controlle USB D+ pullup</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DP_PULLDOWN</name>
              <description>Controlle USB D+ pulldown</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DM_PULLUP</name>
              <description>Controlle USB D+ pullup</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DM_PULLDOWN</name>
              <description>Controlle USB D+ pulldown</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PULLUP_VALUE</name>
              <description>Controlle pullup value. 1'b0: typical value is 2.4K. 1'b1: typical value is 1.2K.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_PAD_ENABLE</name>
              <description>Enable USB pad function</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AHB_CLK_FORCE_ON</name>
              <description>Force ahb clock always on</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PHY_CLK_FORCE_ON</name>
              <description>Force phy clock always on</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PHY_TX_EDGE_SEL</name>
              <description>Select phy tx signal output clock edge. 1'b0: negedge. 1'b1: posedge.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DFIFO_FORCE_PU</name>
              <description>Disable the dfifo to go into low power mode. The data in dfifo will not lost.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EN</name>
              <description>Disable auto clock gating of CSR registers</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TEST_CONF</name>
          <description>USB Internal PHY Testing Register</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TEST_ENABLE</name>
              <description>Enable test of the USB pad</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEST_USB_OE</name>
              <description>USB pad oen in test</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEST_TX_DP</name>
              <description>USB D+ tx value in test</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEST_TX_DM</name>
              <description>USB D- tx value in test</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEST_RX_RCV</name>
              <description>USB differential rx value in test</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TEST_RX_DP</name>
              <description>USB D+ rx value in test</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TEST_RX_DM</name>
              <description>USB D- rx value in test</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>Version Control Register</description>
          <addressOffset>0x3FC</addressOffset>
          <size>0x20</size>
          <resetValue>0x02102010</resetValue>
          <fields>
            <field>
              <name>USB_WRAP_DATE</name>
              <description>Date register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>WCL</name>
      <description>Peripheral WCL</description>
      <groupName>WCL</groupName>
      <baseAddress>0x600D0000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x160</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>Core_0_ENTRY_1_ADDR</name>
          <description>Core_0 Entry 1 address configuration Register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_ENTRY_1_ADDR</name>
              <description>Core_0 Entry 1 address from WORLD1 to WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_ENTRY_2_ADDR</name>
          <description>Core_0 Entry 2 address configuration Register</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_ENTRY_2_ADDR</name>
              <description>Core_0 Entry 2 address from WORLD1 to WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_ENTRY_3_ADDR</name>
          <description>Core_0 Entry 3 address configuration Register</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_ENTRY_3_ADDR</name>
              <description>Core_0 Entry 3 address from WORLD1 to WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_ENTRY_4_ADDR</name>
          <description>Core_0 Entry 4 address configuration Register</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_ENTRY_4_ADDR</name>
              <description>Core_0 Entry 4 address from WORLD1 to WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_ENTRY_5_ADDR</name>
          <description>Core_0 Entry 5 address configuration Register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_ENTRY_5_ADDR</name>
              <description>Core_0 Entry 5 address from WORLD1 to WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_ENTRY_6_ADDR</name>
          <description>Core_0 Entry 6 address configuration Register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_ENTRY_6_ADDR</name>
              <description>Core_0 Entry 6 address from WORLD1 to WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_ENTRY_7_ADDR</name>
          <description>Core_0 Entry 7 address configuration Register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_ENTRY_7_ADDR</name>
              <description>Core_0 Entry 7 address from WORLD1 to WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_ENTRY_8_ADDR</name>
          <description>Core_0 Entry 8 address configuration Register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_ENTRY_8_ADDR</name>
              <description>Core_0 Entry 8 address from WORLD1 to WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_ENTRY_9_ADDR</name>
          <description>Core_0 Entry 9 address configuration Register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_ENTRY_9_ADDR</name>
              <description>Core_0 Entry 9 address from WORLD1 to WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_ENTRY_10_ADDR</name>
          <description>Core_0 Entry 10 address configuration Register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_ENTRY_10_ADDR</name>
              <description>Core_0 Entry 10 address from WORLD1 to WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_ENTRY_11_ADDR</name>
          <description>Core_0 Entry 11 address configuration Register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_ENTRY_11_ADDR</name>
              <description>Core_0 Entry 11 address from WORLD1 to WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_ENTRY_12_ADDR</name>
          <description>Core_0 Entry 12 address configuration Register</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_ENTRY_12_ADDR</name>
              <description>Core_0 Entry 12 address from WORLD1 to WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_ENTRY_13_ADDR</name>
          <description>Core_0 Entry 13 address configuration Register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_ENTRY_13_ADDR</name>
              <description>Core_0 Entry 13 address from WORLD1 to WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_ENTRY_CHECK</name>
          <description>Core_0 Entry check configuration Register</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000002</resetValue>
          <fields>
            <field>
              <name>CORE_0_ENTRY_CHECK</name>
              <description>This filed is used to enable entry address check</description>
              <bitOffset>1</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_STATUSTABLE1</name>
          <description>Status register of world switch of entry 1</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_FROM_WORLD_1</name>
              <description>This bit is used to confirm world before enter entry 1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_FROM_ENTRY_1</name>
              <description>This filed is used to confirm in which entry before enter entry 1</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_CURRENT_1</name>
              <description>This bit is used to confirm whether the current state is in entry 1</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_STATUSTABLE2</name>
          <description>Status register of world switch of entry 2</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_FROM_WORLD_2</name>
              <description>This bit is used to confirm world before enter entry 2</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_FROM_ENTRY_2</name>
              <description>This filed is used to confirm in which entry before enter entry 2</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_CURRENT_2</name>
              <description>This bit is used to confirm whether the current state is in entry 2</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_STATUSTABLE3</name>
          <description>Status register of world switch of entry 3</description>
          <addressOffset>0x88</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_FROM_WORLD_3</name>
              <description>This bit is used to confirm world before enter entry 3</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_FROM_ENTRY_3</name>
              <description>This filed is used to confirm in which entry before enter entry 3</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_CURRENT_3</name>
              <description>This bit is used to confirm whether the current state is in entry 3</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_STATUSTABLE4</name>
          <description>Status register of world switch of entry 4</description>
          <addressOffset>0x8C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_FROM_WORLD_4</name>
              <description>This bit is used to confirm world before enter entry 4</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_FROM_ENTRY_4</name>
              <description>This filed is used to confirm in which entry before enter entry 4</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_CURRENT_4</name>
              <description>This bit is used to confirm whether the current state is in entry 4</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_STATUSTABLE5</name>
          <description>Status register of world switch of entry 5</description>
          <addressOffset>0x90</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_FROM_WORLD_5</name>
              <description>This bit is used to confirm world before enter entry 5</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_FROM_ENTRY_5</name>
              <description>This filed is used to confirm in which entry before enter entry 5</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_CURRENT_5</name>
              <description>This bit is used to confirm whether the current state is in entry 5</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_STATUSTABLE6</name>
          <description>Status register of world switch of entry 6</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_FROM_WORLD_6</name>
              <description>This bit is used to confirm world before enter entry 6</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_FROM_ENTRY_6</name>
              <description>This filed is used to confirm in which entry before enter entry 6</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_CURRENT_6</name>
              <description>This bit is used to confirm whether the current state is in entry 6</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_STATUSTABLE7</name>
          <description>Status register of world switch of entry 7</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_FROM_WORLD_7</name>
              <description>This bit is used to confirm world before enter entry 7</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_FROM_ENTRY_7</name>
              <description>This filed is used to confirm in which entry before enter entry 7</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_CURRENT_7</name>
              <description>This bit is used to confirm whether the current state is in entry 7</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_STATUSTABLE8</name>
          <description>Status register of world switch of entry 8</description>
          <addressOffset>0x9C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_FROM_WORLD_8</name>
              <description>This bit is used to confirm world before enter entry 8</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_FROM_ENTRY_8</name>
              <description>This filed is used to confirm in which entry before enter entry 8</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_CURRENT_8</name>
              <description>This bit is used to confirm whether the current state is in entry 8</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_STATUSTABLE9</name>
          <description>Status register of world switch of entry 9</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_FROM_WORLD_9</name>
              <description>This bit is used to confirm world before enter entry 9</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_FROM_ENTRY_9</name>
              <description>This filed is used to confirm in which entry before enter entry 9</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_CURRENT_9</name>
              <description>This bit is used to confirm whether the current state is in entry 9</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_STATUSTABLE10</name>
          <description>Status register of world switch of entry 10</description>
          <addressOffset>0xA4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_FROM_WORLD_10</name>
              <description>This bit is used to confirm world before enter entry 10</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_FROM_ENTRY_10</name>
              <description>This filed is used to confirm in which entry before enter entry 10</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_CURRENT_10</name>
              <description>This bit is used to confirm whether the current state is in entry 10</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_STATUSTABLE11</name>
          <description>Status register of world switch of entry 11</description>
          <addressOffset>0xA8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_FROM_WORLD_11</name>
              <description>This bit is used to confirm world before enter entry 11</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_FROM_ENTRY_11</name>
              <description>This filed is used to confirm in which entry before enter entry 11</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_CURRENT_11</name>
              <description>This bit is used to confirm whether the current state is in entry 11</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_STATUSTABLE12</name>
          <description>Status register of world switch of entry 12</description>
          <addressOffset>0xAC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_FROM_WORLD_12</name>
              <description>This bit is used to confirm world before enter entry 12</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_FROM_ENTRY_12</name>
              <description>This filed is used to confirm in which entry before enter entry 12</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_CURRENT_12</name>
              <description>This bit is used to confirm whether the current state is in entry 12</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_STATUSTABLE13</name>
          <description>Status register of world switch of entry 13</description>
          <addressOffset>0xB0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_FROM_WORLD_13</name>
              <description>This bit is used to confirm world before enter entry 13</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_FROM_ENTRY_13</name>
              <description>This filed is used to confirm in which entry before enter entry 13</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_0_CURRENT_13</name>
              <description>This bit is used to confirm whether the current state is in entry 13</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_STATUSTABLE_CURRENT</name>
          <description>Status register of statustable current</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_STATUSTABLE_CURRENT</name>
              <description>This field is used to quickly read and rewrite the current field of all STATUSTABLE registers,for example,bit 1 represents the current field of STATUSTABLE1,bit2 represents the current field of STATUSTABLE2</description>
              <bitOffset>1</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_MESSAGE_ADDR</name>
          <description>Clear writer_buffer write address configuration register</description>
          <addressOffset>0x100</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_MESSAGE_ADDR</name>
              <description>This field is used to set address that need to write when enter WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_MESSAGE_MAX</name>
          <description>Clear writer_buffer write number configuration register</description>
          <addressOffset>0x104</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_MESSAGE_MAX</name>
              <description>This filed is used to set the max value of clear write_buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_MESSAGE_PHASE</name>
          <description>Clear writer_buffer status register</description>
          <addressOffset>0x108</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_MESSAGE_MATCH</name>
              <description>This bit indicates whether the check is successful</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_MESSAGE_EXPECT</name>
              <description>This field indicates the data to be written next time</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_MESSAGE_DATAPHASE</name>
              <description>If this bit is 1, it means that is checking clear write_buffer operation,and is checking data</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_0_MESSAGE_ADDRESSPHASE</name>
              <description>If this bit is 1, it means that is checking clear write_buffer operation,and is checking address.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_World_TRIGGER_ADDR</name>
          <description>Core_0 trigger address configuration Register</description>
          <addressOffset>0x140</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_WORLD_TRIGGER_ADDR</name>
              <description>This field is used to configure the entry address from WORLD0 to WORLD1,when the CPU executes to this address,switch to WORLD1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_World_PREPARE</name>
          <description>Core_0 prepare world configuration Register</description>
          <addressOffset>0x144</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_WORLD_PREPARE</name>
              <description>This field to used to set world to enter,  2'b01 means WORLD0, 2'b10 means WORLD1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_World_UPDATE</name>
          <description>Core_0 configuration update register</description>
          <addressOffset>0x148</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_UPDATE</name>
              <description>This field is used to update configuration completed, can write any value,the hardware only checks the write operation of this register and does not case about its value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_World_Cancel</name>
          <description>Core_0 configuration cancel register</description>
          <addressOffset>0x14C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_WORLD_CANCEL</name>
              <description>This field is used to cancel switch world configuration,if the trigger address and update configuration complete,use this register to cancel world switch, jujst need write any value,the hardware only checks the write operation of this register and does not case about its value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_World_IRam0</name>
          <description>Core_0 Iram0 world register</description>
          <addressOffset>0x150</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_WORLD_IRAM0</name>
              <description>this field is used to read current world of Iram0 bus</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_World_DRam0_PIF</name>
          <description>Core_0 dram0 and PIF world register</description>
          <addressOffset>0x154</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_WORLD_DRAM0_PIF</name>
              <description>this field is used to read current world of Dram0 bus and PIF bus</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_World_Phase</name>
          <description>Core_0 world status register</description>
          <addressOffset>0x158</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_WORLD_PHASE</name>
              <description>This bit indicates whether is preparing to switch to WORLD1, 1 means value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_NMI_MASK_ENABLE</name>
          <description>Core_0 NMI mask enable register</description>
          <addressOffset>0x180</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_NMI_MASK_ENABLE</name>
              <description>this field is used to set NMI mask,it can write any value,when write this register,the hardware start masking NMI interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_NMI_MASK_TRIGGER_ADDR</name>
          <description>Core_0 NMI mask trigger address register</description>
          <addressOffset>0x184</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_NMI_MASK_TRIGGER_ADDR</name>
              <description>this field to used to set trigger address, when CPU executes to this address,NMI mask automatically fails</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_NMI_MASK_DISABLE</name>
          <description>Core_0 NMI mask disable register</description>
          <addressOffset>0x188</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_NMI_MASK_DISABLE</name>
              <description>this field is used to disable NMI mask,it will not take effect immediately,only when the CPU executes to the trigger address will it start to cancel NMI mask</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_NMI_MASK_CANCLE</name>
          <description>Core_0 NMI mask disable register</description>
          <addressOffset>0x18C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_NMI_MASK_CANCEL</name>
              <description>this field is used to cancel NMI mask disable function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_NMI_MASK</name>
          <description>Core_0 NMI mask register</description>
          <addressOffset>0x190</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_NMI_MASK</name>
              <description>this bit is used to mask NMI interrupt,it can directly mask NMI interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_0_NMI_MASK_PHASE</name>
          <description>Core_0 NMI mask phase register</description>
          <addressOffset>0x194</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_0_NMI_MASK_PHASE</name>
              <description>this bit is used to indicates whether the NMI interrupt is being masked, 1 means NMI interrupt is being masked</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_ENTRY_1_ADDR</name>
          <description>Core_1 Entry 1 address configuration Register</description>
          <addressOffset>0x400</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_ENTRY_1_ADDR</name>
              <description>Core_1 Entry 1 address from WORLD1 to WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_ENTRY_2_ADDR</name>
          <description>Core_1 Entry 2 address configuration Register</description>
          <addressOffset>0x404</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_ENTRY_2_ADDR</name>
              <description>Core_1 Entry 2 address from WORLD1 to WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_ENTRY_3_ADDR</name>
          <description>Core_1 Entry 3 address configuration Register</description>
          <addressOffset>0x408</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_ENTRY_3_ADDR</name>
              <description>Core_1 Entry 3 address from WORLD1 to WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_ENTRY_4_ADDR</name>
          <description>Core_1 Entry 4 address configuration Register</description>
          <addressOffset>0x40C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_ENTRY_4_ADDR</name>
              <description>Core_1 Entry 4 address from WORLD1 to WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_ENTRY_5_ADDR</name>
          <description>Core_1 Entry 5 address configuration Register</description>
          <addressOffset>0x410</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_ENTRY_5_ADDR</name>
              <description>Core_1 Entry 5 address from WORLD1 to WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_ENTRY_6_ADDR</name>
          <description>Core_1 Entry 6 address configuration Register</description>
          <addressOffset>0x414</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_ENTRY_6_ADDR</name>
              <description>Core_1 Entry 6 address from WORLD1 to WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_ENTRY_7_ADDR</name>
          <description>Core_1 Entry 7 address configuration Register</description>
          <addressOffset>0x418</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_ENTRY_7_ADDR</name>
              <description>Core_1 Entry 7 address from WORLD1 to WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_ENTRY_8_ADDR</name>
          <description>Core_1 Entry 8 address configuration Register</description>
          <addressOffset>0x41C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_ENTRY_8_ADDR</name>
              <description>Core_1 Entry 8 address from WORLD1 to WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_ENTRY_9_ADDR</name>
          <description>Core_1 Entry 9 address configuration Register</description>
          <addressOffset>0x420</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_ENTRY_9_ADDR</name>
              <description>Core_1 Entry 9 address from WORLD1 to WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_ENTRY_10_ADDR</name>
          <description>Core_1 Entry 10 address configuration Register</description>
          <addressOffset>0x424</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_ENTRY_10_ADDR</name>
              <description>Core_1 Entry 10 address from WORLD1 to WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_ENTRY_11_ADDR</name>
          <description>Core_1 Entry 11 address configuration Register</description>
          <addressOffset>0x428</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_ENTRY_11_ADDR</name>
              <description>Core_1 Entry 11 address from WORLD1 to WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_ENTRY_12_ADDR</name>
          <description>Core_1 Entry 12 address configuration Register</description>
          <addressOffset>0x42C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_ENTRY_12_ADDR</name>
              <description>Core_1 Entry 12 address from WORLD1 to WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_ENTRY_13_ADDR</name>
          <description>Core_1 Entry 13 address configuration Register</description>
          <addressOffset>0x430</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_ENTRY_13_ADDR</name>
              <description>Core_1 Entry 13 address from WORLD1 to WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_ENTRY_CHECK</name>
          <description>Core_1 Entry check configuration Register</description>
          <addressOffset>0x47C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000002</resetValue>
          <fields>
            <field>
              <name>CORE_1_ENTRY_CHECK</name>
              <description>This filed is used to enable entry address check</description>
              <bitOffset>1</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_STATUSTABLE1</name>
          <description>Status register of world switch of entry 1</description>
          <addressOffset>0x480</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_FROM_WORLD_1</name>
              <description>This bit is used to confirm world before enter entry 1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_FROM_ENTRY_1</name>
              <description>This filed is used to confirm in which entry before enter entry 1</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_CURRENT_1</name>
              <description>This bit is used to confirm whether the current state is in entry 1</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_STATUSTABLE2</name>
          <description>Status register of world switch of entry 2</description>
          <addressOffset>0x484</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_FROM_WORLD_2</name>
              <description>This bit is used to confirm world before enter entry 2</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_FROM_ENTRY_2</name>
              <description>This filed is used to confirm in which entry before enter entry 2</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_CURRENT_2</name>
              <description>This bit is used to confirm whether the current state is in entry 2</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_STATUSTABLE3</name>
          <description>Status register of world switch of entry 3</description>
          <addressOffset>0x488</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_FROM_WORLD_3</name>
              <description>This bit is used to confirm world before enter entry 3</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_FROM_ENTRY_3</name>
              <description>This filed is used to confirm in which entry before enter entry 3</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_CURRENT_3</name>
              <description>This bit is used to confirm whether the current state is in entry 3</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_STATUSTABLE4</name>
          <description>Status register of world switch of entry 4</description>
          <addressOffset>0x48C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_FROM_WORLD_4</name>
              <description>This bit is used to confirm world before enter entry 4</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_FROM_ENTRY_4</name>
              <description>This filed is used to confirm in which entry before enter entry 4</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_CURRENT_4</name>
              <description>This bit is used to confirm whether the current state is in entry 4</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_STATUSTABLE5</name>
          <description>Status register of world switch of entry 5</description>
          <addressOffset>0x490</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_FROM_WORLD_5</name>
              <description>This bit is used to confirm world before enter entry 5</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_FROM_ENTRY_5</name>
              <description>This filed is used to confirm in which entry before enter entry 5</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_CURRENT_5</name>
              <description>This bit is used to confirm whether the current state is in entry 5</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_STATUSTABLE6</name>
          <description>Status register of world switch of entry 6</description>
          <addressOffset>0x494</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_FROM_WORLD_6</name>
              <description>This bit is used to confirm world before enter entry 6</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_FROM_ENTRY_6</name>
              <description>This filed is used to confirm in which entry before enter entry 6</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_CURRENT_6</name>
              <description>This bit is used to confirm whether the current state is in entry 6</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_STATUSTABLE7</name>
          <description>Status register of world switch of entry 7</description>
          <addressOffset>0x498</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_FROM_WORLD_7</name>
              <description>This bit is used to confirm world before enter entry 7</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_FROM_ENTRY_7</name>
              <description>This filed is used to confirm in which entry before enter entry 7</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_CURRENT_7</name>
              <description>This bit is used to confirm whether the current state is in entry 7</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_STATUSTABLE8</name>
          <description>Status register of world switch of entry 8</description>
          <addressOffset>0x49C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_FROM_WORLD_8</name>
              <description>This bit is used to confirm world before enter entry 8</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_FROM_ENTRY_8</name>
              <description>This filed is used to confirm in which entry before enter entry 8</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_CURRENT_8</name>
              <description>This bit is used to confirm whether the current state is in entry 8</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_STATUSTABLE9</name>
          <description>Status register of world switch of entry 9</description>
          <addressOffset>0x4A0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_FROM_WORLD_9</name>
              <description>This bit is used to confirm world before enter entry 9</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_FROM_ENTRY_9</name>
              <description>This filed is used to confirm in which entry before enter entry 9</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_CURRENT_9</name>
              <description>This bit is used to confirm whether the current state is in entry 9</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_STATUSTABLE10</name>
          <description>Status register of world switch of entry 10</description>
          <addressOffset>0x4A4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_FROM_WORLD_10</name>
              <description>This bit is used to confirm world before enter entry 10</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_FROM_ENTRY_10</name>
              <description>This filed is used to confirm in which entry before enter entry 10</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_CURRENT_10</name>
              <description>This bit is used to confirm whether the current state is in entry 10</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_STATUSTABLE11</name>
          <description>Status register of world switch of entry 11</description>
          <addressOffset>0x4A8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_FROM_WORLD_11</name>
              <description>This bit is used to confirm world before enter entry 11</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_FROM_ENTRY_11</name>
              <description>This filed is used to confirm in which entry before enter entry 11</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_CURRENT_11</name>
              <description>This bit is used to confirm whether the current state is in entry 11</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_STATUSTABLE12</name>
          <description>Status register of world switch of entry 12</description>
          <addressOffset>0x4AC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_FROM_WORLD_12</name>
              <description>This bit is used to confirm world before enter entry 12</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_FROM_ENTRY_12</name>
              <description>This filed is used to confirm in which entry before enter entry 12</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_CURRENT_12</name>
              <description>This bit is used to confirm whether the current state is in entry 12</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_STATUSTABLE13</name>
          <description>Status register of world switch of entry 13</description>
          <addressOffset>0x4B0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_FROM_WORLD_13</name>
              <description>This bit is used to confirm world before enter entry 13</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_FROM_ENTRY_13</name>
              <description>This filed is used to confirm in which entry before enter entry 13</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CORE_1_CURRENT_13</name>
              <description>This bit is used to confirm whether the current state is in entry 13</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_STATUSTABLE_CURRENT</name>
          <description>Status register of statustable current</description>
          <addressOffset>0x4FC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_STATUSTABLE_CURRENT</name>
              <description>This field is used to quickly read and rewrite the current field of all STATUSTABLE registers,for example,bit 1 represents the current field of STATUSTABLE1</description>
              <bitOffset>1</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_MESSAGE_ADDR</name>
          <description>Clear writer_buffer write address configuration register</description>
          <addressOffset>0x500</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_MESSAGE_ADDR</name>
              <description>This field is used to set address that need to write when enter WORLD0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_MESSAGE_MAX</name>
          <description>Clear writer_buffer write number configuration register</description>
          <addressOffset>0x504</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_MESSAGE_MAX</name>
              <description>This filed is used to set the max value of clear write_buffer</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_MESSAGE_PHASE</name>
          <description>Clear writer_buffer status register</description>
          <addressOffset>0x508</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_MESSAGE_MATCH</name>
              <description>This bit indicates whether the check is successful</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_MESSAGE_EXPECT</name>
              <description>This field indicates the data to be written next time</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_MESSAGE_DATAPHASE</name>
              <description>If this bit is 1, it means that is checking clear write_buffer operation, and is checking data</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CORE_1_MESSAGE_ADDRESSPHASE</name>
              <description>If this bit is 1, it means that is checking clear write_buffer operation, and is checking address.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_World_TRIGGER_ADDR</name>
          <description>Core_1 trigger address configuration Register</description>
          <addressOffset>0x540</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_WORLD_TRIGGER_ADDR</name>
              <description>This field is used to configure the entry address from WORLD0 to WORLD1,when the CPU executes to this address,switch to WORLD1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_World_PREPARE</name>
          <description>Core_1 prepare world configuration Register</description>
          <addressOffset>0x544</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_WORLD_PREPARE</name>
              <description>This field to used to set world to enter,2'b01 means WORLD0, 2'b10 means WORLD1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_World_UPDATE</name>
          <description>Core_1 configuration update register</description>
          <addressOffset>0x548</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_UPDATE</name>
              <description>This field is used to update configuration completed, can write any value,the hardware only checks the write operation of this register and does not case about its value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_World_Cancel</name>
          <description>Core_1 configuration cancel register</description>
          <addressOffset>0x54C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_WORLD_CANCEL</name>
              <description>This field is used to cancel switch world configuration,if the trigger address and update configuration complete,can use this register to cancel world switch. can write any value, the hardware only checks the write operation of this register and does not case about its value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_World_IRam0</name>
          <description>Core_1 Iram0 world register</description>
          <addressOffset>0x550</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_WORLD_IRAM0</name>
              <description>this field is used to read current world of Iram0 bus</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_World_DRam0_PIF</name>
          <description>Core_1 dram0 and PIF world register</description>
          <addressOffset>0x554</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_WORLD_DRAM0_PIF</name>
              <description>this field is used to read current world of Dram0 bus and PIF bus</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_World_Phase</name>
          <description>Core_0 world status register</description>
          <addressOffset>0x558</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_WORLD_PHASE</name>
              <description>This bit indicates whether is preparing to switch to WORLD1,1 means value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_NMI_MASK_ENABLE</name>
          <description>Core_1 NMI mask enable register</description>
          <addressOffset>0x580</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_NMI_MASK_ENABLE</name>
              <description>this field is used to set NMI mask, it can write any value, when write this register,the hardware start masking NMI interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_NMI_MASK_TRIGGER_ADDR</name>
          <description>Core_1 NMI mask trigger addr register</description>
          <addressOffset>0x584</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_NMI_MASK_TRIGGER_ADDR</name>
              <description>this field to used to set trigger address</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_NMI_MASK_DISABLE</name>
          <description>Core_1 NMI mask disable register</description>
          <addressOffset>0x588</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_NMI_MASK_DISABLE</name>
              <description>this field is used to disable NMI mask, it will not take effect immediately,only when the CPU executes to the trigger address will it start to cancel NMI mask</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_NMI_MASK_CANCLE</name>
          <description>Core_1 NMI mask disable register</description>
          <addressOffset>0x58C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_NMI_MASK_CANCEL</name>
              <description>this field is used to cancel NMI mask disable function.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_NMI_MASK</name>
          <description>Core_1 NMI mask register</description>
          <addressOffset>0x590</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_NMI_MASK</name>
              <description>this bit is used to mask NMI interrupt,it can directly mask NMI interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Core_1_NMI_MASK_PHASE</name>
          <description>Core_1 NMI mask phase register</description>
          <addressOffset>0x594</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>CORE_1_NMI_MASK_PHASE</name>
              <description>this bit is used to indicates whether the NMI interrupt is being masked, 1 means NMI interrupt is being masked</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>XTS_AES</name>
      <description>XTS-AES-128 Flash Encryption</description>
      <groupName>XTS_AES</groupName>
      <baseAddress>0x600CC000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x60</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <dim>16</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>PLAIN_%s</name>
          <description>Plaintext register %s</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PLAIN_0</name>
              <description>Stores the nth 32-bit piece of plaintext.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LINESIZE</name>
          <description>XTS-AES line-size register</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>LINESIZE</name>
              <description>Configures the data size of one encryption.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DESTINATION</name>
          <description>XTS-AES destination register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DESTINATION</name>
              <description>Configures the type of the external memory. Currently, it must be set to 0, as the Manual Encryption block only supports flash encryption. Errors may occurs if users write 1. 0:flash. 1: external RAM.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PHYSICAL_ADDRESS</name>
          <description>physical address</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>PHYSICAL_ADDRESS</name>
              <description>Those bits stores the physical address. If linesize is 16-byte, the physical address should be aligned of 16 bytes. If linesize is 32-byte, the physical address should be aligned of 32 bytes. If linesize is 64-byte, the physical address should be aligned of 64 bytes.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRIGGER</name>
          <description>XTS-AES trigger register</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TRIGGER</name>
              <description>Write 1 to activate manual encryption.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RELEASE</name>
          <description>XTS-AES release control register</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RELEASE</name>
              <description>Write 1 to grant SPI1 access to encrypted result.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DESTROY</name>
          <description>XTS-AES destroy control register</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DESTROY</name>
              <description>Write 1 to destroy encrypted result.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATE</name>
          <description>XTS-AES status register</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>STATE</name>
              <description>Those bits indicates the status of the Manual Encryption block. 0X0 (XTS_AES_IDLE): idle. 0X1 (XTS_AES_BUSY): busy with encryption. 0X2 (XTS_AES_DONE): encryption is completed, but the encrypted result is not accessible to SPI. 0X3 (XTS_AES_AVAILABLE) encrypted result is accessible and available to SPI.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>XTS-AES version control register</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <resetValue>0x20200111</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>Manual Encryption block version information.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
  </peripherals>
</device>
