name: Boards Test - Remote trigger

# The workflow will run on remote dispatch with event-type set to "test-boards"
on:
  repository_dispatch:
    types: [test-boards]

permissions:
  contents: read

jobs:
  find-boards:
    runs-on: ubuntu-latest

    outputs:
      fqbns: ${{ env.FQBNS }}
      board-count: ${{ env.BOARD-COUNT }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.client_payload.branch }}

      - name: Get boards fqbns
        run: bash .github/scripts/find_all_boards.sh

  setup-chunks:
    needs: find-boards
    runs-on: ubuntu-latest
    if: needs.find-boards.outputs.fqbns != ''

    outputs:
      test-chunks: ${{ steps['set-test-chunks'].outputs['test-chunks'] }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.client_payload.branch }}

      - id: set-test-chunks
        name: Set Chunks
        run: echo "test-chunks<<EOF" >> $GITHUB_OUTPUT

          echo "$( jq -nc '${{ needs.find-boards.outputs.fqbns }} | [_nwise( ${{ needs.find-boards.outputs.board-count }}/15 | ceil)]')" >> $GITHUB_OUTPUT

          echo "EOF" >> $GITHUB_OUTPUT

  test-boards:
    needs: setup-chunks
    runs-on: ubuntu-latest

    env:
      REPOSITORY: |
        - source-path: '.'
          name: "espressif:esp32"

    strategy:
      fail-fast: false
      matrix:
        chunk: ${{ fromJSON(needs.setup-chunks.outputs['test-chunks']) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.client_payload.branch }}

      - name: Echo FQBNS to file
        run: echo "$FQBN" > fqbns.json
        env:
          FQBN: ${{ toJSON(matrix.chunk) }}

      - name: Make validation script executable
        run: chmod +x ./.github/scripts/validate_board.sh

      - name: Validate boards in chunk
        run: |
          echo "Starting board validation for chunk..."
          failed_boards=()
          
          # Extract board names from FQBNs (remove espressif:esp32: prefix)
          boards_json=$(cat fqbns.json)
          board_names=$(echo "$boards_json" | jq -r '.[]' | sed 's/espressif:esp32://')
          
          for board in $board_names; do
            echo "Validating board: $board"
            if ! ./.github/scripts/validate_board.sh "$board"; then
              echo "❌ Validation failed for board: $board"
              failed_boards+=("$board")
            else
              echo "✅ Validation passed for board: $board"
            fi
          done
          
          if [ ${#failed_boards[@]} -gt 0 ]; then
            echo "❌ Board validation failed for the following boards:"
            printf '  - %s\n' "${failed_boards[@]}"
            exit 1
          else
            echo "✅ All board validations in chunk passed!"
          fi

      - name: Compile sketch
        uses: P-R-O-C-H-Y/compile-sketches@a62f069b92dc8f5053da4ac439ea6d1950cf6379 # main
        with:
          platforms: |
            ${{ env.REPOSITORY }}
          multiple-fqbn: true
          multiple-fqbn-path: "fqbns.json"
          use-json-file: false
          enable-deltas-report: false
          enable-warnings-report: false
          cli-compile-flags: |
            - --warnings="all"
          sketch-paths: "- ./libraries/ESP32/examples/CI/CIBoardsTest/CIBoardsTest.ino"
