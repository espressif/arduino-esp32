name: Boards Test

# The workflow will run on schedule and labeled pull requests
on:
  pull_request:
    paths:
      - "boards.txt"
      - "libraries/ESP32/examples/CI/CIBoardsTest/CIBoardsTest.ino"
      - ".github/workflows/boards.yml"

permissions:
  contents: read

env:
  # It's convenient to set variables for values used multiple times in the workflow
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

jobs:
  find-boards:
    runs-on: ubuntu-latest

    outputs:
      fqbns: ${{ env.FQBNS }}

    steps:
      # This step makes the contents of the repository available to the workflow
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Get board name
        run: bash .github/scripts/find_new_boards.sh ${{ github.repository }} ${{github.base_ref}}

  test-boards:
    needs: find-boards
    runs-on: ubuntu-latest
    if: needs.find-boards.outputs.fqbns != ''

    env:
      REPOSITORY: |
        - source-path: '.'
          name: "espressif:esp32"

    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.find-boards.outputs.fqbns) }}

    steps:
      # This step makes the contents of the repository available to the workflow
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Validate board definition
        run: |
          board_name=$(echo ${{ matrix.fqbn }} | awk -F':' '{print $NF}')
          ./.github/scripts/validate_board.sh "$board_name"

      - name: Get libs cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          key: libs-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('package/package_esp32_index.template.json', 'tools/get.py') }}
          path: |
            ./tools/dist
            ./tools/esp32-arduino-libs
            ./tools/esptool
            ./tools/mk*
            ./tools/openocd-esp32
            ./tools/riscv32-*
            ./tools/xtensa-*

      - name: Compile sketch
        uses: P-R-O-C-H-Y/compile-sketches@a62f069b92dc8f5053da4ac439ea6d1950cf6379 # main
        with:
          platforms: |
            ${{ env.REPOSITORY }}
          fqbn: ${{ matrix.fqbn }}
          use-json-file: false
          enable-deltas-report: false
          enable-warnings-report: false
          cli-compile-flags: |
            - --warnings="all"
          exit-on-fail: true
          sketch-paths: "- ./libraries/ESP32/examples/CI/CIBoardsTest/CIBoardsTest.ino"
          verbose: true
